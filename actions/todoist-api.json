{
  "openapi": "3.1.0",
  "info": {
    "title": "Todoist API",
    "version": "1",
    "x-logo": {
      "url": "https://developer.todoist.com/images/td_logo-4f2a90df.svg"
    },
    "description": "# Developing with Todoist\n\nThanks for your interest in developing apps with Todoist. In this section\nwe will provide an overview of the API we offer and cover some common topics for\napplication development using them.\n\nYou can use our API for free, but depending on your Todoist account plan (or that of the authenticated user), some\nfeatures may be restricted.\n\nPlease consider subscribing to the [Todoist API mailing\nlist](https://groups.google.com/a/doist.com/g/todoist-api) to get important updates.\n\n## Our API\n\nOur API uses an approach that should be familiar to anyone with experience\ncalling [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.\n\nWe also have a special endpoint called `/sync`, which is used by our\nfirst-party clients to keep the data updated locally without having to make many\nseparate requests to the API. Anyone can use it, and some actions will only be\navailable via `/sync`. The format is unconventional compared to current API standards,\nbut it is our main driver for first-party apps.\n\n## Our SDKs\n\nOur Python and JavaScript SDKs streamline working with the Todoist API, and\ncan be installed from the main package registries for each ecosystem.\n\nFor instructions, examples, and reference documentation, visit their pages:\n\n- [Todoist Python SDK](https://doist.github.io/todoist-api-python/)\n- [Todoist TypeScript SDK](https://doist.github.io/todoist-api-typescript/)\n\n## Pagination\n\nPaginated endpoints are marked by having the `next_cursor` attribute in the response.\n\nWhen a response comes back with `next_cursor: null`, it means the endpoint is paginated\nbut there are no more pages to request data from.\n\nIf the cursor is `non-null`, there are more objects to return, and a new\nrequest is necessary to get the next page.\n\nThe `next_cursor` contains an _opaque_ string that shouldn't be modified in any\nway. It should be sent **as-is** in the `cursor` parameter along with the same\nparameters used in the previous request.\n\n## Integrations\n\nIntegrations can be created and updated [here](https://app.todoist.com/app_console).\n\nOnce done, they can also be submitted for evaluation and inclusion in [our\nofficial integrations list](https://www.todoist.com/integrations). This not\nonly serves as an opportunity to market your integration to our audience, but\nwill also serve as a way to help users get set up and familiar with your app quickly.\n\nTo get your integration evaluated, please submit it via [this\npage](https://doist.typeform.com/to/Vvq7kNcl?typeform-source=todoist.com/api/v1/docs).\n\nLost? Reach out to us at [submissions@doist.com](mailto:submissions@doist.com) anytime.\n"
  },
  "paths": {
    "/api/v1/templates/import_into_project_from_template_id": {
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Import Into Project From Template Id",
        "operationId": "import_into_project_from_template_id_api_v1_templates_import_into_project_from_template_id_post",
        "parameters": [
          {
            "name": "template_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__import_export__controllers__rest__Body__1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectImportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/templates/import_into_project_from_file": {
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Import Into Project From File",
        "description": "A template can be imported in an existing project, or in a newly created one.\n\nUpload a file suitable to be passed as a template to be imported into a project.",
        "operationId": "import_into_project_from_file_api_v1_templates_import_into_project_from_file_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__import_export__controllers__rest__Body__2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectImportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/templates/create_project_from_file": {
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Create Project From File",
        "description": "A template can be imported in an existing project, or in a newly created one.\n\nUpload a file suitable to be passed as a template to be imported into a project.",
        "operationId": "create_project_from_file_api_v1_templates_create_project_from_file_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__import_export__controllers__rest__Body__3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectImportCreateResponseWithObjects"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects/archived": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get Archived",
        "operationId": "get_archived_api_v1_projects_archived_get",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "exclusiveMinimum": 0,
              "description": "The number of objects to return in a page",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_Annotated_ProjectV1View__FieldInfo_annotation_NoneType__required_True__examples____id____name____child_order____parent_id____color____collapsed____is_archived____is_deleted____view_style_____"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/labels/shared": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Shared Labels",
        "description": "Returns a set of unique strings containing labels from active tasks.\n\nBy default, the names of a user's personal labels will also be included.\nThese can be excluded by passing the `omit_personal` parameter.",
        "operationId": "shared_labels_api_v1_labels_shared_get",
        "parameters": [
          {
            "name": "omit_personal",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Omit Personal"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "exclusiveMinimum": 0,
              "description": "The number of objects to return in a page",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_str_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/activities": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get Activity Logs",
        "description": "Get activity logs.\n\nThis endpoint returns a paginated list of activity logs for a given object type and ID.\nThe logs can be filtered by various parameters, including the parent project ID, parent item ID,\nand event type. The logs can also be annotated with additional information, such as the name of the\nproject or the content of an item or comment.",
        "operationId": "get_activity_logs_api_v1_activities_get",
        "parameters": [
          {
            "name": "object_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "project",
                    "item",
                    "note"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Object Type"
            }
          },
          {
            "name": "object_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Object Id"
            }
          },
          {
            "name": "parent_project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Project Id"
            }
          },
          {
            "name": "parent_item_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Item Id"
            }
          },
          {
            "name": "include_parent_object",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Parent Object"
            }
          },
          {
            "name": "include_child_objects",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Child Objects"
            }
          },
          {
            "name": "initiator_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Initiator Id"
            }
          },
          {
            "name": "initiator_id_null",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Initiator Id Null"
            }
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Event Type"
            }
          },
          {
            "name": "ensure_last_state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Ensure Last State"
            }
          },
          {
            "name": "annotate_notes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Annotate Notes"
            }
          },
          {
            "name": "annotate_parents",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Annotate Parents"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "exclusiveMinimum": 0,
              "description": "The number of objects to return in a page",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Object Event Types"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_ActivityEvents_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create Project",
        "description": "Creates a new project and returns it",
        "operationId": "create_project_api_v1_projects_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__projects__Body__1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PersonalProjectSyncView"
                    },
                    {
                      "$ref": "#/components/schemas/WorkspaceProjectSyncView"
                    }
                  ],
                  "title": "Response Create Project Api V1 Projects Post",
                  "description": "Can be either a personal or a workspace project."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get Projects",
        "description": "Returns a list containing all active user projects",
        "operationId": "get_projects_api_v1_projects_get",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "exclusiveMinimum": 0,
              "description": "The number of objects to return in a page",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_Annotated_Union_PersonalProjectSyncView__WorkspaceProjectSyncView___FieldInfo_annotation_NoneType__required_True__title__Project_object______"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/sections": {
      "post": {
        "tags": [
          "Sections"
        ],
        "summary": "Create Section",
        "description": "Create a new section",
        "operationId": "create_section_api_v1_sections_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__sections__Body__1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectionSyncView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Sections"
        ],
        "summary": "Get Sections",
        "description": "Return a list of all active sections for the user",
        "operationId": "get_sections_api_v1_sections_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "exclusiveMinimum": 0,
              "description": "The number of objects to return in a page",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_SectionSyncView_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/comments": {
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Create Comment",
        "description": "Creates a new comment on a project or task and returns it.\n\nOne of `task_id` or `project_id` arguments is required.",
        "operationId": "create_comment_api_v1_comments_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__comments__Body__1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteSyncView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get Comments",
        "description": "Returns a list of all comments for a given `task_id` or `project_id`.\n\nOne of `task_id` or `project_id` arguments is required.",
        "operationId": "get_comments_api_v1_comments_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "String ID of the project",
              "examples": [
                "6XGgm6PHrGgMpCFX"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "task_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "String ID of the task",
              "examples": [
                "6XGgmFVcrG5RRjVr"
              ],
              "title": "Task Id"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "exclusiveMinimum": 0,
              "description": "The number of objects to return in a page",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_NoteSyncView_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/emails": {
      "delete": {
        "tags": [
          "Emails"
        ],
        "summary": "Email Disable",
        "description": "Disable the current email to a Todoist object",
        "operationId": "email_disable_api_v1_emails_delete",
        "parameters": [
          {
            "name": "obj_type",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EmailObjectType"
                },
                {
                  "$ref": "#/components/schemas/EmailObjectTypePre9221"
                }
              ],
              "title": "Obj Type"
            }
          },
          {
            "name": "obj_id",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Obj Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_StatusOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Emails"
        ],
        "summary": "Email Get Or Create",
        "description": "Get or create an email to a Todoist object,\ncurrently only projects and tasks are supported.",
        "operationId": "email_get_or_create_api_v1_emails_put",
        "parameters": [
          {
            "name": "obj_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EmailObjectType"
            }
          },
          {
            "name": "obj_id",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Obj Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_EmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Get Labels",
        "operationId": "get_labels_api_v1_labels_get",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "exclusiveMinimum": 0,
              "description": "The number of objects to return in a page",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_LabelRestView_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Create Label",
        "operationId": "create_label_api_v1_labels_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__labels__Body__4"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelRestView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create Task",
        "operationId": "create_task_api_v1_tasks_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__tasks__Body__1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSyncView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get Tasks",
        "description": "Returns a paginated list containing all active tasks",
        "operationId": "get_tasks_api_v1_tasks_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "section_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Section Id"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Id"
            }
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter tasks by label name",
              "title": "Label"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "A list of the task IDs to retrieve, this should be a comma separated list",
              "title": "Ids"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "exclusiveMinimum": 0,
              "description": "The number of objects to return in a page",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_ItemSyncView_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User Info",
        "operationId": "user_info_api_v1_user_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response User Info Api V1 User Get"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/invitations/delete": {
      "post": {
        "tags": [
          "Workspace"
        ],
        "summary": "Delete Invitation",
        "description": "Deletes a workspace invitation. Only admins can delete invitations.",
        "operationId": "delete_invitation_api_v1_workspaces_invitations_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__sync__rest__workspaces__Body__1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceInvitationView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/invitations/all": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "All Invitations",
        "description": "Return a list containing details of all pending invitation to a workspace.\n\nThis list is not paginated. All workspace members can access this list.",
        "operationId": "all_invitations_api_v1_workspaces_invitations_all_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceInvitationView"
                  },
                  "title": "Response All Invitations Api V1 Workspaces Invitations All Get"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/invitations/{invite_code}/accept": {
      "put": {
        "tags": [
          "Workspace"
        ],
        "summary": "Accept Invitation",
        "description": "Accept a workspace invitation. Usable by authenticated users only.",
        "operationId": "accept_invitation_api_v1_workspaces_invitations__invite_code__accept_put",
        "parameters": [
          {
            "name": "invite_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "An opaque string representing an invite code. This invitation code is sent to a user via email and is exclusive for the user.",
              "title": "Invite Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceInvitationView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/invitations/{invite_code}/reject": {
      "put": {
        "tags": [
          "Workspace"
        ],
        "summary": "Reject Invitation",
        "description": "Reject a workspace invitation. Usable by authenticated users only.",
        "operationId": "reject_invitation_api_v1_workspaces_invitations__invite_code__reject_put",
        "parameters": [
          {
            "name": "invite_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "An opaque string representing an invite code. This invitation code is sent to a user via email and is exclusive for the user.",
              "title": "Invite Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceInvitationView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}/projects/archived": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "Archived Projects",
        "operationId": "archived_projects_api_v1_workspaces__workspace_id__projects_archived_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_ProjectsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/{workspace_id}/projects/active": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "Active Projects",
        "description": "Returns all active workspace projects, including those visible but not joined by the user.\n\n_For guests, returns all joined workspace projects only._",
        "operationId": "active_projects_api_v1_workspaces__workspace_id__projects_active_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_ProjectsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/labels/shared/remove": {
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Shared Labels Remove",
        "description": "Remove the given shared label from all active tasks",
        "operationId": "shared_labels_remove_api_v1_labels_shared_remove_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__labels__Body__1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/labels/shared/rename": {
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Shared Labels Rename",
        "description": "Rename the given shared label from all active tasks",
        "operationId": "shared_labels_rename_api_v1_labels_shared_rename_post",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__labels__Body__2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tasks/completed/by_completion_date": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Tasks Completed By Completion Date",
        "description": "Retrieves a list of completed tasks strictly limited by the specified completion\ndate range (up to 3 months).\n\nIt can retrieve completed items:\n\n- From all the projects the user has joined in a workspace\n- From all the projects of the user\n- That match many [supported\n  filters](https://todoist.com/help/articles/introduction-to-filters-V98wIH)\n\nBy default, the response is limited to a page containing a maximum of 50 items\n(configurable using `limit`).\n\nSubsequent pages of results can be fetched by using the `next_cursor` value from the\nresponse as the `cursor` value for the next request.",
        "operationId": "tasks_completed_by_completion_date_api_v1_tasks_completed_by_completion_date_get",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Since"
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Until"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workspace Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "section_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Section Id"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Id"
            }
          },
          {
            "name": "filter_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1024
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filter Query"
            }
          },
          {
            "name": "filter_lang",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filter Lang"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksCompletedDateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tasks/completed/by_due_date": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Tasks Completed By Due Date",
        "description": "Retrieves a list of completed items strictly limited by the specified due date range\n(up to 6 weeks).\n\nIt can retrieve completed items:\n\n- From within a project, section, or parent item\n- From all the projects the user has joined in a workspace\n- From all the projects of the user\n- That match many [supported\n  filters](https://todoist.com/help/articles/introduction-to-filters-V98wIH)\n\nBy default, the response is limited to a page containing a maximum of 50 items\n(configurable using `limit`).\n\nSubsequent pages of results can be fetched by using the `next_cursor` value from the\nresponse as the `cursor` value for the next request.",
        "operationId": "tasks_completed_by_due_date_api_v1_tasks_completed_by_due_date_get",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Since"
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Until"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workspace Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "section_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Section Id"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Id"
            }
          },
          {
            "name": "filter_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1024
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filter Query"
            }
          },
          {
            "name": "filter_lang",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filter Lang"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksCompletedDateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tasks/completed/stats": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Productivity Stats",
        "operationId": "get_productivity_stats_api_v1_tasks_completed_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Productivity Stats Api V1 Tasks Completed Stats Get"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/collaborators": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get Project Collaborators",
        "operationId": "get_project_collaborators_api_v1_projects__project_id__collaborators_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "exclusiveMinimum": 0,
              "description": "The number of objects to return in a page",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_Collaborator_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/unarchive": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Unarchive Project",
        "description": "Marks a previously archived project as active again. For personal projects, this\nwill make the project visible again for the initiating user. For workspace projects,\nthis will make the project visible again for all applicable workspace users.",
        "operationId": "unarchive_project_api_v1_projects__project_id__unarchive_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PersonalProjectSyncView"
                    },
                    {
                      "$ref": "#/components/schemas/WorkspaceProjectSyncView"
                    }
                  ],
                  "title": "Response Unarchive Project Api V1 Projects  Project Id  Unarchive Post",
                  "description": "Can be either a personal or a workspace project."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/archive": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Archive Project",
        "description": "Marks a project as archived. For personal projects, this will archive it just for\nthe initiating user (leaving it visible to any other collaborators). For workspace\nprojects, this will archive it for all workspace users, removing it from view.",
        "operationId": "archive_project_api_v1_projects__project_id__archive_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PersonalProjectSyncView"
                    },
                    {
                      "$ref": "#/components/schemas/WorkspaceProjectSyncView"
                    }
                  ],
                  "title": "Response Archive Project Api V1 Projects  Project Id  Archive Post",
                  "description": "Can be either a personal or a workspace project."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/access_tokens/migrate_personal_token": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Migrate Personal Token",
        "description": "Tokens obtained via the old email/password authentication method can be\nmigrated to the new OAuth access token. Migrating your users' personal tokens\nwill allow users to see your app in their Todoist Settings page and give them\nthe ability to manage their app authorization.\n\nA successful response has `200 OK` status and `application/json` Content-Type.",
        "operationId": "migrate_personal_token_api_v1_access_tokens_migrate_personal_token_post",
        "parameters": [
          {
            "name": "personal_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Token obtained from the email/password authentication",
              "title": "Personal Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__app_platform__controllers__access_token__Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_MigratePersonalTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/plan_details": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "Plan Details",
        "description": "Lists details of the workspace's current plan and usage",
        "operationId": "plan_details_api_v1_workspaces_plan_details_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_PlanDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/invitations": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "Invitations",
        "description": "Return a list of user emails who have a pending invitation to a workspace.\n\nThe list is not paginated. All workspace members can access this list.",
        "operationId": "invitations_api_v1_workspaces_invitations_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Email of the invitation.",
                    "examples": [
                      "example@email.org"
                    ]
                  },
                  "title": "Response Invitations Api V1 Workspaces Invitations Get"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/users": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "summary": "Get Workspaces Users",
        "description": "Returns all workspace_users for a given workspace if workspace_id is\nprovided. Otherwise, returns all workspace_users for all workspaces that\nthe requesting user is part of.\n\n_Not accessible by guests._",
        "operationId": "get_workspaces_users_api_v1_workspaces_users_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workspace Id"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_UsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/join": {
      "post": {
        "tags": [
          "Workspace"
        ],
        "summary": "Join",
        "description": "Join a workspace via link or via workspace ID, if the user can auto-join\nthe workspace by domain.\n\n## Joining by Domain\nThis is possible if:\n- The user is verified\n- The user has a user e-mail belonging to a domain that is set\n  as a domain name for a workspace\n- That workspace has the auto-join by domain feature enabled",
        "operationId": "join_api_v1_workspaces_join_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__sync__rest__workspaces__Body__2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceUserView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/workspaces/logo": {
      "post": {
        "tags": [
          "Workspace"
        ],
        "summary": "Update Logo",
        "description": "Upload an image to be used as the workspace logo. Similar to a user’s\navatar. If `delete` is set to true, it removes the logo completely and does\nnot return any `logo_*` attribute.",
        "operationId": "update_logo_api_v1_workspaces_logo_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__sync__rest__workspaces__Body__3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Update Logo Api V1 Workspaces Logo Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/templates/file": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Export As File",
        "description": "Get a template for a project as a CSV file",
        "operationId": "export_as_file_api_v1_templates_file_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "use_relative_dates",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Use Relative Dates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/templates/url": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Export As Url",
        "description": "Get a template for a project as a shareable URL.\n\nThe URL can then be passed to `https://todoist.com/api/v1/import/project_from_url?t_url=<url>`\nto make a shareable template.",
        "operationId": "export_as_url_api_v1_templates_url_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "use_relative_dates",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Use Relative Dates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileURLResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/join": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Join",
        "description": "_Only used for workspaces_\n\nThis endpoint is used to join a workspace project by a workspace_user and\nis only usable by the workspace user.",
        "operationId": "join_api_v1_projects__project_id__join_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_GetDataV2Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/backups/download": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "Download Backup",
        "operationId": "download_backup_api_v1_backups_download_get",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Backup URL",
              "examples": [
                "https://api.todoist.com/api/v1/backups/download?file=12345678901234567890123456789012.zip"
              ],
              "title": "File"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tasks/filter": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get Tasks By Filter",
        "operationId": "get_tasks_by_filter_api_v1_tasks_filter_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 1024,
              "description": "Filter by any [supported filter](https://todoist.com/help/articles/introduction-to-filters-V98wIH). Multiple filters (using the comma `,` operator) are not supported.",
              "title": "Query"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "IETF language tag defining what language filter is written in, if differs from default English",
              "title": "Lang"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$",
                  "description": "An opaque string used as the cursor for pagination. Must be used with the same parameters from the previous request",
                  "examples": [
                    "14540000435w8hj8pXXwPQJJch.X9DBH8ya2Xenok55"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "exclusiveMinimum": 0,
              "description": "The number of objects to return in a page",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedList_ItemSyncView_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tasks/quick": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Quick Add",
        "description": "Add a new task using the Quick Add implementation similar to that used in\nthe official clients",
        "operationId": "quick_add_api_v1_tasks_quick_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__sync__rest__quick__Body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Quick Add Api V1 Tasks Quick Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/reopen": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Reopen Task",
        "description": "Reopens a task.\n\nAny ancestor tasks or sections will also be marked as uncomplete and\nrestored from history.\n\nThe reinstated tasks and sections will appear at the end of the list within\ntheir parent, after any previously active tasks.",
        "operationId": "reopen_task_api_v1_tasks__task_id__reopen_post",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/close": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Close Task",
        "description": "Closes a task.\n\nThe command performs in the same way as our official clients:\n\nRegular tasks are marked complete and moved to history, along with their\nsubtasks. Tasks with [recurring due\ndates](https://todoist.com/help/articles/introduction-to-recurring-dates-YUYVJJAV)\nwill be scheduled to their next occurrence.",
        "operationId": "close_task_api_v1_tasks__task_id__close_post",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/move": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Move Task",
        "description": "Moves task to another project, section or parent.",
        "operationId": "move_task_api_v1_tasks__task_id__move_post",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__tasks__Body__2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSyncView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/id_mappings/{obj_name}/{obj_ids}": {
      "get": {
        "tags": [
          "Ids"
        ],
        "summary": "Id Mappings",
        "description": "Translates IDs from v1 to v2 or vice versa.\n\nIDs are not unique across object types, hence the need to specify the object type.\n\nWhen V1 ids are provided, the function will return the corresponding V2\nids, if they exist, and vice versa.\n\nWhen no objects are found, an empty list is returned.",
        "operationId": "id_mappings_api_v1_id_mappings__obj_name___obj_ids__get",
        "parameters": [
          {
            "name": "obj_name",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "sections",
                "tasks",
                "comments",
                "reminders",
                "location_reminders",
                "projects"
              ],
              "type": "string",
              "title": "Obj Name"
            }
          },
          {
            "name": "obj_ids",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A comma-separated list of IDs",
              "examples": [
                "6VfWjjjFg2xqX6Pa",
                "918273645",
                "6VfWjjjFg2xqX6Pa,6WMVPf8Hm8JP6mC8"
              ],
              "title": "Obj Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IDMapping"
                  },
                  "title": "Response Id Mappings Api V1 Id Mappings  Obj Name   Obj Ids  Get"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects/{project_id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get Project",
        "description": "Returns a project object related to the given ID",
        "operationId": "get_project_api_v1_projects__project_id__get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PersonalProjectSyncView"
                    },
                    {
                      "$ref": "#/components/schemas/WorkspaceProjectSyncView"
                    }
                  ],
                  "title": "Response Get Project Api V1 Projects  Project Id  Get",
                  "description": "Can be either a personal or a workspace project."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Update Project",
        "description": "Updated a project and return it",
        "operationId": "update_project_api_v1_projects__project_id__post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__projects__Body__2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PersonalProjectSyncView"
                    },
                    {
                      "$ref": "#/components/schemas/WorkspaceProjectSyncView"
                    }
                  ],
                  "title": "Response Update Project Api V1 Projects  Project Id  Post",
                  "description": "Can be either a personal or a workspace project."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete Project",
        "description": "Deletes a project and all of its sections and tasks.",
        "operationId": "delete_project_api_v1_projects__project_id__delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/sections/{section_id}": {
      "get": {
        "tags": [
          "Sections"
        ],
        "summary": "Get Section",
        "description": "Return the section for the given section ID",
        "operationId": "get_section_api_v1_sections__section_id__get",
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Section Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectionSyncView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Sections"
        ],
        "summary": "Update Section",
        "operationId": "update_section_api_v1_sections__section_id__post",
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Section Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__sections__Body__2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectionSyncView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Sections"
        ],
        "summary": "Delete Section",
        "description": "Delete the section and all of its tasks",
        "operationId": "delete_section_api_v1_sections__section_id__delete",
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Section Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/comments/{comment_id}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get Comment",
        "description": "Returns a single comment by ID",
        "operationId": "get_comment_api_v1_comments__comment_id__get",
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "String ID of the comment",
              "examples": [
                "6XGgmFVcrG5RRjVr"
              ],
              "title": "Comment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteSyncView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Update Comment",
        "description": "Update a comment by ID and returns its content",
        "operationId": "update_comment_api_v1_comments__comment_id__post",
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "description": "String ID of the comment",
              "examples": [
                "6XGgmFQrx44wfGHr"
              ],
              "title": "Comment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__comments__Body__2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/NoteSyncView"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Update Comment Api V1 Comments  Comment Id  Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Delete Comment",
        "description": "Delete a comment by ID",
        "operationId": "delete_comment_api_v1_comments__comment_id__delete",
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "description": "String ID of the comment",
              "examples": [
                "6XGgmFQrx44wfGHr"
              ],
              "title": "Comment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get Task",
        "description": "Returns a single active (non-completed) task by ID",
        "operationId": "get_task_api_v1_tasks__task_id__get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSyncView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update Task",
        "operationId": "update_task_api_v1_tasks__task_id__post",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Task Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__tasks__Body__3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSyncView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete Task",
        "operationId": "delete_task_api_v1_tasks__task_id__delete",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "exclusiveMaximum": 99999999999,
                  "exclusiveMinimum": 0
                }
              ],
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/notification_setting": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update Notification Setting",
        "operationId": "update_notification_setting_api_v1_notification_setting_put",
        "parameters": [
          {
            "name": "notification_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/NotificationType"
            }
          },
          {
            "name": "service",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/NotificationChannel"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          },
          {
            "name": "dont_notify",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dont Notify"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  },
                  "examples": [
                    {
                      "user_left_project": {
                        "notify_push": true,
                        "notify_email": true
                      }
                    }
                  ],
                  "title": "Response Update Notification Setting Api V1 Notification Setting Put"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/access_tokens": {
      "delete": {
        "tags": [
          "Authorization"
        ],
        "summary": "Revoke Access Token Api",
        "description": "Revoke the access tokens obtained via OAuth",
        "operationId": "revoke_access_token_api_api_v1_access_tokens_delete",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique Client ID of the Todoist application that you registered",
              "title": "Client Id"
            }
          },
          {
            "name": "client_secret",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique Client Secret of the Todoist application that you registered",
              "title": "Client Secret"
            }
          },
          {
            "name": "access_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Access token obtained from OAuth authentication",
              "title": "Access Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "Get Backups",
        "description": "Todoist creates a backup archive of users' data on a daily basis. Backup\narchives can also be accessed from the web app (Todoist Settings ->\nBackups).\n\nWhen using the default token, with the `data:read_write` scope, and having MFA enabled, the MFA\ntoken is required and must be provided with the request. To be able to use this endpoint without an\nMFA token, your token must have the `backups:read` scope.",
        "operationId": "get_backups_api_v1_backups_get",
        "parameters": [
          {
            "name": "mfa_token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Mfa Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/_BackupResponse"
                  },
                  "title": "Response Get Backups Api V1 Backups Get"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/uploads": {
      "delete": {
        "tags": [
          "Uploads"
        ],
        "summary": "Delete Upload",
        "operationId": "delete_upload_api_v1_uploads_delete",
        "parameters": [
          {
            "name": "file_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "const": "ok",
                  "type": "string",
                  "title": "Response Delete Upload Api V1 Uploads Delete"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Uploads"
        ],
        "summary": "Upload File",
        "operationId": "upload_file_api_v1_uploads_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__sync__rest__controller__Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/labels/{label_id}": {
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Delete Label",
        "description": "Deletes a personal label. All instances of the label will be removed from tasks",
        "operationId": "delete_label_api_v1_labels__label_id__delete",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Label Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Get Label",
        "operationId": "get_label_api_v1_labels__label_id__get",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Label Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelRestView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Update Label",
        "operationId": "update_label_api_v1_labels__label_id__post",
        "parameters": [
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Label Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/todoist__apps__api__rest__labels__Body__3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelRestView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityEvents": {
        "properties": {
          "object_type": {
            "type": "string",
            "title": "Object Type"
          },
          "object_id": {
            "type": "string",
            "title": "Object Id"
          },
          "v2_object_id": {
            "type": "string",
            "title": "V2 Object Id"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "event_date": {
            "type": "string",
            "format": "date-time",
            "title": "Event Date"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "parent_project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Project Id"
          },
          "v2_parent_project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "V2 Parent Project Id"
          },
          "parent_item_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Item Id"
          },
          "v2_parent_item_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "V2 Parent Item Id"
          },
          "initiator_id": {
            "anyOf": [
              {
                "type": "string",
                "description": "The ID of the user who is responsible for the event, which only makes sense in shared projects, items and notes, and is null for non-shared objects"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initiator Id"
          },
          "extra_data_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data Id"
          },
          "extra_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Data",
            "description": "This object contains at least the name of the project, or the content of an item or comment, and optionally the last_name if a project was renamed, the last_content if an item or note was renamed, the due_date and last_due_date if an item's due date changed, the responsible_uid and last_responsible_uid if an item's responsible uid changed, the description and last_description if an item's description changed, and the client that caused the logging of the event"
          }
        },
        "type": "object",
        "required": [
          "object_type",
          "object_id",
          "v2_object_id",
          "event_type",
          "event_date"
        ],
        "title": "ActivityEvents"
      },
      "Collaborator": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The user's ID",
            "examples": [
              "0192837465"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The user's full name",
            "examples": [
              "John Smith"
            ]
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The user's email address",
            "examples": [
              "email@example.org"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "email"
        ],
        "title": "Collaborator"
      },
      "CollaboratorRole": {
        "type": "string",
        "enum": [
          "CREATOR",
          "ADMIN",
          "READ_WRITE",
          "READ_AND_COMMENT",
          "READ_ONLY"
        ],
        "title": "CollaboratorRole",
        "description": "User role in the project. For personal project the role should be always \"CREATOR\"\nUser role for projects v1 maybe specified as \"CREATOR\" or \"ADMIN\", because in the\npast there was no permissions."
      },
      "EmailObjectType": {
        "type": "string",
        "enum": [
          "project",
          "project_comments",
          "task"
        ],
        "title": "EmailObjectType"
      },
      "EmailObjectTypePre9221": {
        "type": "string",
        "enum": [
          "project",
          "project_comments",
          "item"
        ],
        "title": "EmailObjectTypePre9221"
      },
      "ExposedCollaboratorSyncView": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "timezone": {
            "type": "string",
            "title": "Timezone"
          },
          "image_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Id"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          }
        },
        "type": "object",
        "required": [
          "id",
          "full_name",
          "email",
          "timezone",
          "image_id"
        ],
        "title": "ExposedCollaboratorSyncView"
      },
      "FileURLResponse": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "file_url": {
            "type": "string",
            "title": "File Url"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "file_url"
        ],
        "title": "FileURLResponse"
      },
      "FolderView": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "default": ""
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "default": false
          },
          "id": {
            "type": "string",
            "title": "Id",
            "default": "0"
          },
          "default_order": {
            "type": "integer",
            "title": "Default Order",
            "default": 0
          },
          "child_order": {
            "type": "integer",
            "title": "Child Order",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "workspace_id"
        ],
        "title": "FolderView"
      },
      "FormattedPrice": {
        "properties": {
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "unit_amount": {
            "type": "integer",
            "title": "Unit Amount"
          },
          "tax_behavior": {
            "type": "string",
            "title": "Tax Behavior"
          }
        },
        "type": "object",
        "required": [
          "currency",
          "unit_amount",
          "tax_behavior"
        ],
        "title": "FormattedPrice"
      },
      "FormattedPriceListing": {
        "properties": {
          "billing_cycle": {
            "type": "string",
            "enum": [
              "monthly",
              "yearly"
            ],
            "title": "Billing Cycle"
          },
          "prices": {
            "items": {
              "$ref": "#/components/schemas/FormattedPrice"
            },
            "type": "array",
            "title": "Prices"
          }
        },
        "type": "object",
        "required": [
          "billing_cycle",
          "prices"
        ],
        "title": "FormattedPriceListing"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IDMapping": {
        "properties": {
          "old_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Id",
            "examples": [
              "918273645"
            ]
          },
          "new_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Id",
            "examples": [
              "6VfWjjjFg2xqX6Pa"
            ]
          }
        },
        "type": "object",
        "required": [
          "old_id",
          "new_id"
        ],
        "title": "IDMapping"
      },
      "ItemSyncView": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "section_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Section Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "added_by_uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Added By Uid"
          },
          "assigned_by_uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned By Uid"
          },
          "responsible_uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Responsible Uid"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Labels"
          },
          "deadline": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline"
          },
          "duration": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "checked": {
            "type": "boolean",
            "title": "Checked",
            "examples": [
              false
            ]
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "examples": [
              false
            ]
          },
          "added_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Added At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "due": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "child_order": {
            "type": "integer",
            "title": "Child Order"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "note_count": {
            "type": "integer",
            "title": "Note Count"
          },
          "day_order": {
            "type": "integer",
            "title": "Day Order"
          },
          "is_collapsed": {
            "type": "boolean",
            "title": "Is Collapsed"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "id",
          "project_id",
          "section_id",
          "parent_id",
          "added_by_uid",
          "assigned_by_uid",
          "responsible_uid",
          "labels",
          "deadline",
          "duration",
          "checked",
          "is_deleted",
          "added_at",
          "completed_at",
          "updated_at",
          "due",
          "priority",
          "child_order",
          "content",
          "description",
          "note_count",
          "day_order",
          "is_collapsed"
        ],
        "title": "ItemSyncView",
        "description": "A class with fields representing an ItemView which will be returned to\nclients in a sync (or sync-like) response."
      },
      "LabelRestView": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          },
          "is_favorite": {
            "type": "boolean",
            "title": "Is Favorite"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "color",
          "order",
          "is_favorite"
        ],
        "title": "LabelRestView"
      },
      "MemberView": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "examples": [
              "0192837465"
            ]
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id",
            "examples": [
              "42"
            ]
          },
          "user_email": {
            "type": "string",
            "title": "User Email",
            "examples": [
              "example@email.org"
            ]
          },
          "full_name": {
            "type": "string",
            "title": "Full Name",
            "examples": [
              "Dain Ironfoot"
            ]
          },
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "examples": [
              "GMT -3:00"
            ]
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole"
          },
          "image_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Id"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "workspace_id",
          "user_email",
          "full_name",
          "timezone",
          "role"
        ],
        "title": "MemberView"
      },
      "NoteSyncView": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "posted_uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posted Uid"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "default": ""
          },
          "file_attachment": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "items": {},
                      "type": "array"
                    },
                    {
                      "additionalProperties": true,
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Attachment"
          },
          "uids_to_notify": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uids To Notify"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "posted_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posted At"
          },
          "reactions": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reactions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "posted_uid",
          "file_attachment",
          "uids_to_notify",
          "is_deleted",
          "posted_at",
          "reactions"
        ],
        "title": "NoteSyncView",
        "description": "The base class for NoteSyncViews, to be extended for Items and Projects.\n\nThis class should generally not be instantiated directly, as it serves as a\ncommon structure for Items and Projects."
      },
      "NotificationChannel": {
        "type": "string",
        "enum": [
          "email",
          "push"
        ],
        "title": "NotificationChannel",
        "description": "Which communication mechanism is being used to send this notification"
      },
      "NotificationType": {
        "type": "string",
        "enum": [
          "note_added",
          "item_assigned",
          "item_completed",
          "item_uncompleted",
          "karma_level",
          "share_invitation_sent",
          "share_invitation_accepted",
          "share_invitation_rejected",
          "share_invitation_blocked_by_project_limit",
          "user_left_project",
          "user_removed_from_project",
          "teams_workspace_upgraded",
          "teams_workspace_canceled",
          "teams_workspace_payment_failed",
          "workspace_invitation_created",
          "workspace_invitation_accepted",
          "workspace_invitation_rejected",
          "project_archived",
          "project_moved",
          "removed_from_workspace",
          "workspace_deleted",
          "message",
          "workspace_user_joined_by_domain"
        ],
        "title": "NotificationType",
        "description": "The type of notification being sent"
      },
      "PaginatedList_ActivityEvents_": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/ActivityEvents"
            },
            "type": "array",
            "title": "Results"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "results",
          "next_cursor"
        ],
        "title": "PaginatedList"
      },
      "PaginatedList_Annotated_ProjectV1View__FieldInfo_annotation_NoneType__required_True__examples____id____name____child_order____parent_id____color____collapsed____is_archived____is_deleted____view_style_____": {
        "properties": {
          "results": {
            "items": {
              "additionalProperties": true,
              "type": "object",
              "examples": [
                {
                  "child_order": 1,
                  "collapsed": false,
                  "color": "lime_green",
                  "id": "2203306141",
                  "is_archived": true,
                  "is_deleted": false,
                  "name": "Shopping List",
                  "view_style": "list"
                }
              ]
            },
            "type": "array",
            "title": "Results"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "results",
          "next_cursor"
        ],
        "title": "PaginatedList"
      },
      "PaginatedList_Annotated_Union_PersonalProjectSyncView__WorkspaceProjectSyncView___FieldInfo_annotation_NoneType__required_True__title__Project_object______": {
        "properties": {
          "results": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PersonalProjectSyncView"
                },
                {
                  "$ref": "#/components/schemas/WorkspaceProjectSyncView"
                }
              ],
              "title": "Project object",
              "description": "Can be either a personal or a workspace project."
            },
            "type": "array",
            "title": "Results"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "results",
          "next_cursor"
        ],
        "title": "PaginatedList"
      },
      "PaginatedList_Collaborator_": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/Collaborator"
            },
            "type": "array",
            "title": "Results"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "results",
          "next_cursor"
        ],
        "title": "PaginatedList"
      },
      "PaginatedList_ItemSyncView_": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/ItemSyncView"
            },
            "type": "array",
            "title": "Results"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "results",
          "next_cursor"
        ],
        "title": "PaginatedList"
      },
      "PaginatedList_LabelRestView_": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/LabelRestView"
            },
            "type": "array",
            "title": "Results"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "results",
          "next_cursor"
        ],
        "title": "PaginatedList"
      },
      "PaginatedList_NoteSyncView_": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/NoteSyncView"
            },
            "type": "array",
            "title": "Results"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "results",
          "next_cursor"
        ],
        "title": "PaginatedList"
      },
      "PaginatedList_SectionSyncView_": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/SectionSyncView"
            },
            "type": "array",
            "title": "Results"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "results",
          "next_cursor"
        ],
        "title": "PaginatedList"
      },
      "PaginatedList_str_": {
        "properties": {
          "results": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Results"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "results",
          "next_cursor"
        ],
        "title": "PaginatedList"
      },
      "PersonalProjectSyncView": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "can_assign_tasks": {
            "type": "boolean",
            "title": "Can Assign Tasks"
          },
          "child_order": {
            "type": "integer",
            "title": "Child Order"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "creator_uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator Uid"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "is_favorite": {
            "type": "boolean",
            "title": "Is Favorite"
          },
          "is_frozen": {
            "type": "boolean",
            "title": "Is Frozen"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "view_style": {
            "type": "string",
            "title": "View Style"
          },
          "default_order": {
            "type": "integer",
            "title": "Default Order"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "public_key": {
            "type": "string",
            "title": "Public Key"
          },
          "access": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectAccessView"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "inbox_project": {
            "type": "boolean",
            "title": "Inbox Project"
          },
          "is_collapsed": {
            "type": "boolean",
            "title": "Is Collapsed"
          },
          "is_shared": {
            "type": "boolean",
            "title": "Is Shared"
          }
        },
        "type": "object",
        "required": [
          "id",
          "can_assign_tasks",
          "child_order",
          "color",
          "creator_uid",
          "created_at",
          "is_archived",
          "is_deleted",
          "is_favorite",
          "is_frozen",
          "name",
          "updated_at",
          "view_style",
          "default_order",
          "description",
          "public_key",
          "access",
          "role",
          "parent_id",
          "inbox_project",
          "is_collapsed",
          "is_shared"
        ],
        "title": "PersonalProjectSyncView",
        "description": "A representation of a Personal Project Sync View, extending the base ProjectSync\nView, to be returned to clients in a sync (or sync-like) response."
      },
      "PlanPrice": {
        "properties": {
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "billing_cycle": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly",
                  "yearly"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Cycle"
          },
          "tax_behavior": {
            "type": "string",
            "title": "Tax Behavior"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "currency",
          "billing_cycle",
          "tax_behavior"
        ],
        "title": "PlanPrice"
      },
      "ProjectAccessView": {
        "properties": {
          "visibility": {
            "$ref": "#/components/schemas/ProjectVisibility"
          },
          "configuration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RestrictedProjectConfiguration"
              },
              {
                "$ref": "#/components/schemas/TeamProjectConfiguration"
              },
              {
                "$ref": "#/components/schemas/PublicProjectConfiguration"
              }
            ],
            "title": "Configuration"
          }
        },
        "type": "object",
        "required": [
          "visibility",
          "configuration"
        ],
        "title": "ProjectAccessView"
      },
      "ProjectImportCreateResponseWithObjects": {
        "properties": {
          "status": {
            "type": "string",
            "const": "ok",
            "title": "Status"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "template_type": {
            "type": "string",
            "title": "Template Type"
          },
          "projects": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Projects"
          },
          "sections": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Sections"
          },
          "tasks": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Tasks"
          },
          "comments": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Comments"
          },
          "project_notes": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Project Notes"
          }
        },
        "type": "object",
        "required": [
          "status",
          "project_id",
          "template_type",
          "projects",
          "sections",
          "tasks",
          "comments",
          "project_notes"
        ],
        "title": "ProjectImportCreateResponseWithObjects"
      },
      "ProjectImportResponse": {
        "properties": {
          "status": {
            "type": "string",
            "const": "ok",
            "title": "Status"
          },
          "template_type": {
            "type": "string",
            "title": "Template Type"
          },
          "projects": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Projects"
          },
          "sections": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Sections"
          },
          "tasks": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Tasks"
          },
          "comments": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Comments"
          },
          "project_notes": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Project Notes"
          }
        },
        "type": "object",
        "required": [
          "status",
          "template_type",
          "projects",
          "sections",
          "tasks",
          "comments",
          "project_notes"
        ],
        "title": "ProjectImportResponse"
      },
      "ProjectStatus": {
        "type": "string",
        "enum": [
          "PLANNED",
          "IN_PROGRESS",
          "PAUSED",
          "COMPLETED",
          "CANCELED"
        ],
        "title": "ProjectStatus",
        "description": "Project status.\n\nAt the moment, this is for workspace projects only."
      },
      "ProjectViewStyle": {
        "type": "string",
        "enum": [
          "LIST",
          "BOARD",
          "CALENDAR"
        ],
        "title": "ProjectViewStyle"
      },
      "ProjectVisibility": {
        "type": "string",
        "enum": [
          "restricted",
          "team",
          "public"
        ],
        "title": "ProjectVisibility",
        "description": "Indicates who can see a project"
      },
      "PublicProjectConfiguration": {
        "properties": {
          "hide_collaborator_details": {
            "type": "boolean",
            "title": "Hide Collaborator Details"
          },
          "disable_duplication": {
            "type": "boolean",
            "title": "Disable Duplication"
          }
        },
        "type": "object",
        "required": [
          "hide_collaborator_details",
          "disable_duplication"
        ],
        "title": "PublicProjectConfiguration"
      },
      "RemovedNotificationType": {
        "type": "string",
        "enum": [
          "biz_trial_enter_cc",
          "biz_trial_will_end",
          "biz_payment_failed",
          "biz_account_disabled",
          "biz_invitation_created",
          "biz_invitation_accepted",
          "biz_invitation_rejected",
          "biz_policy_disallowed_invitation",
          "biz_policy_rejected_invitation"
        ],
        "title": "RemovedNotificationType",
        "description": "A set of legacy NotificationType values that have been removed\nfrom the mailers and database, but are still referenced by clients\ntherefore we have to maintain the contract.\n\nEnsures we still send down the keys without needing to maintain\nthe associated mailer code and database values."
      },
      "RestrictedProjectConfiguration": {
        "properties": {},
        "type": "object",
        "title": "RestrictedProjectConfiguration"
      },
      "SectionSyncView": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "added_at": {
            "type": "string",
            "title": "Added At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "archived_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "section_order": {
            "type": "integer",
            "title": "Section Order"
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "is_collapsed": {
            "type": "boolean",
            "title": "Is Collapsed"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "project_id",
          "added_at",
          "updated_at",
          "archived_at",
          "name",
          "section_order",
          "is_archived",
          "is_deleted",
          "is_collapsed"
        ],
        "title": "SectionSyncView",
        "description": "A class with fields representing a SectionView which will be returned\nto clients in a sync (or sync-like) response."
      },
      "TasksCompletedDateResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ItemSyncView"
            },
            "type": "array",
            "title": "Items"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "title": "TasksCompletedDateResponse"
      },
      "TeamProjectConfiguration": {
        "properties": {},
        "type": "object",
        "title": "TeamProjectConfiguration"
      },
      "Undefined": {
        "type": "integer",
        "enum": [
          0
        ],
        "title": "Undefined",
        "description": "Undefined object\n\nThe object is used as a default argument in some constructors to differentiate\nfrom `None` which usually means in that context \"reset the value\".\n\n- Use the `parts.util.undefined` singleton for the default variable.\n- Use `is undefined` to see if value is undefined.\n- For type hints, use `YourType | Undefined`\n\nUsage example:\n\n```\n    from parts.util import Undefined, undefined\n\n    def update_item(\n        id: int,\n        title: str | Undefined = undefined,\n        content: str | Undefined = undefined,\n    ):\n        pass\n```"
      },
      "UploadResult": {
        "properties": {
          "file_url": {
            "type": "string",
            "title": "File Url"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "file_type": {
            "type": "string",
            "title": "File Type"
          },
          "resource_type": {
            "type": "string",
            "title": "Resource Type"
          },
          "image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image"
          },
          "image_width": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Width"
          },
          "image_height": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Height"
          },
          "upload_state": {
            "type": "string",
            "enum": [
              "pending",
              "completed"
            ],
            "title": "Upload State",
            "default": "pending"
          }
        },
        "type": "object",
        "required": [
          "file_url",
          "file_name",
          "file_size",
          "file_type",
          "resource_type"
        ],
        "title": "UploadResult"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WorkspaceInvitationView": {
        "properties": {
          "inviter_id": {
            "type": "string",
            "title": "Inviter Id",
            "description": "ID of the user user who sent the invitation",
            "examples": [
              "1029384756"
            ]
          },
          "user_email": {
            "type": "string",
            "title": "User Email",
            "description": "The invited person's email.",
            "examples": [
              "foo@example.com"
            ]
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id",
            "description": "ID of the workspace",
            "examples": [
              "12345"
            ]
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the invitation",
            "default": "0",
            "examples": [
              "234"
            ]
          },
          "is_existing_user": {
            "type": "boolean",
            "title": "Is Existing User",
            "description": "Returns true if the user is already created in the system, and false otherwise",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "inviter_id",
          "user_email",
          "workspace_id",
          "role",
          "is_existing_user"
        ],
        "title": "WorkspaceInvitationView"
      },
      "WorkspaceProjectSyncView": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "can_assign_tasks": {
            "type": "boolean",
            "title": "Can Assign Tasks"
          },
          "child_order": {
            "type": "integer",
            "title": "Child Order"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "creator_uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator Uid"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "is_favorite": {
            "type": "boolean",
            "title": "Is Favorite"
          },
          "is_frozen": {
            "type": "boolean",
            "title": "Is Frozen"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "view_style": {
            "type": "string",
            "title": "View Style"
          },
          "default_order": {
            "type": "integer",
            "title": "Default Order"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "public_key": {
            "type": "string",
            "title": "Public Key"
          },
          "access": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectAccessView"
              },
              {
                "type": "null"
              }
            ]
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "collaborator_role_default": {
            "type": "string",
            "title": "Collaborator Role Default"
          },
          "folder_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Folder Id"
          },
          "is_invite_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Invite Only"
          },
          "is_link_sharing_enabled": {
            "type": "boolean",
            "title": "Is Link Sharing Enabled"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "is_collapsed": {
            "type": "boolean",
            "title": "Is Collapsed"
          },
          "is_shared": {
            "type": "boolean",
            "title": "Is Shared"
          }
        },
        "type": "object",
        "required": [
          "id",
          "can_assign_tasks",
          "child_order",
          "color",
          "creator_uid",
          "created_at",
          "is_archived",
          "is_deleted",
          "is_favorite",
          "is_frozen",
          "name",
          "updated_at",
          "view_style",
          "default_order",
          "description",
          "public_key",
          "access",
          "role",
          "collaborator_role_default",
          "folder_id",
          "is_invite_only",
          "is_link_sharing_enabled",
          "status",
          "workspace_id",
          "is_collapsed",
          "is_shared"
        ],
        "title": "WorkspaceProjectSyncView",
        "description": "A representation of a Workspace Project Sync View, extending the base ProjectSync\nView, to be returned to clients in a sync (or sync-like) response."
      },
      "WorkspaceProjectView": {
        "properties": {
          "initiated_by_uid": {
            "type": "integer",
            "title": "Initiated By Uid"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "workspace_id": {
            "type": "integer",
            "title": "Workspace Id"
          },
          "public_access": {
            "type": "boolean",
            "title": "Public Access"
          },
          "access": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectAccessView"
              },
              {
                "type": "null"
              }
            ]
          },
          "folder_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Folder Id"
          },
          "is_invite_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Invite Only",
            "default": false
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived",
            "default": false
          },
          "archived_timestamp": {
            "type": "integer",
            "title": "Archived Timestamp",
            "default": 0
          },
          "archived_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived Date"
          },
          "is_frozen": {
            "type": "boolean",
            "title": "Is Frozen",
            "default": false
          },
          "name": {
            "type": "string",
            "title": "Name",
            "default": ""
          },
          "color": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "default": 47
          },
          "view_style": {
            "$ref": "#/components/schemas/ProjectViewStyle",
            "default": "list"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "status": {
            "$ref": "#/components/schemas/ProjectStatus",
            "default": "IN_PROGRESS"
          },
          "default_order": {
            "type": "integer",
            "title": "Default Order",
            "default": 0
          },
          "_v1_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "V1 Id"
          },
          "_role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CollaboratorRole"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "initiated_by_uid",
          "project_id",
          "workspace_id",
          "public_access",
          "access"
        ],
        "title": "WorkspaceProjectView"
      },
      "WorkspaceRole": {
        "type": "string",
        "enum": [
          "ADMIN",
          "MEMBER",
          "GUEST"
        ],
        "title": "WorkspaceRole",
        "description": "Role of the user inside the workspace"
      },
      "WorkspaceUserView": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole",
            "default": "MEMBER"
          },
          "custom_sorting_applied": {
            "type": "boolean",
            "title": "Custom Sorting Applied",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "workspace_id"
        ],
        "title": "WorkspaceUserView"
      },
      "_BackupResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Date and time of the backup version",
            "examples": [
              "2025-02-13 02:03"
            ]
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "Backup URL",
            "examples": [
              "https://api.todoist.com/api/v1/backups/download?file=12345678901234567890123456789012.zip"
            ]
          }
        },
        "type": "object",
        "required": [
          "version",
          "url"
        ],
        "title": "_BackupResponse"
      },
      "_EmailResponse": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "_EmailResponse"
      },
      "_GetDataV2Response": {
        "properties": {
          "project": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project",
            "examples": [
              {
                "archived_timestamp": 0,
                "child_order": 4,
                "collapsed": false,
                "color": "lime_green",
                "id": "6XGgff2vcGGQCQvj",
                "is_archived": false,
                "is_deleted": false,
                "name": "Shopping List",
                "user_id": "2671355",
                "view_style": "list"
              }
            ]
          },
          "items": {
            "items": {
              "additionalProperties": true,
              "type": "object",
              "examples": [
                [
                  {
                    "added_at": "2016-07-19T12:50:49.000000Z",
                    "assigned_by_uid": "2671355",
                    "checked": false,
                    "child_order": 1,
                    "collapsed": false,
                    "content": "Buy Milk",
                    "description": "",
                    "id": "6XGgfhhFwCC7G4Pc",
                    "is_deleted": false,
                    "labels": [],
                    "notes_count": 1,
                    "priority": 1,
                    "project_id": "6XGgff2vcGGQCQvj",
                    "section_id": "7025",
                    "user_id": "2671355"
                  }
                ]
              ]
            },
            "type": "array",
            "title": "Items"
          },
          "sections": {
            "items": {
              "additionalProperties": true,
              "type": "object",
              "examples": [
                [
                  {
                    "added_at": "2019-11-06T09:37:08.000000Z",
                    "collapsed": false,
                    "id": "7025",
                    "is_archived": false,
                    "is_deleted": false,
                    "name": "Groceries",
                    "project_id": "6XGgff2vcGGQCQvj",
                    "section_order": 1,
                    "user_id": "2671355"
                  }
                ]
              ]
            },
            "type": "array",
            "title": "Sections"
          },
          "project_notes": {
            "items": {
              "additionalProperties": true,
              "type": "object",
              "examples": [
                [
                  {
                    "content": "Things I need to buy",
                    "id": "6XGgg2HHQPRr9rm7",
                    "is_deleted": false,
                    "posted_at": "2019-11-06T09:37:28.000000Z",
                    "posted_uid": "2671355",
                    "project_id": "6XGgff2vcGGQCQvj",
                    "uids_to_notify": []
                  }
                ]
              ]
            },
            "type": "array",
            "title": "Project Notes"
          },
          "collaborators": {
            "items": {
              "$ref": "#/components/schemas/ExposedCollaboratorSyncView"
            },
            "type": "array",
            "title": "Collaborators"
          },
          "collaborator_states": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Collaborator States"
          },
          "folder": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FolderView"
              },
              {
                "type": "null"
              }
            ]
          },
          "subprojects": {
            "items": {
              "additionalProperties": true,
              "type": "object",
              "examples": [
                {
                  "archived_timestamp": 0,
                  "child_order": 4,
                  "collapsed": false,
                  "color": "lime_green",
                  "id": "6XGgfvm7fMGJhwgm",
                  "is_archived": false,
                  "is_deleted": false,
                  "name": "Shop name",
                  "parent_id": "6XGgff2vcGGQCQvj",
                  "user_id": "2671355",
                  "view_style": "list"
                }
              ]
            },
            "type": "array",
            "title": "Subprojects"
          }
        },
        "type": "object",
        "required": [
          "project",
          "items",
          "sections",
          "project_notes",
          "collaborators",
          "collaborator_states",
          "folder",
          "subprojects"
        ],
        "title": "_GetDataV2Response"
      },
      "_MigratePersonalTokenResponse": {
        "properties": {
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token",
            "examples": [
              "0123456789abcdef0123456789abcdef01234567"
            ]
          },
          "token_type": {
            "type": "string",
            "const": "Bearer",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "_MigratePersonalTokenResponse"
      },
      "_PlanDetailsResponse": {
        "properties": {
          "current_member_count": {
            "type": "integer",
            "title": "Current Member Count"
          },
          "current_plan": {
            "type": "string",
            "enum": [
              "Business",
              "Starter"
            ],
            "title": "Current Plan"
          },
          "current_plan_status": {
            "type": "string",
            "enum": [
              "Active",
              "Downgraded",
              "Cancelled",
              "NeverSubscribed"
            ],
            "title": "Current Plan Status"
          },
          "downgrade_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Downgrade At"
          },
          "current_active_projects": {
            "type": "integer",
            "title": "Current Active Projects"
          },
          "maximum_active_projects": {
            "type": "integer",
            "title": "Maximum Active Projects"
          },
          "price_list": {
            "items": {
              "$ref": "#/components/schemas/FormattedPriceListing"
            },
            "type": "array",
            "title": "Price List"
          },
          "workspace_id": {
            "type": "integer",
            "title": "Workspace Id"
          },
          "is_trialing": {
            "type": "boolean",
            "title": "Is Trialing"
          },
          "trial_ends_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trial Ends At"
          },
          "cancel_at_period_end": {
            "type": "boolean",
            "title": "Cancel At Period End"
          },
          "has_trialed": {
            "type": "boolean",
            "title": "Has Trialed"
          },
          "plan_price": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PlanPrice"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_billing_portal": {
            "type": "boolean",
            "title": "Has Billing Portal"
          },
          "has_billing_portal_switch_to_annual": {
            "type": "boolean",
            "title": "Has Billing Portal Switch To Annual"
          }
        },
        "type": "object",
        "required": [
          "current_member_count",
          "current_plan",
          "current_plan_status",
          "downgrade_at",
          "current_active_projects",
          "maximum_active_projects",
          "price_list",
          "workspace_id",
          "is_trialing",
          "trial_ends_at",
          "cancel_at_period_end",
          "has_trialed",
          "plan_price",
          "has_billing_portal",
          "has_billing_portal_switch_to_annual"
        ],
        "title": "_PlanDetailsResponse"
      },
      "_ProjectsResponse": {
        "properties": {
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          },
          "next_cursor": {
            "type": "string",
            "title": "Next Cursor"
          },
          "workspace_projects": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceProjectView"
            },
            "type": "array",
            "title": "Workspace Projects"
          }
        },
        "type": "object",
        "required": [
          "has_more",
          "workspace_projects"
        ],
        "title": "_ProjectsResponse"
      },
      "_StatusOkResponse": {
        "properties": {
          "status": {
            "type": "string",
            "const": "ok",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "_StatusOkResponse"
      },
      "_UsersResponse": {
        "properties": {
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          },
          "next_cursor": {
            "type": "string",
            "title": "Next Cursor"
          },
          "workspace_users": {
            "items": {
              "$ref": "#/components/schemas/MemberView"
            },
            "type": "array",
            "title": "Workspace Users"
          }
        },
        "type": "object",
        "required": [
          "has_more",
          "workspace_users"
        ],
        "title": "_UsersResponse"
      },
      "todoist__apps__api__rest__comments__Body__1": {
        "properties": {
          "content": {
            "type": "string",
            "maxLength": 15000,
            "minLength": 1,
            "title": "Content"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "exclusiveMaximum": 99999999999,
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "String ID of the project",
            "examples": [
              "6XGgm6PHrGgMpCFX"
            ]
          },
          "task_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "exclusiveMaximum": 99999999999,
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Id",
            "description": "String ID of the task",
            "examples": [
              "6XGgmFVcrG5RRjVr"
            ]
          },
          "attachment": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment"
          },
          "uids_to_notify": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uids To Notify"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "Body"
      },
      "todoist__apps__api__rest__comments__Body__2": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 15000,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "Body"
      },
      "todoist__apps__api__rest__labels__Body__1": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body"
      },
      "todoist__apps__api__rest__labels__Body__2": {
        "properties": {
          "new_name": {
            "type": "string",
            "title": "New Name"
          }
        },
        "type": "object",
        "required": [
          "new_name"
        ],
        "title": "Body"
      },
      "todoist__apps__api__rest__labels__Body__3": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 32767,
                "minimum": -32768
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "berry_red",
                  "red",
                  "orange",
                  "yellow",
                  "olive_green",
                  "lime_green",
                  "green",
                  "mint_green",
                  "teal",
                  "sky_blue",
                  "light_blue",
                  "blue",
                  "grape",
                  "violet",
                  "lavender",
                  "magenta",
                  "salmon",
                  "charcoal",
                  "grey",
                  "taupe"
                ]
              },
              {
                "type": "integer",
                "enum": [
                  30,
                  31,
                  32,
                  33,
                  34,
                  35,
                  36,
                  37,
                  38,
                  39,
                  40,
                  41,
                  42,
                  43,
                  44,
                  45,
                  46,
                  47,
                  48,
                  49
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "is_favorite": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Favorite"
          }
        },
        "type": "object",
        "title": "Body"
      },
      "todoist__apps__api__rest__labels__Body__4": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 128,
            "title": "Name"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 32767,
                "minimum": -32768
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "berry_red",
                  "red",
                  "orange",
                  "yellow",
                  "olive_green",
                  "lime_green",
                  "green",
                  "mint_green",
                  "teal",
                  "sky_blue",
                  "light_blue",
                  "blue",
                  "grape",
                  "violet",
                  "lavender",
                  "magenta",
                  "salmon",
                  "charcoal",
                  "grey",
                  "taupe"
                ]
              },
              {
                "type": "integer",
                "enum": [
                  30,
                  31,
                  32,
                  33,
                  34,
                  35,
                  36,
                  37,
                  38,
                  39,
                  40,
                  41,
                  42,
                  43,
                  44,
                  45,
                  46,
                  47,
                  48,
                  49
                ]
              }
            ],
            "default": {
              "name": "charcoal",
              "hex": "#808080",
              "database_index": 47
            }
          },
          "is_favorite": {
            "type": "boolean",
            "title": "Is Favorite",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body"
      },
      "todoist__apps__api__rest__projects__Body__1": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "exclusiveMaximum": 99999999999,
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "berry_red",
                  "red",
                  "orange",
                  "yellow",
                  "olive_green",
                  "lime_green",
                  "green",
                  "mint_green",
                  "teal",
                  "sky_blue",
                  "light_blue",
                  "blue",
                  "grape",
                  "violet",
                  "lavender",
                  "magenta",
                  "salmon",
                  "charcoal",
                  "grey",
                  "taupe"
                ]
              },
              {
                "type": "integer",
                "enum": [
                  30,
                  31,
                  32,
                  33,
                  34,
                  35,
                  36,
                  37,
                  38,
                  39,
                  40,
                  41,
                  42,
                  43,
                  44,
                  45,
                  46,
                  47,
                  48,
                  49
                ]
              }
            ],
            "default": {
              "name": "charcoal",
              "hex": "#808080",
              "database_index": 47
            }
          },
          "is_favorite": {
            "type": "boolean",
            "title": "Is Favorite",
            "default": false
          },
          "view_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "View Style"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body"
      },
      "todoist__apps__api__rest__projects__Body__2": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "berry_red",
                  "red",
                  "orange",
                  "yellow",
                  "olive_green",
                  "lime_green",
                  "green",
                  "mint_green",
                  "teal",
                  "sky_blue",
                  "light_blue",
                  "blue",
                  "grape",
                  "violet",
                  "lavender",
                  "magenta",
                  "salmon",
                  "charcoal",
                  "grey",
                  "taupe"
                ]
              },
              {
                "type": "integer",
                "enum": [
                  30,
                  31,
                  32,
                  33,
                  34,
                  35,
                  36,
                  37,
                  38,
                  39,
                  40,
                  41,
                  42,
                  43,
                  44,
                  45,
                  46,
                  47,
                  48,
                  49
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "is_favorite": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Favorite"
          },
          "view_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "View Style"
          }
        },
        "type": "object",
        "title": "Body"
      },
      "todoist__apps__api__rest__sections__Body__1": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "exclusiveMaximum": 99999999999,
                "exclusiveMinimum": 0
              }
            ],
            "title": "Project Id"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          }
        },
        "type": "object",
        "required": [
          "name",
          "project_id"
        ],
        "title": "Body"
      },
      "todoist__apps__api__rest__sections__Body__2": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "Body"
      },
      "todoist__apps__api__rest__tasks__Body__1": {
        "properties": {
          "content": {
            "type": "string",
            "minLength": 1,
            "title": "Content"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "exclusiveMaximum": 99999999999,
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "section_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "exclusiveMaximum": 99999999999,
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Section Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "exclusiveMaximum": 99999999999,
                "exclusiveMinimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          },
          "labels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "due_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due String"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "due_datetime": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Datetime"
          },
          "due_lang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Lang"
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "duration_unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Unit"
          },
          "deadline_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline Date"
          },
          "deadline_lang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline Lang"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "Body"
      },
      "todoist__apps__api__rest__tasks__Body__2": {
        "properties": {
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "section_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Section Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          }
        },
        "type": "object",
        "title": "Body"
      },
      "todoist__apps__api__rest__tasks__Body__3": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              }
            ],
            "title": "Content",
            "default": 0
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              }
            ],
            "title": "Description",
            "default": 0
          },
          "labels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              }
            ],
            "title": "Labels",
            "default": 0
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              }
            ],
            "title": "Priority",
            "default": 0
          },
          "due_string": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              }
            ],
            "title": "Due String",
            "default": 0
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              }
            ],
            "title": "Due Date",
            "default": 0
          },
          "due_datetime": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              }
            ],
            "title": "Due Datetime",
            "default": 0
          },
          "due_lang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              }
            ],
            "title": "Due Lang",
            "default": 0
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id",
            "default": 0
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration",
            "default": 0
          },
          "duration_unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Unit",
            "default": 0
          },
          "deadline_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline Date",
            "default": 0
          },
          "deadline_lang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/Undefined"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline Lang",
            "default": 0
          }
        },
        "type": "object",
        "title": "Body"
      },
      "todoist__apps__api__sync__rest__controller__Body": {
        "properties": {
          "file_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Name"
          }
        },
        "type": "object",
        "title": "Body"
      },
      "todoist__apps__api__sync__rest__quick__Body": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text of the task that is parsed. It can include a due date in free form text, a project name starting with the `#` character (without spaces), a label starting with the `@` character, an assignee starting with the `+` character, a priority (e.g., `p1`), a deadline between `{}` (e.g. {in 3 days}), or a description starting from `//` until the end of the text."
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "reminder": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reminder",
            "description": "The reminder date in free form text."
          },
          "auto_reminder": {
            "type": "boolean",
            "title": "Auto Reminder",
            "description": "When this option is enabled, the default reminder will be added to the new item if it has a due date with time set. See also the [auto_reminder user option](#tag/Sync/User) for more info about the default reminder.",
            "default": false
          },
          "meta": {
            "type": "boolean",
            "title": "Meta",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body"
      },
      "todoist__apps__api__sync__rest__workspaces__Body__1": {
        "properties": {
          "workspace_id": {
            "type": "integer",
            "title": "Workspace Id"
          },
          "user_email": {
            "type": "string",
            "title": "User Email"
          }
        },
        "type": "object",
        "required": [
          "workspace_id",
          "user_email"
        ],
        "title": "Body"
      },
      "todoist__apps__api__sync__rest__workspaces__Body__2": {
        "properties": {
          "invite_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invite Code"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          }
        },
        "type": "object",
        "title": "Body"
      },
      "todoist__apps__api__sync__rest__workspaces__Body__3": {
        "properties": {
          "workspace_id": {
            "type": "integer",
            "title": "Workspace Id",
            "examples": [
              "42"
            ]
          },
          "delete": {
            "type": "boolean",
            "title": "Delete",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "workspace_id"
        ],
        "title": "Body"
      },
      "todoist__apps__app_platform__controllers__access_token__Body": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The unique Client ID of the Todoist application that you registered"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret",
            "description": "The unique Client Secret of the Todoist application that you registered"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "description": "Scopes of the OAuth token. Please refer to the [Authorization](#tag/Authorization) guide for the detailed list of available scopes."
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "client_secret",
          "scope"
        ],
        "title": "Body"
      },
      "todoist__apps__import_export__controllers__rest__Body__1": {
        "properties": {
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "exclusiveMaximum": 99999999999,
                "exclusiveMinimum": 0
              }
            ],
            "title": "Project Id"
          },
          "locale": {
            "type": "string",
            "title": "Locale",
            "default": "en"
          }
        },
        "type": "object",
        "required": [
          "project_id"
        ],
        "title": "Body"
      },
      "todoist__apps__import_export__controllers__rest__Body__2": {
        "properties": {
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "exclusiveMaximum": 99999999999,
                "exclusiveMinimum": 0
              }
            ],
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": [
          "project_id"
        ],
        "title": "Body"
      },
      "todoist__apps__import_export__controllers__rest__Body__3": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body"
      }
    }
  },
  "tags": [
    {
      "name": "Authorization",
      "description": "<blockquote class=\"lang-specific shell\">\n    <p>An authenticated request with authorization header:</p>\n</blockquote>\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d sync_token='*' \\\n    -d resource_types='[\"all\"]'\n```\n\nIn order to make authorized calls to the Sync API, your application must provide\nan [authorization\nheader](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization)\nwith the appropriate `Bearer $token`. For working through the examples, you can\nobtain your personal API token from the [integrations\nsettings](https://todoist.com/prefs/integrations) for your account.\n\nTo authenticate other users, your application will need to obtain a token from\nthem using the OAuth protocol. For information on how to obtain a token from our\nservice using OAuth, please see the [authorization\nguide](/guides/#authorization).\n\nFor the sake of simplicity the token is not listed on every parameter table but\nplease note that the **token parameter is required for every resource**.\n\n## OAuth\n\nOAuth is also available for token generation. It's especially useful for\nexternal applications to obtain a user authorized API token via the OAuth2\nprotocol. Before getting started, developers need to create their applications\nin the [App Management Console](https://developer.todoist.com/appconsole.html)\nand configure a valid OAuth2 redirect URL. A registered Todoist application is\nassigned a unique `Client ID` and `Client Secret` which are needed for the\nOAuth2 flow.\n\nThis procedure is comprised of 3 steps.\n\n### Step 1: Authorization request\n\n> An example of the URL to the authorization endpoint:\n\n```shell\nhttps://todoist.com/oauth/authorize?client_id=0123456789abcdef&scope=data:read,data:delete&state=secretstring\n```\n\nRedirect users to the authorization URL at the endpoint\n`https://todoist.com/oauth/authorize`, with the specified request parameters.\n\n#### Required parameters\n\n| Name      | Description                                                                                                                                               |\n| --------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| client_id | The unique Client ID of the Todoist application that you registered.                                                                                      |\n| scope     | A comma separated list of permissions that you would like the users to grant to your application. See the below table for detail on the available scopes. |\n| state     | A unique and unguessable string. It is used to protect you against cross-site request forgery attacks.                                                    |\n\n#### Permission scopes\n\n| Name            | Description                                                                                                                                              |\n| --------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| task:add        | Grants permission to add new tasks (the application cannot read or modify any existing data).                                                            |\n| data:read       | Grants read-only access to application data, including tasks, projects, labels, and filters.                                                             |\n| data:read_write | Grants read and write access to application data, including tasks, projects, labels, and filters. This scope includes `task:add` and `data:read` scopes. |\n| data:delete     | Grants permission to delete application data, including tasks, labels, and filters.                                                                      |\n| project:delete  | Grants permission to delete projects.                                                                                                                    |\n| backups:read  | Grants permission to list backups bypassing MFA requirements. |\n\n\n#### Potential errors\n\n| Error                               | Description                                                                                                                                                                                                                                                      |\n| ----------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| User Rejected Authorization Request | When the user denies your authorization request, Todoist will redirect the user to the configured redirect URI with the `error` parameter: `http://example.com?error=access_denied`.                                                                             |\n| Redirect URI Not Configured         | This JSON error will be returned to the requester (your user's browser) if redirect URI is not configured in the App Management Console.                                                                                                                         |\n| Invalid Application Status          | When your application exceeds the maximum token limit or when your application is being suspended due to abuse, Todoist will redirect the user to the configured redirect URI with the `error` parameter: `http://example.com?error=invalid_application_status`. |\n| Invalid Scope                       | When the `scope` parameter is invalid, Todoist will redirect the user to the configured redirect URI with `error` parameter: `http://example.com?error=invalid_scope`.                                                                                           |\n\n### Step 2: Redirection to your application site\n\nWhen the user grants your authorization request, the user will be redirected to\nthe redirect URL configured for your application. The redirect request\nwill come with two query parameters attached: `code` and `state`.\n\nThe `code` parameter contains the authorization code that you will use to\nexchange for an access token. The `state` parameter should match the `state`\nparameter that you supplied in the previous step. If the `state` is unmatched,\nyour request has been compromised by other parties, and the process should be\naborted.\n\n### Step 3: Token exchange\n\n> An example of exchanging the token:\n\n```shell\n$ curl \"https://todoist.com/oauth/access_token\" \\\n    -d \"client_id=0123456789abcdef\" \\\n    -d \"client_secret=secret\" \\\n    -d \"code=abcdef\" \\\n    -d \"redirect_uri=https://example.com\"\n```\n\n> On success, Todoist returns HTTP 200 with token in JSON object format:\n\n```json\n{\n    \"access_token\": \"0123456789abcdef0123456789abcdef01234567\",\n    \"token_type\": \"Bearer\"\n}\n```\n\nOnce you have the authorization `code`, you can exchange it for the access token\nby sending a `POST` request to the following endpoint:\n\n`https://todoist.com/oauth/access_token`.\n\n#### Required parameters\n\n| Name          | Description                                                                          |\n| ------------- | ------------------------------------------------------------------------------------ |\n| client_id     | The Client ID of the Todoist application that you registered.                        |\n| client_secret | The Client Secret of the Todoist application that you registered.                    |\n| code          | The code that was sent in the query string to the redirect URL in the previous step. |\n\n#### Potential errors\n\n| Error                              | Description                                                                                                                           |\n| ---------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------- |\n| Bad Authorization Code Error       | Occurs when the `code` parameter does not match the code that is given in the redirect request: `{\"error\": \"bad_authorization_code\"}` |\n| Incorrect Client Credentials Error | Occurs when the `client_id` or `client_secret` parameters are incorrect: `{\"error\": \"incorrect_application_credentials\"}`             |\n\n## Cross Origin Resource Sharing\n\n> CORS headers example:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -H \"Origin: http://example.com\"\n\nHTTP/1.1 200 OK\nAccess-Control-Allow-Credentials: false\nAccess-Control-Allow-Origin: *\n```\n\nAll API endpoints not related to the initial OAuth2 flow support Cross Origin Resource\nSharing (CORS) for requests from any origin. The header\n`Access-Control-Allow-Origin: *` is set for successfully authenticated requests.\n"
    },
    {
      "name": "Sync",
      "description": "The Todoist Sync endpoint is specially designed for efficient data sync between\nclients (e.g. our mobile apps) and Todoist.\n\nSync requests should be made in HTTP POST (`application/x-www-form-urlencoded`).\nSync responses, including errors, will be returned in JSON.\n\nThe Sync endpoint supports the following features:\n\n- Batching: reading and writing of multiple resources can be done in a single HTTP request. Batch requests help clients reduce the number of network calls needed to sync resources.\n- Incremental sync: You only retrieve data that is updated since the last time you performed a sync request.\n\n_Refer to [Request Limits](#tag/Request-limits) to learn more about the number of requests/commands\nyou have for the Sync API_\n\n# Overview\n\n## Read resources\n\n> Example read resources request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d sync_token='*' \\\n    -d resource_types='[\"all\"]'\n```\n\n> Example response:\n\n```shell\n{\n  \"completed_info\": [ ... ],\n  \"collaborators\": [ ... ],\n  \"collaborator_states\": [ ... ],\n  \"day_orders\": { ... },\n  \"filters\": [ ... ],\n  \"full_sync\": true,\n  \"items\": [ ... ],\n  \"labels\": [ ... ],\n  \"live_notifications\": [ ... ],\n  \"live_notifications_last_read_id\": \"0\",\n  \"locations\": [ ... ],\n  \"notes\": [ ... ],\n  \"project_notes\": [ ... ],\n  \"projects\": [ ... ],\n  \"reminders\": [ ... ],\n  \"sections\": [ ... ],\n  \"stats\": { ... },\n  \"settings_notifications\": { ... },\n  \"sync_token\": \"TnYUZEpuzf2FMA9qzyY3j4xky6dXiYejmSO85S5paZ_a9y1FI85mBbIWZGpW\",\n  \"temp_id_mapping\": { ... },\n  \"user\": { ... },\n  \"user_plan_limits\": { ... },\n  \"user_settings\": { ... },\n  \"workspace_users\": { ... }\n}\n```\n\nTo retrieve your user resources, make a Sync API request with the following\nparameters:\n\n#### Parameters\n\n| Parameter                               | Required | Description|\n| --------------------------------------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| sync_token _String_                    | Yes      | A special string, used to allow the client to perform incremental sync. Pass `*` to retrieve all active resource data. More details about this below.                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| resource_types _JSON array of strings_ | Yes      | Used to specify what resources to fetch from the server. It should be a JSON-encoded array of strings. Here is a list of available resource types: `labels`, `projects`, `items`, `notes`, `sections`, `filters`, `reminders`, `reminders_location`, `locations`, `user`, `live_notifications`, `collaborators`, `user_settings`, `notification_settings`, `user_plan_limits`, `completed_info`, `stats`, `workspaces`, `workspace_users`. You may use `all` to include all the resource types. Resources can also be excluded by prefixing a `-` prior to the name, for example, `-projects` |\n\nIn order to fetch both types of reminders you must include both resource types in your request, for example: `resource_types=[\"reminders\", \"reminders_location\"]` .\n\nThe `workspace_users` resource type will not be returned in full sync, but should be requested in incremental sync to keep data up-to-date once it's loaded from the REST endpoint.\n\n#### Incremental sync\n\nThe Sync API allows clients to retrieve only updated resources, and this is done\nby using the `sync_token` in your Sync API request.\n\nOn your initial sync request, specify `sync_token=*` in your request, and all\nthe user's active resource data will be returned. The server will also\nreturn a new `sync_token` in the Sync API response.\n\nIn your subsequent Sync request, use the `sync_token` that you received from\nyour previous sync response, and the Todoist API server will return only the\nupdated resource data.\n\n#### Response\n\nWhen the request succeeds, an HTTP 200 response will be returned with a JSON\nobject containing the requested resources and a new `sync_token`.\n\n| Field                        | Description                                                                                                                                                                                                        |\n| ---------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| sync_token                   | A new synchronization token. Used by the client in the next sync request to perform an incremental sync.                                                                                                           |\n| full_sync                    | Whether the response contains all data (a full synchronization) or just the incremental updates since the last sync.                                                                                               |\n| user                         | A user object.                                                                                                                                                                                                     |\n| projects                     | An array of [project](#tag/Sync/Projects) objects.                                                                                                                                                                 |\n| items                        | An array of [item](#tag/Sync/Items) objects.                                                                                                                                                                       |\n| notes                        | An array of [task comments](#tag/Sync/Comments/Task-Comments) objects.                                                                                                                                                       |\n| project_notes                | An array of [project comments](#tag/Sync/Comments/Project-Comments) objects.                                                                                                                                                 |\n| sections                     | An array of [section](#tag/Sync/Sections) objects.                                                                                                                                                                 |\n| labels                       | An array of [personal label](#tag/Sync/Labels) objects.                                                                                                                                                            |\n| filters                      | An array of [filter](#tag/Sync/Filters) objects.                                                                                                                                                                   |\n| day_orders                   | A JSON object specifying the order of items in daily agenda.                                                                                                                                                       |\n| reminders                    | An array of [reminder](#tag/Sync/Reminders) objects.                                                                                                                                                               |\n| collaborators                | A JSON object containing all [collaborators](#tag/Sync/Sharing/Collaborators) for all shared projects. The `projects` field contains the list of all shared projects, where the user acts as one of collaborators. |\n| collaborators_states         | An array specifying the state of each collaborator in each project. The state can be invited, active, inactive, deleted.                                                                                           |\n| completed_info               | An array of `completed` info objects indicating the number of completed items within an active project, section, or parent item. Projects will also include the number of archived sections.                       |\n| live_notifications           | An array of `live_notification` objects.                                                                                                                                                                           |\n| live_notifications_last_read | What is the last live notification the user has seen? This is used to implement unread notifications.                                                                                                              |\n| user_settings                | A JSON object containing [user settings](#tag/Sync/User/User-settings).                                                                                                                                            |\n| user_plan_limits             | A JSON object containing [user plan limits](#tag/Sync/User/User-plan-limits).                                                                                                                                      |\n| workspaces                   | A JSON object containing [workspace](#tag/Sync/Workspace) objects.                                                                                                                                                 |\n| workspace_users              | A JSON object containing [workspace_user](#tag/Sync/Workspace-users) objects. Only in incremental sync.                                                                                                            |\n\n## Write resources\n\n> Example create project request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"project_add\",\n        \"temp_id\": \"381e601f-0ef3-4ed6-bf95-58f896d1a314\",\n        \"uuid\": \"ed1ce597-e4c7-4a88-ba48-e048d827c067\",\n        \"args\": {\n            \"name\": \"Shopping List\",\n            \"color\": \"berry_red\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  \"sync_token\": \"cdTUEvJoChiaMysD7vJ14UnhN-FRdP-IS3aisOUpl3aGlIQA9qosBgvMmhbn\",\n  \"sync_status\": {\"ed1ce597-e4c7-4a88-ba48-e048d827c067\": \"ok\"},\n  \"temp_id_mapping\": {\"381e601f-0ef3-4ed6-bf95-58f896d1a314\": \"6HWcc9PJCvPjCxC9\"}\n}\n```\n\nTo write to your user's Todoist resources, make a Sync API request with the\nfollowing parameters:\n\n#### Parameters\n\n| Parameter       | Required | Description                                                                             |\n| --------------- | -------- | --------------------------------------------------------------------------------------- |\n| commands _JSON_ | Yes      | A JSON array of Command objects. Each command will be processed in the specified order. |\n\n#### Command object\n\n| Field             | Description                                                                                                                                       |\n| ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- |\n| type _String_     | The type of the command.                                                                                                                          |\n| args _Object_     | The parameters of the command.                                                                                                                    |\n| uuid _String_     | Command UUID. More details about this below.                                                                                                      |\n| temp_id _String_ | Temporary resource ID, Optional. Only specified for commands that create a new resource (e.g. `item_add` command). More details about this below. |\n\n## Command UUID\n\nClients should generate a unique string ID for each command and specify it\nin the `uuid` field. The Command UUID will be used for two purposes:\n\n1. Command result mapping: Each command's result will be stored in the\n   `sync_status` field of the response JSON object. The `sync_status` object has\n   its key mapped to a command's `uuid` and its value containing the result of a\n   command.\n2. Command idempotency: Todoist will not execute a command that has same UUID as\n   a previously executed command. This will allow clients to safely retry\n   each command without accidentally performing the action twice.\n\n## Temporary resource id\n\n> An example that shows how temporary IDs can be used and referenced:\n\n```\n[\n    {\n        \"type\": \"project_add\",\n        \"temp_id\": \"c7beb07f-b226-4eb1-bf63-30d782b07b1a\",\n        \"args\": {\n            \"name\": \"Shopping List\"\n        },\n        \"uuid\": \"ac417051-1cdc-4dc3-b4f8-14526d5bfd16\"\n    },\n    {\n        \"type\": \"item_add\",\n        \"temp_id\": \"43f7ed23-a038-46b5-b2c9-4abda9097ffa\",\n        \"args\": {\n            \"content\": \"Buy Milk\",\n            \"project_id\": \"c7beb07f-b226-4eb1-bf63-30d782b07b1a\"\n        },\n        \"uuid\": \"849fff4e-8551-4abb-bd2a-838d092775d7\"\n    }\n]\n```\n\n> You can see that the `project_add` command specified a `temp_id` property\n> (`c7beb07f-b226-4eb1-bf63-30d782b07b1a`) as placeholder of the actual\n> `project_id`. The `item_add` command can reference to this temporary project\n> ID. The API will automatically resolve these IDs.\n\nSome commands depend on the result of previous command. For instance, you have a\ncommand sequence: `\"project_add\"` and `\"item_add\"` which first creates a project\nand then add a new task to the newly created project. In order to run the later\n`item_add` command, we need to obtain the project ID returned from the previous\ncommand. Therefore, the normal approach would be to run these two commands in\ntwo separate HTTP requests.\n\nThe temporary resource ID feature allows you to run two or more dependent\ncommands in a single HTTP request. For commands that are related to creation of\nresources (i.e. `item_add`, `project_add`), you can specify an extra `temp_id`\nas a placeholder for the actual ID of the resource. The other commands in the\nsame sequence could directly refer to `temp_id` if needed.\n\n## Response / Error\n\n> An example of a single request sync return value:\n\n```\n{\n    \"sync_status\": { \"863aca2c-65b4-480a-90ae-af160129abbd\": \"ok\" }\n}\n```\n\n> An example of a multiple requests sync return value:\n\n```\n{\n    \"sync_status\": {\n        \"32eaa699-e9d7-47ed-91ea-e58d475791f1\": \"ok\",\n        \"bec5b356-3cc1-462a-9887-fe145e3e1ebf\": {\n            \"error_code\": 15,\n            \"error\": \"Invalid temporary id\"\n        }\n    }\n}\n```\n\nThe result of command executions will be stored in the following response JSON\nobject field:\n\n| Data                      | Description                                                                                                                                                                   |\n| ------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| temp_id_mapping _Object_ | A dictionary object that maps temporary resource IDs to real resource IDs.                                                                                                    |\n| sync_status _Object_     | A dictionary object containing result of each command execution. The key will be the command's `uuid` field and the value will be the result status of the command execution. |\n\nThe status result of each command execution is in the `sync_status` dictionary\nobject. The key is a command `uuid` and the value will be the result status of\nthe command execution.\n\nThere are two possible values for each command status:\n\n- An \"ok\" string which signals success of the command\n- An error object containing error information of a command.\n\nPlease see the adjacent code examples for the possible format of the\n`sync_status`.\n\n## Response status codes\n\nThe server uses the HTTP status codes to indicate the success or failure of a\nrequest. As is customary in web servers, a 2xx code indicates - success, a\n4xx code - an error due to incorrect user provided information, and a 5xx code -\nan internal, possibly temporary, error.\n\n| Status code               | Description                                                               |\n| ------------------------- | ------------------------------------------------------------------------- |\n| 200 OK                    | The request was processed successfully.                                   |\n| 400 Bad Request           | The request was incorrect.                                                |\n| 401 Unauthorized          | Authentication is required, and has failed, or has not yet been provided. |\n| 403 Forbidden             | The request was valid, but for something that is forbidden.               |\n| 404 Not Found             | The requested resource could not be found.                                |\n| 429 Too Many Requests     | The user has sent too many requests in a given amount of time.            |\n| 500 Internal Server Error | The request failed due to a server error.                                 |\n| 503 Service Unavailable   | The server is currently unable to handle the request.                     |\n\n## Batching commands\n\n> Example of batching multiple commands:\n\n```shell\ncurl https://api.todoist.com/api/v1/sync \\\n  -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n  -d commands='[\n  {\n    \"type\": \"project_add\",\n    \"temp_id\": \"0a57a3db-2ff1-4d2d-adf6-12490c13c712\",\n    \"uuid\": \"2c0f6e03-c372-46ba-8e85-d94af56abcf3\",\n    \"args\": { \"name\": \"Shopping List\" }\n  },\n  {\n    \"type\": \"item_add\",\n    \"temp_id\": \"ef3d840e-84c9-4433-9a32-86ae9a1e7d42\",\n    \"uuid\": \"49ede211-12f3-42e9-8345-4c0d2b29c08d\",\n    \"args\": { \"content\": \"Buy Milk\", \"project_id\": \"0a57a3db-2ff1-4d2d-adf6-12490c13c712\" }\n  },\n  {\n    \"type\": \"item_add\",\n    \"temp_id\": \"8a23c8cb-1d76-469d-a2c0-80a28b3ea6f6\",\n    \"uuid\": \"46619250-ae02-4ab0-bd31-3c9ab0307e53\",\n    \"args\": { \"content\": \"Buy Coffee\", \"project_id\": \"0a57a3db-2ff1-4d2d-adf6-12490c13c712\" }\n  },\n  {\n    \"type\": \"item_add\",\n    \"temp_id\": \"bf087eaf-aea9-4cb1-ab57-85188a2d428f\",\n    \"uuid\": \"d0a1666b-d615-4250-aac5-65c7ea89091a\",\n    \"args\": { \"content\": \"Buy Sugar\", \"project_id\": \"0a57a3db-2ff1-4d2d-adf6-12490c13c712\" }\n  }]'\n```\n\n> Example response:\n\n```shell\n{\n  \"sync_status\": {\n    \"2c0f6e03-c372-46ba-8e85-d94af56abcf3\": \"ok\",\n    \"49ede211-12f3-42e9-8345-4c0d2b29c08d\": \"ok\",\n    \"d0a1666b-d615-4250-aac5-65c7ea89091a\": \"ok\",\n    \"46619250-ae02-4ab0-bd31-3c9ab0307e53\": \"ok\"\n  },\n  \"temp_id_mapping\": {\n    \"8a23c8cb-1d76-469d-a2c0-80a28b3ea6f6\": \"6X6HrfVQvQq5WCXH\",\n    \"0a57a3db-2ff1-4d2d-adf6-12490c13c712\": \"6X6HrhXfQ9857XVG\",\n    \"bf087eaf-aea9-4cb1-ab57-85188a2d428f\": \"6X6HrjHFgc3jQM8H\",\n    \"ef3d840e-84c9-4433-9a32-86ae9a1e7d42\": \"6X6HrmjgW88crvMC\"\n  },\n  \"full_sync\": true,\n  \"sync_token\": \"GSg4kDBAKWU7TZA_a-gcuSpxmO1lXT5bhLqUGd1F-AH69_qKEdkN_fJoBq3c\"\n}\n```\n\nWhen working with the Sync API, changes can be **batched** into one commit.\nIn our example, we're batching the creation of a 'Shopping List' project with three\ndifferent items.\n\nAs we've committed the changes all at once, we’re significantly reducing the amount of\nnetwork calls that have to be made, as well as ensuring we’re not running into any rate\nlimiting issues.\n\n# Workspace\n\n> An example workspace object:\n\n```\n{\n  \"created_at\": \"2024-10-19T10:00:00.123456Z\",\n  \"creator_id\": \"123\",\n  \"current_active_projects\": 5,\n  \"current_member_count\": 2,\n  \"current_template_count\": 0,\n  \"description\": \"Workspace description\",\n  \"domain_discovery\": false,\n  \"domain_name\": null,\n  \"id\": \"1234\",\n  \"invite_code\": \"ptoh4SICUu4\",\n  \"is_collapsed\": false,\n  \"is_deleted\": false,\n  \"is_guest_allowed\": true,\n  \"is_link_sharing_enabled\": true,\n  \"is_trial_pending\": false,\n  \"limits\": {\n    \"current\": {\n      \"admin_tools\": false,\n      \"advanced_permissions\": false,\n      \"automatic_backups\": false,\n      \"calendar_layout\": false,\n      \"durations\": false,\n      \"max_collaborators\": 250,\n      \"max_folders_per_workspace\": 1000,\n      \"max_guests_per_workspace\": 1000,\n      \"max_projects\": 5,\n      \"max_workspace_templates\": 100,\n      \"max_workspace_users\": 1000,\n      \"max_workspaces\": 50,\n      \"plan_name\": \"teams_workspaces_starter\",\n      \"reminders\": false,\n      \"reminders_at_due\": true,\n      \"security_controls\": false,\n      \"team_activity\": true,\n      \"team_activity_plus\": false,\n      \"upload_limit_mb\": 5\n    },\n    \"next\": {\n      \"admin_tools\": true,\n      \"advanced_permissions\": true,\n      \"automatic_backups\": true,\n      \"max_collaborators\": 250,\n      \"max_guests_per_workspace\": 1000,\n      \"max_projects\": 1000,\n      \"max_workspace_users\": 1000,\n      \"plan_name\": \"teams_workspaces_business\",\n      \"reminders\": true,\n      \"security_controls\": true,\n      \"upload_limit_mb\": 100\n    }\n  },\n  \"logo_big\": \"https://...\",\n  \"logo_medium\": \"https://...\",\n  \"logo_s640\": \"https://...\",\n  \"logo_small\": \"https://...\",\n  \"member_count_by_type\": {\n    \"admin_count\": 2,\n    \"guest_count\": 0,\n    \"member_count\": 0\n  },\n  \"name\": \"Workspace name\",\n  \"pending_invitations\": [\n    \"pending@doist.com\"\n  ],\n  \"pending_invites_by_type\": {\n    \"admin_count\": 1,\n    \"guest_count\": 0,\n    \"member_count\": 0\n  },\n  \"plan\": \"STARTER\",\n  \"properties\": {},\n  \"restrict_email_domains\": false,\n  \"role\": \"MEMBER\"\n}\n```\n\n#### Properties\n\n| Property                          | Description                                                                                                                                                                                                                                                                                                                                                                                                                     |\n|-----------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| id _String_                       | The ID of the workspace.                                                                                                                                                                                                                                                                                                                                                                                                        |\n| name _String_                     | The name of the workspace (up to 255 characters).                                                                                                                                                                                                                                                                                                                                                                               |\n| description _String_              | The description of the workspace.                                                                                                                                                                                                                                                                                                                                                                                               |\n| plan _String_                     | The subscription plan this workspace is currently on, either `STARTER` or `BUSINESS`.                                                                                                                                                                                                                                                                                                                                           |\n| is_link_sharing_enabled _Boolean_ | True if users are allowed to join the workspace using an invitation link. Default value is True. _For guests, this field will be set to `null` as guests are not allowed to have access to this field._                                                                                                                                                                                                                         |\n| is_guest_allowed _Boolean_        | True if users from outside the workspace are allowed to join or be invited to workspace projects. Default value is True.                                                                                                                                                                                                                                                                                                        |\n| invite_code _String_              | The invitation code used to generate an invitation link. If `is_link_sharing_enabled` is True, anyone can join the workspace using this code. _For guests, this field will be set to `null` as guests are not allowed to have access to this field._                                                                                                                                                                            |\n| role _String_                     | The role of the requesting user in this workspace. Possible values are: `ADMIN`, `MEMBER` or `GUEST`. A guest is someone who is a collaborator of a workspace project, without being an actual member of the workspace. This field can be `null` if the requesting user is not part of the workspace. For example, when receiving the workspace deletion related sync update when a user leaves or is removed from a workspace. |\n| logo_big _String_                 | The URL for the big workspace logo image.                                                                                                                                                                                                                                                                                                                                                                                       |\n| logo_medium _String_              | The URL for the medium workspace logo image.                                                                                                                                                                                                                                                                                                                                                                                    |\n| logo_small _String_               | The URL for the small workspace logo image.                                                                                                                                                                                                                                                                                                                                                                                     |\n| logo_s640 _String_                | The URL for the square 640px workspace logo image.                                                                                                                                                                                                                                                                                                                                                                              |\n| limits _Object_                   | A list of restrictions for the workspace based on it's current plan, denoting what features are enabled and limits are imposed.                                                                                                                                                                                                                                                                                                 |\n| creator_id _String_               | The ID of the user who created the workspace.                                                                                                                                                                                                                                                                                                                                                                                   |\n| created_at _String_               | The date when the workspace was created.                                                                                                                                                                                                                                                                                                                                                                                        |\n| is_deleted _Boolean_              | True if it is a deleted workspace.                                                                                                                                                                                                                                                                                                                                                                                              |\n| is_collapsed _Boolean_            | True if the workspace is collapsed. This is a user-specific attribute and will reflect the requesting user’s `is_collapsed` state.                                                                                                                                                                                                                                                                                              |\n| domain_name _String_              | The domain name of the workspace.                                                                                                                                                                                                                                                                                                                                                                                               |\n| domain_discovery _Boolean_        | True if users with e-mail addresses in the workspace domain can join the workspace without an invitation.                                                                                                                                                                                                                                                                                                                       |\n| restrict_email_domains _Boolean_  | True if only users with e-mail addresses in the workspace domain can join the workspace.                                                                                                                                                                                                                                                                                                                                        |\n\n## Add a workspace\n\n> Example add workspace request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"workspace_add\",\n        \"temp_id\": \"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\",\n        \"uuid\": \"32774db9-a1da-4550-8d9d-910372124fa4\",\n        \"args\": {\n            \"name\": \"Fellowship Workspace\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"32774db9-a1da-4550-8d9d-910372124fa4\": \"ok\"},\n  \"temp_id_mapping\": {\"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\": \"6X6WMG4rmqx6FXQ9\"},\n  ...\n}\n```\n\nAdd a new workspace.\n\n#### Command arguments\n\n| Argument                           | Required | Description                                                                                                                   |\n| ---------------------------------- | -------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| name _String_                      | Yes      | The name of the workspace.                                                                                                    |\n| description _String_               | No       | The description of the workspace (up to 1024 characters).                                                                     |\n| is_link_sharing_enabled _Boolean_ | No       | Indicates if users are allowed to join the workspace using an invitation link. Default value is True.                         |\n| is_guest_allowed _Boolean_        | No       | Indicates if users from outside the workspace are allowed to join or be invited to workspace projects. Default value is True. |\n| domain_name _String_              | No       | The domain name of the workspace.                                                                                             |\n| domain_discovery _Boolean_        | No       | True if users with e-mail addresses in the workspace domain can join the workspace without an invitation.                     |\n| restrict_email_domains _Boolean_  | No       | True if only users with e-mail addresses in the workspace domain can join the workspace.                                      |\n\n## Update a workspace\n\n> Example update workspace request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"workspace_update\",\n        \"temp_id\": \"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\",\n        \"uuid\": \"32774db9-a1da-4550-8d9d-910372124fa4\",\n        \"args\": {\n            \"id\": \"12345\",\n            \"description\": \"Where magic happens\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"32774db9-a1da-4550-8d9d-910372124fa4\": \"ok\"},\n  \"temp_id_mapping\": {\"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\": \"6X6WMMqgq2PWxjCX\"},\n  ...\n}\n```\n\nUpdate an existing workspace.\n\n#### Command arguments\n\n| Argument                          | Required | Description                                                                                                                                                                                               |\n|-----------------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| id _String_                       | Yes      | Real or temp ID of the workspace                                                                                                                                                                          |\n| name _String_                     | No       | The name of the workspace.                                                                                                                                                                                |\n| description _String_              | No       | The description of the workspace (up to 1024 characters).                                                                                                                                                 |\n| is_collapsed _Boolean_            | No       | The collapsed state of the workspace for the current user                                                                                                                                                 |\n| is_link_sharing_enabled _Boolean_ | No       | Indicates if users are allowed to join the workspace using an invitation link.                                                                                                                            |\n| is_guest_allowed _Boolean_        | No       | Indicates if users from outside the workspace are allowed to join or be invited to workspace projects. Default value is True.                                                                             |\n| invite_code _String_              | No       | Regenerate the invite_code for the workspace. Any non-empty string value will regenerate a new code, the provided value with this argument is not significant, only an indication to regenerate the code. |\n| domain_name _String_              | No       | The domain name of the workspace.                                                                                                                                                                         |\n| domain_discovery _Boolean_        | No       | True if users with e-mail addresses in the workspace domain can join the workspace without an invitation.                                                                                                 |\n| restrict_email_domains _Boolean_  | No       | True if only users with e-mail addresses in the workspace domain can join the workspace.                                                                                                                  |\n\n## Leave a workspace\n\n> Example leave workspace request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"workspace_leave\",\n        \"temp_id\": \"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\",\n        \"uuid\": \"32774db9-a1da-4550-8d9d-910372124fa4\",\n        \"args\": {\n            \"id\": \"6X6WMMqgq2PWxjCX\",\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"32774db9-a1da-4550-8d9d-910372124fa4\": \"ok\"},\n  ...\n}\n```\n\nRemove self from a workspace. The user is also removed from any workspace project previously joined.\n\n#### Command arguments\n\n| Argument    | Required | Description                      |\n| ----------- | -------- | -------------------------------- |\n| id _String_ | Yes      | Real or temp ID of the workspace |\n\n_All workspace_users can leave a workspace by themselves._\n\n## Delete a workspace\n\n> Example delete workspace request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"workspace_delete\",\n        \"temp_id\": \"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\",\n        \"uuid\": \"32774db9-a1da-4550-8d9d-910372124fa4\",\n        \"args\": {\n            \"id\": \"6X6WMRPC43g2gHVx\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"32774db9-a1da-4550-8d9d-910372124fa4\": \"ok\"},\n  ...\n}\n```\n\nDelete an existing workspace.\n\n_This command is only usable by workspace admins. Other users will get a “forbidden” error._\n\n#### Command arguments\n\n| Argument    | Required | Description             |\n| ----------- | -------- | ----------------------- |\n| id _String_ | Yes      | The ID of the workspace |\n\n# Workspace users\n\n**`workspace_users` are not returned in full sync responses, only in incremental sync**. To keep a list of workspace users up-to-date, clients should first [list all workspace users](#tag/Workspace/operation/get_workspaces_users_api_v1_workspaces_users_get), then use incremental sync to update that initial list as needed.\n\n`workspace_users` are not the same as collaborators. Two users can be members of a common workspace without having a common shared project, so they will both “see” each other in `workspace_users` but not in collaborators.\n\nGuests will not receive `workspace_users` sync events or resources.\n\n> An example workspace_users object:\n\n```\n{\n    \"user_id\": \"1855581\",\n    \"workspace_id\": \"424876\",\n    \"user_email\": \"you@example.com\",\n    \"full_name\": \"Example User\",\n    \"timezone\": \"GMT +3:00\",\n    \"avatar_big\": \"https://*.cloudfront.net/*_big.jpg\",\n    \"avatar_medium\": \"https://*.cloudfront.net/*_medium.jpg\",\n    \"avatar_s640\": \"https://*.cloudfront.net/*_s640.jpg\",\n    \"avatar_small\": \"https://*.cloudfront.net/*_small.jpg\",\n    \"image_id\": \"d160009dfd52b991030d55227003450f\",\n    \"role\": \"MEMBER\"\n    \"is_deleted\": false,\n}\n```\n\n#### Properties\n\n| Property                | Description                                                                                                                                                                                          |\n| ----------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| user_id _String_       | The user ID.                                                                                                                                                                                         |\n| workspace_id _String_  | The workspace ID for this user.                                                                                                                                                                      |\n| user_email _String_    | The user email.                                                                                                                                                                                      |\n| full_name _String_     | The full name of the user.                                                                                                                                                                           |\n| timezone _String_       | The timezone of the user.                                                                                                                                                                            |\n| image_id _String_      | The ID of the user's avatar.                                                                                                                                                                         |\n| role _String_           | The role of the user in this workspace. Possible values are: ADMIN, MEMBER, GUEST. A guest is someone who is a collaborator of a workspace project, without being an actual member of the workspace. |\n| avatar_big _String_    | The link to a 195x195 pixels image of the user's avatar.                                                                                                                                             |\n| avatar_medium _String_ | The link to a 60x60 pixels image of the user's avatar.                                                                                                                                               |\n| avatar_s640 _String_   | The link to a 640x640 pixels image of the user's avatar.                                                                                                                                             |\n| avatar_small _String_  | The link to a 35x35 pixels image of the user's avatar.                                                                                                                                               |\n| is_deleted _Boolean_           | Whether the workspace user is marked as deleted.                                                                                                                                                   |\n\nAvatar URLs are only available if the user has an avatar, in other words, when the `image_id` is not `null`.\n\n## Change user role\n\n> Example role change for a workspace user request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"workspace_update_user\",\n        \"temp_id\": \"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\",\n        \"uuid\": \"32774db9-a1da-4550-8d9d-910372124fa4\",\n        \"args\": {\n            \"workspace_id\": \"12345,\n            \"user_email\": \"user@acme.com\",\n            \"role\": \"ADMIN\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"32774db9-a1da-4550-8d9d-910372124fa4\": \"ok\"},\n  \"temp_id_mapping\": {\"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\": \"12345\"},\n  ...\n}\n```\n\nChange the role of a workspace user.\n\n_Admins or members can not be downgraded to guests._\n\n_This command is only usable by workspace admins. Other users will get a “forbidden” error._\n\n#### Command arguments\n\n| Argument             | Required | Description                                                                       |\n| -------------------- | -------- | --------------------------------------------------------------------------------- |\n| id _String_          | Yes      | Real or temp ID of the workspace                                                  |\n| user_email _String_ | Yes      | The new member's email                                                            |\n| role _String_        | Yes      | The role to be assigned to the new member. Valid values are `GUEST`, `MEMBER` and `ADMIN`. |\n\n## Delete workspace user\n\n> Example delete workspace user request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"workspace_delete_user\",\n        \"temp_id\": \"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\",\n        \"uuid\": \"32774db9-a1da-4550-8d9d-910372124fa4\",\n        \"args\": {\n            \"workspace_id\": \"12345\",\n            \"user_email\": \"user@acme.com\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"32774db9-a1da-4550-8d9d-910372124fa4\": \"ok\"},\n  ...\n}\n```\n\nRemove a user from a workspace. That user is also removed from any workspace project they joined.\n\n_This command is only usable by workspace admins. Other users will get a “forbidden” error._\n\n_Admins can use this command to remove themselves from a workspace, unless they are the last admin in the workspace. In that case, a “forbidden” error will be returned._\n\n#### Command arguments\n\n| Argument             | Required | Description                           |\n| -------------------- | -------- | ------------------------------------- |\n| id _String_          | Yes      | Real or temp ID of the workspace      |\n| user_email _String_ | Yes      | The email of the member to be deleted |\n\n## Invite Users to a Workspace\n\n> Example request to invite users to a workspace through the Sync API:\n\n```shell\n$ curl https://api.todoist.com/sync/v10/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n      {\n        \"type\": \"workspace_invite\",\n        \"uuid\": \"32774db9-a1da-4550-8d9d-910372124fa4\",\n        \"args\": {\n            \"id\": \"12345\",\n            \"email_list\": [\"foo@example.com\", \"bar@example.com\"],\n            \"role\": \"MEMBER\"\n        }\n      }]\n    '\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"32774db9-a1da-4550-8d9d-910372124fa4\": \"ok\"},\n  ...\n}\n```\n\nThis will create workspace invitations for a list of email addresses. Usable by all workspace members and admins.\n\n#### Command arguments\n\n| Argument                     | Required | Description                                                                                                                                                                                                                                                                  |\n| ---------------------------- | -------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_                  | Yes      | ID of the workspace.                                                                                                                                                                                                                                                         |\n| email_list _List of String_ | Yes      | A list of emails to be invited to the workspace.                                                                                                                                                                                                                             |\n| role _String_                | No       | The role the user will be given if they accept the invite. Possible values are `ADMIN`, `MEMBER`, and `GUEST`. If not provided, the default value according to the plan will be used. For Starter plans, the default is ADMIN and for Business plans, the default is MEMBER. |\n\n# View Options\n\n> An example view option object:\n\n```\n{\n    \"view_type\": \"project\",\n    \"object_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"filtered_by\": \"!assigned\",\n    \"grouped_by\": \"priority\",\n    \"sorted_by\": \"added_date\",\n    \"sort_order\": \"asc\",\n    \"show_completed_tasks\": false,\n    \"view_mode\": \"calendar\",\n    \"calendar_settings\": { \"layout\": \"month\" },\n    \"is_deleted\": false,\n    \"deadline\": \"no deadline\"\n}\n```\n\n#### Properties\n\n| Property                        | Description                                                                                                                                                                                     |\n| ------------------------------- |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| view_type _Enum_               | The type of a view customization. `today` for the today view, `upcoming` for the upcoming view, `project` for a project, `label` for a label, or `filter` for a filter.                         |\n| object_id _String_             | The ID of the object referred to by `view_type`, when `view_type` is `project`, `label`, or `filter`.                                                                                           |\n| filtered_by _String_           | A search query for this view customization. [Examples of searches](https://www.todoist.com/help/articles/introduction-to-filters-V98wIH) can be found in the Todoist help page.                     |\n| grouped_by _Enum_              | Grouping criteria for this view customization. One of `assignee`, `added_date`, `due_date`, `deadline`, `label`, `priority`, `project`, or `workspace`.                                         |\n| sorted_by _Enum_               | Sorting criteria for this view customization. One of `alphabetically`, `assignee`, `added_date`, `due_date`, `deadline`, `label`, `priority`, `project`, `workspace`, or `manual`.              |\n| sort_order _Enum_              | Sorting order for this view customization. `asc` for ascending, `desc` for descending.                                                                                                          |\n| show_completed_tasks _Boolean_ | Whether completed tasks should be shown automatically in this view customization.                                                                                                               |\n| view_mode _Enum_               | The mode in which to render tasks in this view customization. One of `list`, `board`, or `calendar`. **Note: This setting is ignored in projects, where `project.view_style` is used instead.** |\n| deadline _String_               | A search query for this view customization. [Examples of deadline searches](https://www.todoist.com/help/articles/introduction-to-filters-V98wIH) can be found in the Todoist help page.            |\n| calendar_settings _JSON_       | The settings for the calendar when `view_mode` is set to `calendar`. Currently, only `{\"layout\": \"week\"}` and `{\"layout\": \"month\"}` are supported.                                              |\n| is_deleted _Boolean_           | Whether the view option is marked as deleted.                                                                                                                                                   |\n\n**Note:** `view_options.view_mode` is secondary to [`project.view_style`](#tag/Sync/View-Options) for projects in Todoist clients. The former is set per user, while the latter is set per project.\n\n## Set a view option\n\n| Argument                        | Required | Description                                                                                                                                                                          |\n| ------------------------------- | -------- |--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| view_type _Enum_               | Yes      | Type of the view customization to be set. `today` for the today view, `upcoming` for the upcoming view, `project` for a project, `label` for a label, or `filter` for a filter.      |\n| object_id _String_             | Yes      | ID of the object referred to by `view_type`, required when `view_type` is `project`, `label`, or `filter`.                                                                           |\n| filtered_by _String_           | No       | Search query. [Examples of searches](https://www.todoist.com/help/articles/introduction-to-filters-V98wIH) can be found in the Todoist help page.                                        |\n| grouped_by _Enum_              | No       | Grouping criteria. One of `assignee`, `added_date`, `due_date`, `deadline`, `label`, `priority`, `project`, or `workspace`.                                                          |\n| sorted_by _Enum_               | No       | Sorting criteria. One of `alphabetically`, `assignee`, `added_date`, `due_date`, `deadline`, `label`, `priority`, `project`, `workspace`, or `manual`.                               |\n| sort_order _Enum_              | No       | Sorting order. `asc` for ascending, `desc` for descending.                                                                                                                           |\n| show_completed_tasks _Boolean_ | No       | Whether completed tasks should be shown automatically in this view customization.                                                                                                    |\n| view_mode _Enum_               | No       | The mode in which to render tasks. One of `list`, `board`, or `calendar`.                                                                                                            |\n| deadline _String_               | No       | A search query for this view customization. [Examples of deadline searches](https://www.todoist.com/help/articles/introduction-to-filters-V98wIH) can be found in the Todoist help page. |\n| calendar_settings _JSON_       | No       | The settings for the calendar when `view_mode` is set to `calendar`. Currently, only `{\"layout\": \"week\"}` and `{\"layout\": \"month\"}` are supported.                                   |\n\n> Example set view option request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"view_options_set\",\n        \"uuid\": \"997d4b43-55f1-48a9-9e66-de5785dfd696\",\n        \"args\": {\n            \"view_type\": \"project\",\n            \"object_id\": \"6Jf8VQXxpwv56VQ7\",\n            \"view_mode\": \"board\",\n            \"grouped_by\": \"assignee\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"997d4b43-55f1-48a9-9e66-de5785dfd696\": \"ok\"},\n  ...\n}\n```\n\n## Delete view option\n\n| Argument            | Required | Description                                                                                                                                                                     |\n| ------------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| view_type _Enum_   | Yes      | Type of the view customization to delete. `today` for the today view, `upcoming` for the upcoming view, `project` for a project, `label` for a label, or `filter` for a filter. |\n| object_id _String_ | Yes      | ID of the object referred to by `view_type`, required when `view_type` is `project`, `label`, or `filter`.                                                                      |\n\n> Example delete view option request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"view_options_delete\",\n        \"uuid\": \"f8539c77-7fd7-4846-afad-3b201f0be8a6\",\n        \"args\": {\n            \"view_type\": \"today\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"f8539c77-7fd7-4846-afad-3b201f0be8a6\": \"ok\"},\n  ...\n}\n```\n\n# User\n\n> An example user:\n\n```\n{\n    \"activated_user\": false,\n    \"auto_reminder\": 0,\n    \"avatar_big\": \"https://*.cloudfront.net/*_big.jpg\",\n    \"avatar_medium\": \"https://*.cloudfront.net/*_medium.jpg\",\n    \"avatar_s640\": \"https://*.cloudfront.net/*_s640.jpg\",\n    \"avatar_small\": \"https://*.cloudfront.net/*_small.jpg\",\n    \"business_account_id\": \"1\",\n    \"daily_goal\": 15,\n    \"date_format\": 0,\n    \"days_off\": [6, 7],\n    \"email\": \"me@example.com\",\n    \"feature_identifier\": \"2671355_0123456789abcdef70123456789abcdefe0123456789abcdefd0123456789abc\",\n    \"features\": {\n        \"beta\": 1,\n        \"dateist_inline_disabled\": false,\n        \"dateist_lang\": null,\n        \"global.teams\": true,\n        \"has_push_reminders\": true,\n        \"karma_disabled\": false,\n        \"karma_vacation\": false,\n        \"kisa_consent_timestamp\": null,\n        \"restriction\": 3\n    },\n    \"full_name\": \"Example User\",\n    \"has_password\": true,\n    \"id\": \"2671355\",\n    \"image_id\": \"d160009dfd52b991030d55227003450f\",\n    \"inbox_project_id\": \"6X7fqH39MwjmwV4q\",\n    \"is_celebrations_enabled\": true,\n    \"is_premium\": true,\n    \"joinable_workspace\": null,\n    \"joined_at\": \"2015-07-31T18:32:06.000000Z\",\n    \"karma\": 37504,\n    \"karma_trend\": \"up\",\n    \"lang\": \"en\",\n    \"mfa_enabled\": false,\n    \"next_week\": 1,\n    \"premium_status\": \"current_personal_plan\",\n    \"premium_until\": null,\n    \"share_limit\": 51,\n    \"sort_order\": 0,\n    \"start_day\": 1,\n    \"start_page\": \"project?id=2203306141\",\n    \"theme_id\": \"11\",\n    \"time_format\": 0,\n    \"token\": \"0123456789abcdef0123456789abcdef01234567\",\n    \"tz_info\": {\n        \"gmt_string\": \"-03:00\",\n        \"hours\": -3,\n        \"is_dst\": 0,\n        \"minutes\": 0,\n        \"timezone\": \"America/Sao_Paulo\"\n    },\n    \"verification_status\": \"legacy\",\n    \"weekend_start_day\": 6,\n    \"weekly_goal\": 30\n}\n```\n\nA Todoist user is represented by a JSON object. The dates will be in the UTC\ntimezone. Typically, a user object will have the following properties:\n\n#### Properties\n\n| Property                      | Description|\n| ----------------------------- ||\n| auto_reminder _Integer_      | The default time in minutes for the automatic reminders set, whenever a due date has been specified for a task.                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| avatar_big _String_          | The link to a 195x195 pixels image of the user's avatar.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n| avatar_medium _String_       | The link to a 60x60 pixels image of the user's avatar.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| avatar_s640 _String_         | The link to a 640x640 pixels image of the user's avatar.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n| avatar_small _String_        | The link to a 35x35 pixels image of the user's avatar.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| business_account_id _String_ | The ID of the user's business account|\n| daily_goal _Integer_         | The daily goal number of completed tasks for karma.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| date_format _Integer_        | Whether to use the `DD-MM-YYYY` date format (if set to `0`), or the `MM-DD-YYYY` format (if set to `1`).                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n| dateist_lang _String_        | The language expected for date recognition instead of the user's `lang` (`null` if the user's `lang` determines this), one of the following values: `da`, `de`, `en`, `es`, `fi`, `fr`, `it`, `ja`, `ko`, `nl`, `pl`, `pt_BR`, `ru`, `sv`, `tr`, `zh_CN`, `zh_TW`.                                                                                                                                                                                                                                                                                                 |\n| days_off _Array_             | Array of integers representing user's days off (between `1` and `7`, where `1` is `Monday` and `7` is `Sunday`).                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| email _String_                | The user's email|\n| feature_identifier _String_  | An opaque id used internally to handle features for the user.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| features _Object_             | Used internally for any special features that apply to the user. Current special features include whether the user has enabled `beta`, whether `dateist_inline_disabled` that is inline date parsing support is disabled, whether the `dateist_lang` is set which overrides the date parsing language, whether the `gold_theme` has been awarded to the user, whether the user `has_push_reminders` enabled, whether the user has `karma_disabled`, whether the user has `karma_vacation` mode enabled, and whether any special `restriction` applies to the user. |\n| full_name _String_           | The user's real name formatted as `Firstname Lastname`.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| has_password _Boolean_       | Whether the user has a password set on the account. It will be `false` if they have only authenticated without a password (e.g. using Google, Facebook, etc.)                                                                                                                                                                                                                                                                                                                                                                                                      |\n| id _String_                   | The user's|\n| image_id _String_            | The ID of the user's avatar|\n| inbox_project_id _String_    | The ID of the user's `Inbox` project|\n| is_premium _Boolean_         | Whether the user has a Todoist Pro subscription (a `true` or `false` value).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| joined_at _String_           | The date when the user joined Todoist.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| karma _Integer_               | The user's karma score|\n| karma_trend _String_         | The user's karma trend (for example `up`|\n| lang _String_                 | The user's language, which can take one of the following values: `da`, `de`, `en`, `es`, `fi`, `fr`, `it`, `ja`, `ko`, `nl`, `pl`, `pt_BR`, `ru`, `sv`, `tr`, `zh_CN`, `zh_TW`.                                                                                                                                                                                                                                                                                                                                                                                    |\n| next_week _Integer_          | The day of the next week, that tasks will be postponed to (between `1` and `7`, where `1` is `Monday` and `7` is `Sunday`).                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| premium_status _String_      | Outlines why a user is premium, possible values are: `not_premium`, `current_personal_plan`, `active_business_account` or `teams_business_member`.                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| premium_until _String_       | The date when the user's Todoist Pro subscription ends (`null` if not a Todoist Pro user). This should be used for informational purposes only as this does not include the grace period upon expiration. As a result, avoid using this to determine whether someone has a Todoist Pro subscription and use `is_premium` instead.                                                                                                                                                                                                                                  |\n| sort_order _Integer_         | Whether to show projects in an `oldest dates first` order (if set to `0`, or a `oldest dates last` order (if set to `1`).                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| start_day _Integer_          | The first day of the week (between `1` and `7`, where `1` is `Monday` and `7` is `Sunday`).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| start_page _String_          | The user's default view on Todoist. The start page can be one of the following: `inbox`, `teaminbox`, `today`, `next7days`, `project?id=1234` to open a project, `label?name=abc` to open a label, or `filter?id=1234` to open a filter.                                                                                                                                                                                                                                                                                                                           |\n| theme_id _String_            | The currently selected Todoist theme (a number between `0` and `10`).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| time_format _Integer_        | Whether to use a `24h` format such as `13:00` (if set to `0`) when displaying time, or a `12h` format such as `1:00pm` (if set to `1`).                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| token _String_                | The user's token that should be used to call the other API methods.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| tz_info _Object_             | The user's timezone (a dictionary structure), which includes the following elements: the `timezone` as a string value, the `hours` and `minutes` difference from GMT, whether daylight saving time applies denoted by `is_dst`, and a string value of the time difference from GMT that is `gmt_string`.                                                                                                                                                                                                                                                           |\n| weekend_start_day _Integer_  | The day used when a user chooses to schedule a task for the 'Weekend' (between 1 and 7, where 1 is Monday and 7 is Sunday).                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| verification_status _String_ | Describes if the user has verified their e-mail address or not. Possible values are:                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n\n- `unverified`, for users that have just signed up. Those users cannot use any of Todoist's social features like sharing projects or accepting project invitations.\n- `verified`, for users that have verified themselves somehow. Clicking on the verification link inside the account confirmation e-mail is one such way alongside signing up through a social account.\n- `blocked`, for users that have failed to verify themselves in 7 days. Those users will have restricted usage of Todoist.\n- `legacy`, for users that have signed up before August, 2022 weekly_goal _Integer_ | The target number of tasks to complete per week.\n\n## Update user's properties\n\n> Example update user request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"user_update\",\n        \"uuid\": \"52f83009-7e27-4b9f-9943-1c5e3d1e6889\",\n        \"args\": {\n            \"current_password\": \"fke4iorij\",\n            \"email\": \"mynewemail@example.com\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"52f83009-7e27-4b9f-9943-1c5e3d1e6889\": \"ok\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument                     | Required                                 | Description                                                                                                                                                                                                                                                                |\n| ---------------------------- | ---------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| current_password _String_   | Yes (if modifying `email` or `password`) | The user's current password. This must be provided if the request is modifying the user's password or email address and the user already has a password set (indicated by `has_password` in the [user](#tag/Sync/User) object). For amending other properties this is not required. |\n| email _String_               | No                                       | The user's email.                                                                                                                                                                                                                                                          |\n| full_name _String_          | No                                       | The user's name.                                                                                                                                                                                                                                                           |\n| password _String_            | No                                       | The user's updated password. Must contain at least 8 characters and not be a common or easily guessed password.                                                                                                                                                            |\n| timezone _String_            | No                                       | The user's timezone (a string value such as `UTC`, `Europe/Lisbon`, `US/Eastern`, `Asia/Taipei`).                                                                                                                                                                          |\n| start_page _String_         | No                                       | The user's default view on Todoist. The start page can be one of the following: `inbox`, `teaminbox`, `today`, `next7days`, `project?id=1234` to open a project, `label?name=abc` to open a label, or `filter?id=1234` to open a filter.                                   |\n| start_day _Integer_         | No                                       | The first day of the week (between `1` and `7`, where `1` is `Monday` and `7` is `Sunday`).                                                                                                                                                                                |\n| next_week _Integer_         | No                                       | The day of the next week, that tasks will be postponed to (between `1` and `7`, where `1` is `Monday` and `7` is `Sunday`).                                                                                                                                                |\n| time_format _Integer_       | No                                       | Whether to use a `24h` format such as `13:00` (if set to `0`) when displaying time, or a `12h` format such as `1:00pm` (if set to `1`).                                                                                                                                    |\n| date_format _Integer_       | No                                       | Whether to use the `DD-MM-YYYY` date format (if set to `0`), or the `MM-DD-YYYY` format (if set to `1`).                                                                                                                                                                   |\n| sort_order _Integer_        | No                                       | Whether to show projects in an `oldest dates first` order (if set to `0`, or a `oldest dates last` order (if set to `1`).                                                                                                                                                  |\n| auto_reminder _Integer_     | No                                       | The default time in minutes for the automatic reminders set, whenever a due date has been specified for a task.                                                                                                                                                            |\n| theme _Integer_              | No                                       | The currently selected Todoist theme (between `0` and `10`).                                                                                                                                                                                                               |\n| weekend_start_day _Integer_ | No                                       | The day used when a user chooses to schedule a task for the 'Weekend' (between 1 and 7, where 1 is Monday and 7 is Sunday).                                                                                                                                                |\n| beta _Boolean_               | No                                       | Whether the user is included in the beta testing group.                                                                                                                                                                                                                    |\n\n#### Error codes\n\n| Error Tag                 | Description                                                                                              |\n| ------------------------- | -------------------------------------------------------------------------------------------------------- |\n| `PASSWORD_REQUIRED`       | The command attempted to modify `password` or `email`, but no value was provided for `current_password`. |\n| `AUTHENTICATION_ERROR`    | The value for `current_password` was incorrect.                                                          |\n| `PASSWORD_TOO_SHORT`      | The value for `password` was shorter than the minimum 8 characters.                                      |\n| `COMMON_PASSWORD`         | The value for `password` was matched against a common password list and rejected.                        |\n| `PASSWORD_CONTAINS_EMAIL` | The value for password was matched against the user's email address or a part of the address.            |\n| `INVALID_EMAIL`           | The value for `email` was not a valid email address.                                                     |\n\n## Update karma goals\n\n> Example update karma goals request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"update_goals\",\n        \"uuid\": \"b9bbeaf8-9db6-452a-a843-a192f1542892\",\n        \"args\": {\"vacation_mode\": 1}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"b9bbeaf8-9db6-452a-a843-a192f1542892\": \"ok\"},\n  ...\n}\n```\n\nUpdate the karma goals of the user.\n\n#### Command arguments\n\n| Argument                  | Required | Description                                                                                       |\n| ------------------------- | -------- | ------------------------------------------------------------------------------------------------- |\n| daily_goal _Integer_     | No       | The target number of tasks to complete per day.                                                   |\n| weekly_goal _Integer_    | No       | The target number of tasks to complete per week.                                                  |\n| ignore_days _Integer_    | No       | A list with the days of the week to ignore (`1` for `Monday` and `7` for `Sunday`).               |\n| vacation_mode _Integer_  | No       | Marks the user as being on vacation (where `1` is true and `0` is false).                         |\n| karma_disabled _Integer_ | No       | Whether to disable the karma and goals measuring altogether (where `1` is true and `0` is false). |\n\n## User plan limits\n\n> An example user plan limits sync response\n\n```\n{\n    \"user_plan_limits\": {\n        \"current\": {\n            \"plan_name\": \"free\",\n            ...details of the current user plan\n        },\n        \"next\": {\n            \"plan_name\": \"pro\",\n            ...details of a potential upgrade\n        }\n    }\n}\n```\n\nThe `user_plan_limits` sync resource type describes the available features and\nlimits applicable to the current user plan. The user plan info object (detailed\nin the next section) returned within the `current` property shows the values\nthat are currently applied to the user.\n\nIf there is an upgrade available, the `next` property will show the values that will apply if the user chooses\nto upgrade. If there is no available upgrade, the `next` value will be null.\n\n#### Properties\n\n| Property         | Description                                                                                                                                        |\n| ---------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- |\n| current _Object_ | A user plan info object representing the available functionality and limits for the user's current plan.                        |\n| next _Object_    | A user plan info object representing the plan available for upgrade. If there is no available upgrade, this value will be null. |\n\n### User plan info\n\n> An example user plan info object\n\n```\n{\n    \"activity_log\": true,\n    \"activity_log_limit\": 7,\n    \"advanced_permissions\": true,\n    \"automatic_backups\": false,\n    \"calendar_feeds\": true,\n    \"calendar_layout\": true,\n    \"comments\": true,\n    \"completed_tasks\": true,\n    \"customization_color\": false,\n    \"deadlines\": true,\n    \"durations\": true,\n    \"email_forwarding\": true,\n    \"filters\": true,\n    \"labels\": true,\n    \"max_calendar_accounts\": 1,\n    \"max_collaborators\": 5,\n    \"max_filters\": 3,\n    \"max_folders_per_workspace\": 25,\n    \"max_free_workspaces_created\": 1,\n    \"max_guests_per_workspace\": 25,\n    \"max_labels\": 500,\n    \"max_projects\": 5,\n    \"max_projects_joined\": 500,\n    \"max_reminders_location\": 300,\n    \"max_reminders_time\": 700,\n    \"max_sections\": 20,\n    \"max_tasks\": 300,\n    \"max_user_templates\": 100,\n    \"plan_name\": \"free\",\n    \"reminders\": false,\n    \"reminders_at_due\": true,\n    \"templates\": true,\n    \"upload_limit_mb\": 5,\n    \"uploads\": true,\n    \"weekly_trends\": true\n}\n```\n\nThe user plan info object describes the availability of features and any limitations applied for a given user plan.\n\n#### Properties\n\n| Property                          | Description                                                                                                                 |\n| --------------------------------- | --------------------------------------------------------------------------------------------------------------------------- |\n| plan_name _String_               | The name of the plan.                                                                                                       |\n| activity_log _Boolean_           | Whether the user can view the [activity log](#tag/Activity).                                                                    |\n| activity_log_limit _Integer_     | The number of days of history that will be displayed within the activity log. If there is no limit, the value will be `-1`. |\n| automatic_backups _Boolean_      | Whether [backups](#tag/Backups) will be automatically created for the user's account and available for download.                |\n| calendar_feeds _Boolean_         | Whether calendar feeds can be enabled for the user's projects.                                                              |\n| comments _Boolean_                | Whether the user can add [comments](#tag/Sync/Comments).                                                                                |\n| completed_tasks _Boolean_        | Whether the user can search in the completed tasks archive or access the completed tasks overview.                          |\n| customization_color _Boolean_    | Whether the user can use special themes or other visual customization such as custom app icons.                             |\n| email_forwarding _Boolean_       | Whether the user can add tasks or comments via [email](#tag/Emails).                                                            |\n| filters _Boolean_                 | Whether the user can add and update [filters](#tag/Sync/Filters).                                                                    |\n| max_filters _Integer_            | The maximum number of filters a user can have.                                                                              |\n| labels _Boolean_                  | Whether the user can add [labels](#tag/Sync/Labels).                                                                                 |\n| max_labels _Integer_             | The maximum number of labels a user can have.                                                                               |\n| reminders _Boolean_               | Whether the user can add [reminders](#tag/Sync/Reminders).                                                                           |\n| max_reminders_location _Integer_ | The maximum number of location reminders a user can have.                                                                   |\n| max_reminders_time _Integer_     | The maximum number of time-based reminders a user can have.                                                                 |\n| templates _Boolean_               | Whether the user can import and export [project templates](#tag/Templates).                                                     |\n| uploads _Boolean_                 | Whether the user can [upload attachments](#tag/Uploads).                                                                        |\n| upload_limit_mb _Integer_        | The maximum size of an individual file the user can upload.                                                                 |\n| weekly_trends _Boolean_          | Whether the user can view [productivity stats](#tag/Sync/User).                                                     |\n| max_projects _Integer_           | The maximum number of active [projects](#tag/Sync/Projects) a user can have.                                                         |\n| max_sections _Integer_           | The maximum number of active [sections](#tag/Sync/Sections) a user can have.                                                         |\n| max_tasks _Integer_              | The maximum number of active [tasks](#tag/Sync/Tasks) a user can have.                                                               |\n| max_collaborators _Integer_      | The maximum number of [collaborators](#tag/Sync/Sharing/Collaborators) a user can add to a project.                                                |\n\n## User settings\n\n> Example user settings object:\n\n```\n{\n    \"reminder_push\": true,\n    \"reminder_desktop\": true,\n    \"reminder_email\": true,\n    \"completed_sound_desktop\": true,\n    \"completed_sound_mobile\": true\n}\n```\n\n_Availability of reminders functionality is dependent on the current user plan.\nThis value is indicated by the `reminders` property of the [user plan limits](#tag/Sync/User/User-plan-limits) object.\nThese settings will have no effect if the user is not eligible for reminders._\n\n#### Properties\n\n| Property                           | Description                                                                      |\n| ---------------------------------- | -------------------------------------------------------------------------------- |\n| reminder_push _Boolean_           | Set to true to send reminders as push notifications.                             |\n| reminder_desktop _Boolean_        | Set to true to show reminders in desktop applications.                           |\n| reminder_email _Boolean_          | Set to true to send reminders by email.                                          |\n| completed_sound_desktop _Boolean_ | Set to true to enable sound when a task is completed in Todoist desktop clients. |\n| completed_sound_mobile _Boolean_  | Set to true to enable sound when a task is completed in Todoist mobile clients.  |\n\n### Update user settings\n\n> Example update user settings request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"user_settings_update\",\n        \"temp_id\": \"e24ad822-a0df-4b7d-840f-83a5424a484a\",\n        \"uuid\": \"41e59a76-3430-4e44-92b9-09d114be0d49\",\n        \"args\": {\"reminder_desktop\": false}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"41e59a76-3430-4e44-92b9-09d114be0d49\": \"ok\"},\n  ...\n}\n```\n\nUpdate one or more user settings.\n\n#### Command arguments\n\n| Argument                           | Required | Description                                                                      |\n| ---------------------------------- | -------- | -------------------------------------------------------------------------------- |\n| reminder_push _Boolean_           | No       | Set to true to send reminders as push notifications.                             |\n| reminder_desktop _Boolean_        | No       | Set to true to show reminders in desktop applications.                           |\n| reminder_email _Boolean_          | No       | Set to true to send reminders by email.                                          |\n| completed_sound_desktop _Boolean_ | No       | Set to true to enable sound when a task is completed in Todoist desktop clients. |\n| completed_sound_mobile _Boolean_  | No       | Set to true to enable sound when a task is completed in Todoist mobile clients.  |\n\n# Sharing\n\nProjects can be shared with other users, which are then referred to as collaborators.\nThis section describes the different commands that are related to sharing.\n\n## Collaborators\n\n> An example collaborator object:\n\n```\n{\n    \"id\": \"2671362\",\n    \"email\": \"you@example.com\",\n    \"full_name\": \"Example User\",\n    \"timezone\": \"GMT +3:00\",\n    \"image_id\": null\n}\n```\n\nThere are two types of objects to get information about a user’s collaborators,\nand their participation in shared projects: `collaborators` and\n`collaborator_states`\n\nEvery user who shares at least one project with another user, has a\ncollaborators record in the API response. The record contains a restricted\nsubset of user-specific properties.\n\n| Property            | Description                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_         | The user ID of the collaborator.                                                                                                                                                                                                                                                                                                                                                                                                        |\n| email _String_      | The email of the collaborator.                                                                                                                                                                                                                                                                                                                                                                                                          |\n| full_name _String_ | The full name of the collaborator.                                                                                                                                                                                                                                                                                                                                                                                                      |\n| timezone _String_   | The timezone of the collaborator.                                                                                                                                                                                                                                                                                                                                                                                                       |\n| image_id _String_  | The image ID for the collaborator's avatar, which can be used to get an avatar from a specific URL. Specifically the `https://dcff1xvirvpfp.cloudfront.net/<image_id>_big.jpg` can be used for a big (`195x195` pixels) avatar, `https://dcff1xvirvpfp.cloudfront.net/<image_id>_medium.jpg` for a medium (`60x60` pixels) avatar, and `https://dcff1xvirvpfp.cloudfront.net/<image_id>_small.jpg` for a small (`35x35` pixels) avatar. |\n\nPartial sync returns updated collaborator objects for users that have changed\ntheir attributes, such as their name or email.\n\n## Collaborator states\n\n> An example collaborator state:\n\n```\n{\n    \"project_id\": \"6H2c63wj7x9hFJfX\",\n    \"user_id\": \"2671362\",\n    \"state\": \"active\",\n    \"is_deleted\": false,\n    \"role\": \"READ_WRITE\",\n}\n```\n\nThe list of collaborators don’t contain any information on how users are\nconnected to shared projects. To provide information about these connections,\nthe `collaborator_states` field should be used. Every collaborator state record\nis a mere \"user to shared project\" mapping.\n\n| Property                 | Description                                                               |\n| ------------------------ | ------------------------------------------------------------------------- |\n| project_id _String_     | The shared project ID of the user.                                        |\n| user_id _String_        | The user ID of the collaborator.                                          |\n| state _String_           | The status of the collaborator state, either `active` or `invited`.       |\n| is_deleted _Boolean_    | Set to `true` when the collaborator leaves the shared project.            |\n| role                     | The role of the collaborator in the project. _Only available for teams_   |\n\n## Share a project\n\n> Example share project request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"share_project\",\n        \"temp_id\": \"854be9cd-965f-4ddd-a07e-6a1d4a6e6f7a\",\n        \"uuid\": \"fe6637e3-03ce-4236-a202-8b28de2c8372\",\n        \"args\": {\n            \"project_id\": \"6H2c63wj7x9hFJfX\",\n            \"email\": \"you@example.com\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"fe6637e3-03ce-4236-a202-8b28de2c8372\": \"ok\"},\n  ...\n}\n```\n\nShare a project with another user.\n\n_When sharing a teams project_\n\nWorkspace projects with `is_invite_only` set to true can only be shared by\nworkspace admins, or by project members with `ADMIN` or `CREATOR` role. Other\nusers will get a “forbidden” error. The role for the new collaborator cannot be\ngreater than the role of the person sharing the project.\n\n#### Command arguments\n\n| Argument             | Required | Description                                                                                                                                          |\n| -------------------- | -------- | ---------------------------------------------------------------------------------------------------------------------------------------------------- |\n| project_id _String_ | Yes      | The project to be shared.                                                                                                                            |\n| email _String_       | Yes      | The user email with whom to share the project.                                                                                                       |\n| role _String_        | No       | The role of the new collaborator in the workspace project. If missing, the workspace `collaborator_role_default` will be used. _Only used for teams_ |\n\n## Delete a collaborator\n\n> Example delete collaborator request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"delete_collaborator\",\n        \"uuid\": \"0ae55ac0-3b8d-4835-b7c3-59ba30e73ae4\",\n        \"args\": {\n            \"project_id\": \"6H2c63wj7x9hFJfX\",\n            \"email\": \"you@example.com\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"0ae55ac0-3b8d-4835-b7c3-59ba30e73ae4\": \"ok\"},\n  ...\n}\n```\n\nRemove a user from a shared project.\nIn Teams, only workspace admins or project members with `ADMIN` or `CREATOR` role can delete a collaborator. Other users will get a “forbidden” error.\n\n#### Command arguments\n\n| Argument             | Required | Description                                      |\n| -------------------- | -------- | ------------------------------------------------ |\n| project_id _String_ | Yes      | The project to be affected.                      |\n| email _String_       | Yes      | The user email with whom the project was shared. |\n\n## Accept an invitation\n\n> Example accept invitation request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"accept_invitation\",\n        \"uuid\": \"4b254da4-fa2b-4a88-9439-b27903a90f7f\",\n        \"args\": {\n            \"invitation_id\": \"1234\",\n            \"invitation_secret\": \"abcdefghijklmno\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"4b254da4-fa2b-4a88-9439-b27903a90f7f\": \"ok\"},\n  ...\n}\n```\n\nAccept an invitation to join a shared project.\n\n#### Command arguments\n\n| Argument                    | Required | Description                                    |\n| --------------------------- | -------- | ---------------------------------------------- |\n| invitation_id _String_     | Yes      | The invitation ID.                             |\n| invitation_secret _String_ | Yes      | The secret fetched from the live notification. |\n\n## Reject an invitation\n\n> Example reject invitation request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"reject_invitation\",\n        \"uuid\": \"284fd900-c36f-44e5-ab92-ee93455e50e0\",\n        \"args\": {\n            \"invitation_id\": \"1234\",\n            \"invitation_secret\": \"abcdefghijklmno\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"284fd900-c36f-44e5-ab92-ee93455e50e0\": \"ok\"},\n  ...\n}\n```\n\nReject an invitation to join a shared project.\n\n#### Command arguments\n\n| Argument                    | Required | Description                                    |\n| --------------------------- | -------- | ---------------------------------------------- |\n| invitation_id _String_     | Yes      | The invitation ID.                             |\n| invitation_secret _String_ | Yes      | The secret fetched from the live notification. |\n\n## Delete an invitation\n\n> Example delete invitation request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"delete_invitation\",\n        \"uuid\": \"399f6a8d-ddea-4146-ae8e-b41fb8ff6945\",\n        \"args\": {\"invitation_id\": \"1234\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"399f6a8d-ddea-4146-ae8e-b41fb8ff6945\": \"ok\"},\n  ...\n}\n```\n\nDelete an invitation to join a shared project.\n\n#### Command arguments\n\n| Argument                | Required | Description                   |\n| ----------------------- | -------- | ----------------------------- |\n| invitation_id _String_ | Yes      | The invitation to be deleted. |\n\n# Sections\n\n> An example section object\n\n```\n{\n    \"id\": \"6Jf8VQXxpwv56VQ7\",\n    \"name\": \"Groceries\",\n    \"project_id\": \"9Bw8VQXxpwv56ZY2\",\n    \"section_order\": 1,\n    \"is_collapsed\": false,\n    \"user_id\": \"2671355\",\n    \"is_deleted\": false,\n    \"is_archived\": false,\n    \"archived_at\": null,\n    \"added_at\": \"2019-10-07T07:09:27.000000Z\",\n    \"updated_at\": \"2019-10-07T07:09:27.000000Z\"\n}\n```\n\n#### Properties\n\n| Property                | Description                                                                                           |\n|-------------------------|-------------------------------------------------------------------------------------------------------|\n| id _String_             | The ID of the section.                                                                                |\n| name _String_           | The name of the section.                                                                              |\n| project_id _String_     | Project that the section resides in                                                                   |\n| section_order _Integer_ | The order of the section. Defines the position of the section among all the sections in the project.  |\n| is_collapsed _Boolean_  | Whether the section's tasks are collapsed (a `true` or `false` value).                                |\n| sync_id _String_        | A special ID for shared sections (a number or `null` if not set). Used internally and can be ignored. |\n| is_deleted _Boolean_    | Whether the section is marked as deleted (a `true` or `false` value).                                 |\n| is_archived _Boolean_   | Whether the section is marked as archived (a `true` or `false` value).                                |\n| archived_at _String_    | The date when the section was archived (or `null` if not archived).                                   |\n| added_at _String_       | The date when the section was created.                                                                |\n| updated_at _String_     | The date when the section was updated.                                                                |\n\n## Add a section\n\n> Example add section request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[{\n      \"type\": \"section_add\",\n      \"temp_id\": \"69ca86df-5ffe-4be4-9c3a-ad14fe98a58a\",\n      \"uuid\": \"97b68ab2-f524-48da-8288-476a42cccf28\",\n      \"args\": {\"name\": \"Groceries\", \"project_id\": \"9Bw8VQXxpwv56ZY2\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"97b68ab2-f524-48da-8288-476a42cccf28\": \"ok\"},\n  \"temp_id_mapping\": {\"69ca86df-5ffe-4be4-9c3a-ad14fe98a58a\": \"6X7FxXvX84jHphx2\"},\n  ...\n}\n```\n\nAdd a new section to a project.\n\n#### Command arguments\n\n| Argument                 | Required | Description                                                                                          |\n| ------------------------ | -------- | ---------------------------------------------------------------------------------------------------- |\n| name _String_            | Yes      | The name of the section.                                                                             |\n| project_id _String_     | Yes      | The ID of the parent project.                                                                        |\n| section_order _Integer_ | No       | The order of the section. Defines the position of the section among all the sections in the project. |\n\n## Update a section\n\n> Example update section request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[{\n      \"type\": \"section_update\",\n      \"uuid\": \"afda2f29-319c-4d09-8162-f2975bed3124\",\n      \"args\": {\"id\": \"6X7FxXvX84jHphx2\", \"name\": \"Supermarket\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"afda2f29-319c-4d09-8162-f2975bed3124\": \"ok\"},\n  ...\n}\n```\n\nUpdates section attributes.\n\n#### Command arguments\n\n| Argument               | Required | Description                                                            |\n|------------------------|----------|------------------------------------------------------------------------|\n| id _String_            | Yes      | The ID of the section.                                                 |\n| name _String_          | No       | The name of the section.                                               |\n| is_collapsed _Boolean_ | No       | Whether the section's tasks are collapsed (a `true` or `false` value). |\n\n## Move a section\n\n> Example move section request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[{\n      \"type\": \"section_move\",\n      \"uuid\": \"a8583f66-5885-4729-9e55-462e72d685ff\",\n      \"args\": {\"id\": \"6X7FxXvX84jHphx2\", \"project_id\": \"9Bw8VQXxpwv56ZY2\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"a8583f66-5885-4729-9e55-462e72d685ff\": \"ok\"},\n  ...\n}\n```\n\nMove section to a different location.\n\n#### Command arguments\n\n| Argument             | Required | Description                    |\n| -------------------- | -------- | ------------------------------ |\n| id _String_          | Yes      | The ID of the section.         |\n| project_id _String_ | No       | ID of the destination project. |\n\n## Reorder sections\n\n> Example reorder sections request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[{\n      \"type\": \"section_reorder\",\n      \"uuid\": \"109af205-6ff7-47fa-a5f8-1f13e59744ef\",\n      \"args\": {\n        \"sections\": [\n          {\"id\": \"6X7FxXvX84jHphx2\", \"section_order\": 1},\n          {\"id\": \"6X9FxXvX64jjphx3\", \"section_order\": 2}\n        ]\n      }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"109af205-6ff7-47fa-a5f8-1f13e59744ef\": \"ok\"},\n  ...\n}\n```\n\nThe command updates `section_order` properties of sections in bulk.\n\n#### Command arguments\n\n| Argument                    | Required | Description                                                                                                                           |\n| --------------------------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------- |\n| sections _Array of Objects_ | Yes      | An array of objects to update. Each object contains two attributes: `id` of the section to update and `section_order`, the new order. |\n\n## Delete a section\n\n> Example delete section request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[{\n      \"type\": \"section_delete\",\n      \"uuid\": \"cebb5267-3e3c-40da-af44-500649281936\",\n      \"args\": {\"id\": \"6X7FxXvX84jHphx2\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"cebb5267-3e3c-40da-af44-500649281936\": \"ok\"},\n  ...\n}\n```\n\nDelete a section and all its child tasks.\n\n#### Command arguments\n\n| Argument    | Required | Description                  |\n| ----------- | -------- | ---------------------------- |\n| id _String_ | Yes      | ID of the section to delete. |\n\n## Archive a section\n\n> Example archive section request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[{\n      \"type\": \"section_archive\",\n      \"uuid\": \"2451f267-46ab-4f0e-8db7-82a9cd576f72\",\n      \"args\": {\"id\": \"6X7FxXvX84jHphx2\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"2451f267-46ab-4f0e-8db7-82a9cd576f72\": \"ok\"},\n  ...\n}\n```\n\nArchive a section and all its child tasks.\n\n#### Command arguments\n\n| Argument    | Required | Description            |\n| ----------- | -------- | ---------------------- |\n| id _String_ | Yes      | Section ID to archive. |\n\n## Unarchive a section\n\n> Example unarchive section request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[{\n      \"type\": \"section_unarchive\",\n      \"uuid\": \"cd3a4b4b-182e-4733-b6b5-20a621ba98b8\",\n      \"args\": {\"id\": \"6X7FxXvX84jHphx2\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"cd3a4b4b-182e-4733-b6b5-20a621ba98b8\": \"ok\"},\n  ...\n}\n```\n\nThis command is used to unarchive a section.\n\n#### Command arguments\n\n| Argument    | Required | Description             |\n| ----------- | -------- | ----------------------- |\n| id _String_ | Yes      | Section ID to unarchive |\n\n# Reminders\n\n> An example reminder:\n\n```\n{\n  \"id\": \"6X7Vfq5rqPMM5j5q\",\n  \"notify_uid\": \"2671355\",\n  \"item_id\": \"6RP2hmPwM3q4WGfW\",\n  \"type\": \"absolute\",\n  \"due\": {\n    \"date\": \"2016-08-05T07:00:00.000000Z\",\n    \"timezone\": null,\n    \"is_recurring\": false,\n    \"string\": \"tomorrow at 10:00\",\n    \"lang\": \"en\"\n  },\n  \"minute_offset\": 180,\n  \"is_deleted\": false\n}\n```\n\n_Availability of reminders functionality and the maximum number of stored reminders are dependent\non the current user plan. These values are indicated by the `reminders`, `max_reminders_time` and\n`max_reminders_location` properties of the [user plan limits](#tag/Sync/User/User-plan-limits) object._\n\n#### Properties\n\n| Property              | Description                                                                                                                                                                                                                   |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_           | The ID of the reminder.                                                                                                                                                                                                       |\n| notify_uid _String_  | The user ID which should be notified of the reminder, typically the current user ID creating the reminder.                                                                                                                    |\n| item_id _String_     | The item ID for which the reminder is about.                                                                                                                                                                                  |\n| type _String_         | The type of the reminder: `relative` for a time-based reminder specified in minutes from now, `absolute` for a time-based reminder with a specific time and date in the future, and `location` for a location-based reminder. |\n| due _Object_          | The due date of the reminder. See the [Due dates](#tag/Due-dates) section for more details. Note that reminders only support due dates with time, since full-day reminders don't make sense.                                      |\n| minute_offset _Integer_  | The relative time in minutes before the due date of the item, in which the reminder should be triggered. Note that the item should have a due date with time set in order to add a relative reminder.                         |\n| name _String_         | An alias name for the location.                                                                                                                                                                                               |\n| loc_lat _String_     | The location latitude.                                                                                                                                                                                                        |\n| loc_long _String_    | The location longitude.                                                                                                                                                                                                       |\n| loc_trigger _String_ | What should trigger the reminder: `on_enter` for entering the location, or `on_leave` for leaving the location.                                                                                                               |\n| radius _Integer_      | The radius around the location that is still considered as part of the location (in meters).                                                                                                                                  |\n| is_deleted _Boolean_ | Whether the reminder is marked as deleted (a `true` or `false` value).                                                                                                                                                        |\n\n## Add a reminder\n\n> Example of adding relative reminder:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"reminder_add\",\n        \"temp_id\": \"e24ad822-a0df-4b7d-840f-83a5424a484a\",\n        \"uuid\": \"41e59a76-3430-4e44-92b9-09d114be0d49\",\n        \"args\": {\n            \"item_id\": \"6RP2hmPwM3q4WGfW\",\n            \"minute_offset\": 30,\n            \"type\": \"absolute\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"41e59a76-3430-4e44-92b9-09d114be0d49\": \"ok\"},\n  \"temp_id_mapping\": {\"e24ad822-a0df-4b7d-840f-83a5424a484a\": \"2992683215\"},\n  ...\n}\n```\n\n> Example of adding an absolute reminder:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"reminder_add\",\n        \"temp_id\": \"952a365e-4965-4113-b4f4-80cdfcada172u\",\n        \"uuid\": \"e7c8be2d-f484-4852-9422-a9984c58b1cd\",\n        \"args\": {\n            \"item_id\": \"6RP2hmPwM3q4WGfW\",\n            \"due\": {\n                \"date\": \"2014-10-15T11:00:00.000000Z\"\n            },\n            \"type\": \"absolute\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"e7c8be2d-f484-4852-9422-a9984c58b1cd\": \"ok\"},\n  \"temp_id_mapping\": {\"952a365e-4965-4113-b4f4-80cdfcada172\": \"2992683215\"},\n  ...\n}\n```\n\n> Example of adding a location reminder:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"reminder_add\",\n        \"temp_id\": \"7ad9609d-579f-4828-95c5-3600acdb2c81\",\n        \"uuid\": \"830cf409-daba-479c-a624-68eb0c07d01c\",\n        \"args\": {\n            \"item_id\": \"6RP2hmPwM3q4WGfW\",\n            \"type\": \"location\",\n            \"name\": \"Aliados\",\n            \"loc_lat\": \"41.148581\",\n            \"loc_long\":\"-8.610945000000015\",\n            \"loc_trigger\":\"on_enter\",\n            \"radius\": 100\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"830cf409-daba-479c-a624-68eb0c07d01c\": \"ok\"},\n  \"temp_id_mapping\": {\"7ad9609d-579f-4828-95c5-3600acdb2c81\": \"2992683215\"},\n  ...\n}\n```\n\nAdd a new reminder to the user account related to the API credentials.\n\n#### Command arguments\n\n| Argument                 | Required | Description                                                                                                                                                                                                                   |\n| ------------------------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| item_id _String_        | Yes      | The item ID for which the reminder is about.                                                                                                                                                                                  |\n| type _String_            | Yes      | The type of the reminder: `relative` for a time-based reminder specified in minutes from now, `absolute` for a time-based reminder with a specific time and date in the future, and `location` for a location-based reminder. |\n| notify_uid _String_     | No       | The user ID which should be notified of the reminder, typically the current user ID creating the reminder.                                                                                                                    |\n| due _Object_             | No       | The due date of the reminder. See the [Due dates](#tag/Due-dates) section for more details. Note that reminders only support due dates with time, since full-day reminders don't make sense.                                      |\n| minute_offset _Integer_ | No       | The relative time in minutes before the due date of the item, in which the reminder should be triggered. Note, that the item should have a due date with time set in order to add a relative reminder.                        |\n| name _String_            | No       | An alias name for the location.                                                                                                                                                                                               |\n| loc_lat _String_        | No       | The location latitude.                                                                                                                                                                                                        |\n| loc_long _String_       | No       | The location longitude.                                                                                                                                                                                                       |\n| loc_trigger _String_    | No       | What should trigger the reminder: `on_enter` for entering the location, or `on_leave` for leaving the location.                                                                                                               |\n| radius _Integer_         | No       | The radius around the location that is still considered as part of the location (in meters).                                                                                                                                  |\n\n## Update a reminder\n\n> Example update reminder request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"reminder_update\",\n        \"uuid\": \"b0e7562e-ea9f-4c84-87ee-9cbf9c103234\",\n        \"args\": {\n            \"id\": \"6X7VrXrqjX6642cv\",\n            \"due\": {\n                \"date\": \"2014-10-10T15:00:00.000000\"\n            }\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"b0e7562e-ea9f-4c84-87ee-9cbf9c103234\": \"ok\"},\n  ...\n}\n```\n\nUpdate a reminder from the user account related to the API credentials.\n\n#### Command arguments\n\n| Argument                 | Required | Description                                                                                                                                                                                                                   |\n| ------------------------ | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_              | Yes      | The ID of the reminder.                                                                                                                                                                                                       |\n| notify_uid _String_     | No       | The user ID which should be notified of the reminder, typically the current user ID creating the reminder.                                                                                                                    |\n| type _String_            | No       | The type of the reminder: `relative` for a time-based reminder specified in minutes from now, `absolute` for a time-based reminder with a specific time and date in the future, and `location` for a location-based reminder. |\n| due _Object_             | No       | The due date of the reminder. See the [Due dates](#tag/Due-dates) section for more details. Note that reminders only support due dates with time, since full-day reminders don't make sense.                                      |\n| minute_offset _Integer_ | No       | The relative time in minutes before the due date of the item, in which the reminder should be triggered. Note, that the item should have a due date with time set in order to add a relative reminder.                        |\n| name _String_            | No       | An alias name for the location.                                                                                                                                                                                               |\n| loc_lat _String_        | No       | The location latitude.                                                                                                                                                                                                        |\n| loc_long _String_       | No       | The location longitude.                                                                                                                                                                                                       |\n| loc_trigger _String_    | No       | What should trigger the reminder: `on_enter` for entering the location, or `on_leave` for leaving the location.                                                                                                               |\n| radius _Integer_         | No       | The radius around the location that is still considered as part of the location (in meters).                                                                                                                                  |\n\n## Delete a reminder\n\n> Example delete reminder request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"reminder_delete\",\n        \"uuid\": \"0896d03b-eb90-49f7-9020-5ed3fd09df2d\",\n        \"args\": {\"id\": \"6X7VrXrqjX6642cv\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"0896d03b-eb90-49f7-9020-5ed3fd09df2d\": \"ok\"},\n  ...\n}\n```\n\nDelete a reminder from the current user account.\n\n#### Command arguments\n\n| Argument    | Required | Description           |\n| ----------- | -------- | --------------------- |\n| id _String_ | Yes      | The ID of the filter. |\n\n## Locations\n\nLocations are a top-level entity in the sync model. They contain a list of all\nlocations that are used within user's current location reminders.\n\n> An example location object\n\n```\n[\"Shibuya-ku, Japan\", \"35.6623001098633\", \"139.706527709961\"]\n```\n\n#### Properties\n\nThe location object is specific, as it's not an object, but an ordered array.\n\n| Array index | Description           |\n| ----------- | --------------------- |\n| 0 _String_  | Name of the location. |\n| 1 _String_  | Location latitude.    |\n| 2 _String_  | Location longitude.   |\n\n### Clear locations\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[{\"type\": \"clear_locations\", \"uuid\": \"d285ae02-80c6-477c-bfa9-45272d7bddfb\", \"args\": {}}]'\n\n{\n  ...\n  \"sync_status\": {\"d285ae02-80c6-477c-bfa9-45272d7bddfb\": \"ok\"},\n  ...\n}\n```\n\nClears the locations list, which is used for location reminders.\n\n# Projects\n\n> An example project object:\n\n```\n{\n    \"id\": \"6Jf8VQXxpwv56VQ7\",\n    \"name\": \"Shopping List\",\n    \"description\": \"Stuff to buy\",\n    \"workspace_id\": 12345,\n    \"is_invite_only\": false,\n    \"status\": \"IN_PROGRESS\",\n    \"is_link_sharing_enabled\": true,\n    \"collaborator_role_default\": \"READ_WRITE\",\n    \"color\": \"lime_green\",\n    \"parent_id\": null,\n    \"child_order\": 1,\n    \"is_collapsed\": false,\n    \"shared\": false,\n    \"can_assign_tasks\": false,\n    \"is_deleted\": false,\n    \"is_archived\": false,\n    \"is_favorite\": false,\n    \"is_frozen\": false,\n    \"view_style\": \"list\",\n    \"role\": \"READ_WRITE\"\n    \"inbox_project\": true,\n    \"folder_id\": null,\n    \"created_at\": \"2023-07-13T10:20:59Z\",\n    \"updated_at\": \"2024-12-10T13:27:29Z\",\n}\n```\n\n#### Properties\n\n| Property                           | Description                                                                                                                                                                                                                                                                     |\n|------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| id _String_                        | The ID of the project.                                                                                                                                                                                                                                                          |\n| name _String_                      | The name of the project.                                                                                                                                                                                                                                                        |\n| description _String_               | Description for the project. _Only used for teams_                                                                                                                                                                                                                              |\n| workspace_id _String_              | Real or temp ID of the workspace the project. _Only used for teams_                                                                                                                                                                                                             |\n| is_invite_only _Boolean_           | Indicates if the project is invite-only or if it should be visible for everyone in the workspace. If missing or null, the default value from the workspace `is_invite_only_default` will be used. _Only used for teams_                                                         |\n| status _String_                    | The status of the project. Possible values: `PLANNED`, `IN_PROGRESS`, `PAUSED`, `COMPLETED`, `CANCELED`. _Only used for teams_                                                                                                                                                  |\n| is_link_sharing_enabled _Boolean_  | If False, the project is invite-only and people can't join by link. If true, the project is visible to anyone with a link, and anyone can join it. _Only used for teams_                                                                                                        |\n| collaborator_role_default _String_ | The role a user can have. Possible values: `CREATOR`, `ADMIN`, `READ_WRITE`, `READ_AND_COMMENT`, `READ_ONLY`. (`CREATOR` is equivalent to admin and is automatically set at project creation; it can’t be set to anyone later). Defaults to `READ_WRITE`. _Only used for teams_ |\n| color _String_                     | The color of the project icon. Refer to the `name` column in the [Colors](#tag/Colors) guide for more info.                                                                                                                                                                     |\n| parent_id _String_                 | The ID of the parent project. Set to `null` for root projects.                                                                                                                                                                                                                  |\n| child_order _Integer_              | The order of the project. Defines the position of the project among all the projects with the same `parent_id`                                                                                                                                                                  |\n| is_collapsed _Boolean_             | Whether the project's sub-projects are collapsed (a `true` or `false` value).                                                                                                                                                                                                   |\n| shared _Boolean_                   | Whether the project is shared (a `true` or `false` value).                                                                                                                                                                                                                      |\n| can_assign_tasks _Boolean_         | Whether tasks in the project can be assigned to users (a `true` or `false` value).                                                                                                                                                                                              |\n| is_deleted _Boolean_               | Whether the project is marked as deleted (a `true` or `false` value).                                                                                                                                                                                                           |\n| is_archived _Boolean_              | Whether the project is marked as archived (a `true` or `false` value).                                                                                                                                                                                                          |\n| is_favorite _Boolean_              | Whether the project is a favorite (a `true` or `false` value).                                                                                                                                                                                                                  |\n| is_frozen _Boolean_                | Workspace or personal projects from a cancelled subscription (a `true` or `false` value).                                                                                                                                                                                       |\n| view_style _Enum_                  | The mode in which to render tasks in this project. One of `list`, `board`, or `calendar`.                                                                                                                                                                                       |\n| role _String_                      | The role of the requesting user. Possible values: `CREATOR`, `ADMIN`, `READ_WRITE`, `READ_AND_COMMENT`, `READ_ONLY`. _Only used for teams_                                                                                                                                      |\n| inbox_project _Boolean_            | Whether the project is `Inbox` (`true` or otherwise this property is not sent).                                                                                                                                                                                                 |\n| folder_id _Integer_                | The ID of the folder which this project is in.                                                                                                                                                                                                                                  |\n| created_at _String_                | Project creation date in the format YYYY-MM-DDTHH:MM:SSZ date.                                                                                                                                                                                                                  |\n| updated_at _String_                | Project update date in the format YYYY-MM-DDTHH:MM:SSZ date.                                                                                                                                                                                                                    |\n\n**Note:** `project.view_style` takes precedence over\n[`view_options.view_mode`](#tag/Sync/View-Options) for projects in Todoist\nclients. The former is set per project, while the latter is set per user.\n\n## Add a project\n\n> Example add project request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"project_add\",\n        \"temp_id\": \"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\",\n        \"uuid\": \"32774db9-a1da-4550-8d9d-910372124fa4\",\n        \"args\": {\n            \"name\": \"Shopping List\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"32774db9-a1da-4550-8d9d-910372124fa4\": \"ok\"},\n  \"temp_id_mapping\": {\"4ff1e388-5ca6-453a-b0e8-662ebf373b6b\": \"6Jf8VQXxpwv56VQ7\"},\n  ...\n}\n```\n\nAdd a new project.\n\n#### Command arguments\n\n| Argument                            | Required | Description                                                                                                                                                                                                                                           |\n| ----------------------------------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| name _String_                       | Yes      | The name of the project (a string value).                                                                                                                                                                                                             |\n| color _String_                      | No       | The color of the project icon. Refer to the `name` column in the [Colors](#tag/Colors) guide for more info.                                                                                                                                       |\n| parent_id _String_                 | No       | The ID of the parent project. Set to `null` for root projects                                                                                                                                                                                         |\n| folder_id _String_                 | No       | The ID of the folder, when creating projects in workspaces. Set to `null` for root projects                                                                                                                                                                                         |\n| child_order _Integer_              | No       | The order of the project. Defines the position of the project among all the projects with the same `parent_id`                                                                                                                                        |\n| is_favorite _Boolean_              | No       | Whether the project is a favorite (a `true` or `false` value).                                                                                                                                                                                        |\n| view_style _String_                | No       | A string value (either `list` or `board`, default is `list`). This determines the way the project is displayed within the Todoist clients.                                                                                                            |\n| description _String_                | No       | Description for the project (up to 1024 characters). _Only used for teams_                                                                                                                                                                            |\n| workspace_id _String_              | No       | Real or temp ID of the workspace the project should belong to                                                                                                                                                                                         |\n| is_invite_only _Boolean_           | No       | Indicates if the project is invite-only or if it should be visible for everyone in the workspace. If missing or null, the default value from the workspace `is_invite_only_default` will be used. _Only used for teams_                               |\n| status _String_                     | No       | The status of the project. Possible values: `PLANNED`, `IN_PROGRESS`, `PAUSED`, `COMPLETED`, `CANCELED`. _Only used for teams_                                                                                                                        |\n| is_link_sharing_enabled _Boolean_  | No       | If False, the project is invite-only and people can't join by link. If true, the project is visible to anyone with a link, and anyone can join it. _Only used for teams_                                                                              |\n| collaborator_role_default _String_ | No       | The role a user can have. Possible values: `CREATOR`, `ADMIN`, `READ_WRITE`, `READ_AND_COMMENT`, `READ_ONLY`. (`CREATOR` is equivalent to admin and is automatically set at project creation; it can’t be set to anyone later). _Only used for teams_ |\n\n## Update a project\n\n> Example update project request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"project_update\",\n        \"uuid\": \"1ca42128-d12f-4a66-8413-4d6ff2838fde\",\n        \"args\": {\n            \"id\": \"6Jf8VQXxpwv56VQ7\",\n            \"name\": \"Shopping\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"1ca42128-d12f-4a66-8413-4d6ff2838fde\": \"ok\"},\n  ...\n}\n```\n\nUpdate an existing project.\n\n#### Command arguments\n\n| Argument                           | Required | Description                                                                                                                                                                                                                                                                     |\n|------------------------------------|----------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| id _String_                        | Yes      | The ID of the project (could be temp id).                                                                                                                                                                                                                                       |\n| name _String_                      | No       | The name of the project (a string value).                                                                                                                                                                                                                                       |\n| color _String_                     | No       | The color of the project icon. Refer to the `name` column in the [Colors](#tag/Colors) guide for more info.                                                                                                                                                                     |\n| is_collapsed _Boolean_             | No       | Whether the project's sub-projects are collapsed (a `true` or `false` value).                                                                                                                                                                                                   |\n| is_favorite _Boolean_              | No       | Whether the project is a favorite (a `true` or `false` value).                                                                                                                                                                                                                  |\n| view_style _String_                | No       | A string value (either `list` or `board`). This determines the way the project is displayed within the Todoist clients.                                                                                                                                                         |\n| description _String_               | No       | Description for the project (up to 1024 characters). _Only used for teams_                                                                                                                                                                                                      |\n| status _String_                    | No       | The status of the project. Possible values: `PLANNED`, `IN_PROGRESS`, `PAUSED`, `COMPLETED`, `CANCELED`. _Only used for teams_                                                                                                                                                  |\n| is_link_sharing_enabled _Boolean_  | No       | If False, the project is invite-only and people can't join by link. If true, the project is visible to anyone with a link, and anyone can join it. _Only used for teams_                                                                                                        |\n| collaborator_role_default _String_ | No       | The role a user can have. Possible values: `CREATOR`, `ADMIN`, `READ_WRITE`, `READ_AND_COMMENT`, `READ_ONLY`. (`CREATOR` is equivalent to admin and is automatically set at project creation; it can’t be set to anyone later). Defaults to `READ_WRITE`. _Only used for teams_ |\n\n## Move a project\n\n> Example move project request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"project_move\",\n        \"uuid\": \"1ca42128-d12f-4a66-8413-4d6ff2838fde\",\n        \"args\": {\n            \"id\": \"6Jf8VQXxpwv56VQ7\",\n            \"parent_id\": \"6X7fphhgwcXVGccJ\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"1ca42128-d12f-4a66-8413-4d6ff2838fde\": \"ok\"},\n  ...\n}\n```\n\nUpdate parent project relationships of the project.\n\n#### Command arguments\n\n| Argument            | Required | Description                                                                                               |\n| ------------------- | -------- | --------------------------------------------------------------------------------------------------------- |\n| id _String_         | Yes      | The ID of the project (could be a temp id).                                                               |\n| parent_id _String_ | No       | The ID of the parent project (could be a temp id). If set to null, the project will be moved to the root. |\n\n## Move a Project to a Workspace\n\n> Example move project to workspace request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"project_move_to_workspace\",\n        \"uuid\": \"1ca42128-d12f-4a66-8413-4d6ff2838fde\",\n        \"args\": {\n            \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n            \"workspace_id\": \"220325187\",\n            \"is_invite_only\": false,\n            \"folder_id\": null\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"1ca42128-d12f-4a66-8413-4d6ff2838fde\": \"ok\"},\n  ...\n}\n```\n\nMoves a personal project into the target workspace.\n\nA few notes about moving projects to a workspace:\n\n- Moving a parent project to a workspace will also move all its child projects to that workspace.\n- If no folder_id is supplied, child projects will be moved into a folder with the same name as the parent project being moved\n- If a folder_id is supplied, the parent and child projects will be moved into that folder.\n- At the moment, it is not possible to move a project to another workspace (changing its `workspace_id`), or to the user's personal workspace.\n- Moving a project to a workspace affects all its collaborators. Collaborators who are not members of the target workspace will be added as guests, if guest members are allowed in the target workspace\n\n#### Command arguments\n\n| Argument                  | Required | Description                                                                                 |\n| ------------------------- | -------- | ------------------------------------------------------------------------------------------- |\n| project_id _String_      | Yes      | The ID of the project (can be a temp id).                                                   |\n| workspace_id _String_    | Yes      | The ID of the workspace the project will be moved into                                      |\n| is_invite_only _Boolean_ | No       | If true the project will be restricted access, otherwise any workspace member could join it |\n| folder_id _String_       | No       | If supplied, the project and any child projects will be moved into this workspace folder    |\n\n## Move a Project out of a Workspace\n\n> Example move project out of a workspace request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"project_move_to_personal\",\n        \"uuid\": \"1ca42128-d12f-4a66-8413-4d6ff2838fde\",\n        \"args\": {\n            \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"1ca42128-d12f-4a66-8413-4d6ff2838fde\": \"ok\"},\n  ...\n}\n```\n\nMoves a project inside a workspace out back into a users personal space.\n\nOnly the original creator of the workspace have permissions to do this, and only if they\nare still currently an admin of said workspace.\n\n#### Command arguments\n\n| Argument             | Required | Description                                                |\n| -------------------- | -------- | ---------------------------------------------------------- |\n| project_id _String_ | Yes      | The ID of the project being moved back (can be a temp id). |\n\n## Leave a project\n\n> Example leave project request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"project_leave\",\n        \"uuid\": \"1ca42128-d12f-4a66-8413-4d6ff2838fde\",\n        \"args\": {\n            \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"1ca42128-d12f-4a66-8413-4d6ff2838fde\": \"ok\"},\n  ...\n}\n```\n\n_Only used for teams_\n\nThis command is used to remove self from a workspace project. As this is a\nv2-only command, it will only accept v2 project id.\n\n#### Command arguments\n\n| Argument             | Required | Description                                                                  |\n| -------------------- | -------- | ---------------------------------------------------------------------------- |\n| project_id _String_ | Yes      | The ID (`v2_id`) of the project to leave. It only accepts `v2_id` as the id. |\n\n## Delete a project\n\n> Example delete project request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"project_delete\",\n        \"uuid\": \"367182ba-125f-4dbb-bff6-c1343fd751e4\",\n        \"args\": {\n            \"id\": \"6X7fphhgwcXVGccJ\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"367182ba-125f-4dbb-bff6-c1343fd751e4\": \"ok\"},\n  ...\n}\n```\n\nDelete an existing project and all its descendants.\nWorkspace projects can only be deleted by `ADMIN`s and it must be archived first.\n\n#### Command arguments\n\n| Argument    | Required | Description                                       |\n| ----------- | -------- | ------------------------------------------------- |\n| id _String_ | Yes      | ID of the project to delete (could be a temp id). |\n\n## Archive a project\n\n> Example archive project request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"project_archive\",\n        \"uuid\": \"bbec1a60-2bdd-48ac-a623-c8eb968e1697\",\n        \"args\": {\n            \"id\": \"6X7fphhgwcXVGccJ\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"bbec1a60-2bdd-48ac-a623-c8eb968e1697\": \"ok\"},\n  ...\n}\n```\n\nArchive a project and its descendants.\n\n#### Command arguments\n\n| Argument    | Required | Description                                        |\n| ----------- | -------- | -------------------------------------------------- |\n| id _String_ | Yes      | ID of the project to archive (could be a temp id). |\n\n## Unarchive a project\n\n> Example unarchive project request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"project_unarchive\",\n        \"uuid\": \"7d86f042-e098-4fa6-9c1f-a61fe8c39d74\",\n        \"args\": {\n            \"id\": \"6X7fphhgwcXVGccJ\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"7d86f042-e098-4fa6-9c1f-a61fe8c39d74\": \"ok\"},\n  ...\n}\n```\n\nUnarchive a project. No ancestors will be unarchived along with the unarchived\nproject. Instead, the project is unarchived alone, loses any parent relationship\n(becomes a root project), and is placed at the end of the list of other root\nprojects.\n\n#### Command arguments\n\n| Argument    | Required | Description                                          |\n| ----------- | -------- | ---------------------------------------------------- |\n| id _String_ | Yes      | ID of the project to unarchive (could be a temp id). |\n\n## Reorder projects\n\n> Example reorder projects request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"project_reorder\",\n        \"uuid\": \"bf0855a3-0138-4b76-b895-88cad8db9edc\",\n        \"args\": {\n            \"projects\": [\n                {\n                    \"id\": \"6Jf8VQXxpwv56VQ7\",\n                    \"child_order\": 1\n                },\n                {\n                    \"id\": \"6X7fphhgwcXVGccJ\",\n                    \"child_order\": 2\n                }\n            ]\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"bf0855a3-0138-4b76-b895-88cad8db9edc\": \"ok\"},\n  ...\n}\n```\n\nThe command updates `child_order` properties of projects in bulk.\n\n#### Command arguments\n\n| Argument                    | Required | Description                                                                                                                         |\n| --------------------------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| projects _Array of Objects_ | Yes      | An array of objects to update. Each object contains two attributes: `id` of the project to update and `child_order`, the new order. |\n\n# Comments\n\n## Task comments\n\n> An example task comment:\n\n```\n{\n    \"id\": \"6X7gfQHG59V8CJJV\",\n    \"posted_uid\": \"2671355\",\n    \"item_id\": \"6X7gfV9G7rWm5hW8\",\n    \"content\": \"Note\",\n    \"file_attachment\": {\n        \"file_type\": \"text/plain\",\n        \"file_name\": \"File1.txt\",\n        \"file_size\": 1234,\n        \"file_url\": \"https://example.com/File1.txt\",\n        \"upload_state\": \"completed\"\n    },\n    \"uids_to_notify\": [\n      \"84129\"\n    ]\n    \"is_deleted\": false,\n    \"posted_at\": \"2014-10-01T14:54:55.000000Z\",\n    \"reactions\": { \"❤️\": [\"2671362\"], \"👍\": [\"2671362\", \"2671366\"] }\n}\n```\n\n_Availability of comments functionality is dependent on the current user plan.\nThis value is indicated by the `comments` property of the\n[user plan limits](#tag/Sync/User/User-plan-limits) object._\n\n#### Properties\n\n| Property                          | Description                                                                                                                                                                                                                                                   |\n| --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_                       | The ID of the note.                                                                                                                                                                                                                                           |\n| posted_uid _String_              | The ID of the user that posted the note.                                                                                                                                                                                                                      |\n| item_id _String_                 | The item which the note is part of.                                                                                                                                                                                                                           |\n| content _String_                  | The content of the note. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center. |\n| file_attachment _Object_         | A file attached to the note (see the [File Attachments](#tag/Sync/Comments/File-Attachments) section for details).                                                                                                                                                              |\n| uids_to_notify _Array of String_ | A list of user IDs to notify.                                                                                                                                                                                                                                 |\n| is_deleted _Boolean_             | Whether the note is marked as deleted (a `true` or `false` value).                                                                                                                                                                                            |\n| posted_at _String_               | The date when the note was posted.                                                                                                                                                                                                                            |\n| reactions _Object_                | List of emoji reactions and corresponding user IDs.                                                                                                                                                                                                           |\n\n### Add a task comment\n\n> Example add comment request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"note_add\",\n        \"temp_id\": \"59fe4461-287b-4b00-bacc-ee771137a732\",\n        \"uuid\": \"e1005f08-acd6-4172-bab1-4338f8616e49\",\n        \"args\": {\n            \"item_id\": \"6X7gfV9G7rWm5hW8\",\n            \"content\": \"Note1\"\n        }\n    }]'\n\n# or adding a comment with a file attached:\n\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"note_add\",\n        \"temp_id\": \"6149e689-1a54-48d6-a8c2-0ee5425554a9\",\n        \"uuid\": \"554a65e9-56d9-478e-b35b-520c419e37d9\",\n        \"args\": {\n            \"item_id\": \"6X7gfV9G7rWm5hW8\",\n            \"content\": \"Note1\",\n            \"file_attachment\": {\n                \"file_type\": \"image\\/gif\",\n                \"file_name\": \"image.gif\",\n                \"image\": \"https:\\/\\/domain\\/image.gif\",\n                \"file_url\": \"https:\\/\\/domain\\/image.gif\",\n                \"image_width\":90,\n                \"image_height\":76,\n                \"file_size\":7962\n            }\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"e1005f08-acd6-4172-bab1-4338f8616e49\": \"ok\"},\n  \"temp_id_mapping\": {\"59fe4461-287b-4b00-bacc-ee771137a732\": \"6X7gfQHG59V8CJJV\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument                          | Required | Description                                                                                                                                                                                                                                                   |\n| --------------------------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| item_id _String_                 | Yes      | The item which the note is part of (a unique number or temp id).                                                                                                                                                                                              |\n| content _String_                  | Yes      | The content of the note. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center. |\n| file_attachment _Object_         | No       | A file attached to the note (see the [File Attachments](#tag/Sync/Comments/File-Attachments) section for details, and learn how to upload a file in the [Uploads section](#tag/Uploads)).                                                                                           |\n| uids_to_notify _Array of String_ | No       | A list of user IDs to notify.                                                                                                                                                                                                                                 |\n\n### Update a task comment\n\n> Example update comment request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"note_update\",\n        \"uuid\": \"8a38f9c5-2cd0-4da5-87c1-26d617b354e0\",\n        \"args\": {\n            \"id\": \"6X7gfQHG59V8CJJV\",\n            \"content\": \"Updated Note1\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"8a38f9c5-2cd0-4da5-87c1-26d617b354e0\": \"ok\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument                  | Required | Description                                                                                                                                                                                                                                                   |\n| ------------------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_               | Yes      | The ID of the note.                                                                                                                                                                                                                                           |\n| content _String_          | Yes      | The content of the note. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center. |\n| file_attachment _Object_ | No       | A file attached to the note (see the [File Attachments](#tag/Sync/Comments/File-Attachments) section for details, and learn how to upload a file in the [Uploads section](#tag/Uploads)).                                                                                           |\n\n### Delete a task comment\n\n> Example delete comment request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"note_delete\",\n        \"uuid\": \"8d666fda-73c3-4677-8b04-5d223632c24f\",\n        \"args\": {\"id\": \"6X7hH7Gpwr3w7jX9\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{ ...\n  \"sync_status\": {\"8d666fda-73c3-4677-8b04-5d223632c24f\": \"ok\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument    | Required | Description         |\n| ----------- | -------- | ------------------- |\n| id _String_ | Yes      | The ID of the note. |\n\n## Project Comments\n\n> An example project comment:\n\n```\n{\n    \"content\": \"Hello 2\",\n    \"id\": \"6X7hH9GWrqWhF69Q\",\n    \"is_deleted\": false,\n    \"posted_at\": \"2018-08-14T10:56:50.000000Z\",\n    \"posted_uid\": \"2671355\",\n    \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"reactions\": null,\n    \"uids_to_notify\": [\"2671362\"],\n    \"reactions\": { \"❤️\": [\"2671362\"], \"👍\": [\"2671362\", \"2671366\"] },\n    \"file_attachment\": {\n        \"file_type\": \"text/plain\",\n        \"file_name\": \"File1.txt\",\n        \"file_size\": 1234,\n        \"file_url\": \"https://example.com/File1.txt\",\n        \"upload_state\": \"completed\"\n    }\n}\n```\n\n_Availability of comments functionality is dependent on the current user plan.\nThis value is indicated by the `comments` property of the\n[user plan limits](#tag/Sync/User/User-plan-limits) object._\n\n#### Properties\n\n| Property                          | Description                                                                                                                                                                                                                                                   |\n| --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_                       | The ID of the note.                                                                                                                                                                                                                                           |\n| posted_uid _Integer_             | The ID of the user that posted the note.                                                                                                                                                                                                                      |\n| project_id _Integer_             | The project which the note is part of.                                                                                                                                                                                                                        |\n| content _String_                  | The content of the note. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center. |\n| file_attachment _Object_         | A file attached to the note (see the [File Attachments](#tag/Sync/Comments/File-Attachments) section for details).                                                                                                                                                              |\n| uids_to_notify _Array of String_ | A list of user IDs to notify.                                                                                                                                                                                                                                 |\n| is_deleted _Boolean_             | Whether the note is marked as deleted (a `true` or `false` value).                                                                                                                                                                                            |\n| posted_at _String_               | The date when the note was posted.                                                                                                                                                                                                                            |\n| reactions _Object_                | List of emoji reactions and corresponding user IDs.                                                                                                                                                                                                           |\n\n### Add a project comment\n\n> Example add comment request:\n\n```shell\ncurl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"note_add\",\n        \"temp_id\": \"59fe4461-287b-4b00-bacc-ee771137a732\",\n        \"uuid\": \"e1005f08-acd6-4172-bab1-4338f8616e49\",\n        \"args\": {\n            \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n            \"content\": \"Note1\"\n        }\n    }]'\n\n# or adding a note with a file attached:\n\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"note_add\",\n        \"temp_id\": \"6149e689-1a54-48d6-a8c2-0ee5425554a9\",\n        \"uuid\": \"554a65e9-56d9-478e-b35b-520c419e37d9\",\n        \"args\": {\n            \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n            \"content\": \"Note1\",\n            \"file_attachment\": {\n                \"file_type\": \"image\\/gif\",\n                \"file_name\": \"image.gif\",\n                \"image\": \"https:\\/\\/domain\\/image.gif\",\n                \"file_url\": \"https:\\/\\/domain\\/image.gif\",\n                \"image_width\":90,\n                \"image_height\":76,\n                \"file_size\":7962\n            }\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"e1005f08-acd6-4172-bab1-4338f8616e49\": \"ok\"},\n  \"temp_id_mapping\": {\"59fe4461-287b-4b00-bacc-ee771137a732\": \"6X7hH9GWrqWhF69Q\"},\n  ...\n}\n```\n\n| Argument                  | Required | Description                                                                                                                                                                                                                                                   |\n| ------------------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| project_id _String_      | Yes      | The project which the note is part of.                                                                                                                                                                                                                        |\n| content _String_          | Yes      | The content of the note. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center. |\n| file_attachment _Object_ | No       | A file attached to the note (see the [File Attachments](#tag/Sync/Comments/File-Attachments) section for details, and learn how to upload a file in the [Uploads section](#tag/Uploads)).                                                                                           |\n\n### Update a project comment\n\n> Example update comment request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"note_update\",\n        \"uuid\": \"8a38f9c5-2cd0-4da5-87c1-26d617b354e0\",\n        \"args\": {\"id\": \"6X7hH9GWrqWhF69Q\", \"content\": \"Updated Note 1\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"8a38f9c5-2cd0-4da5-87c1-26d617b354e0\": \"ok\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument                  | Required | Description                                                                                                                                                                                                                                                   |\n| ------------------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_               | Yes      | The ID of the note.                                   |\n| content _String_          | Yes      | The content of the note. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center. |\n| file_attachment _Object_ | No       | A file attached to the note (see the [File Attachments](#tag/Sync/Comments/File-Attachments) section for details, and learn how to upload a file in the [Uploads section](#tag/Uploads)).                                                                                           |\n\n### Delete a project comment\n\n> Example delete comment request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"note_delete\",\n        \"uuid\": \"8a38f9c5-2cd0-4da5-87c1-26d617b354e0\",\n        \"args\": {\"id\": \"6X7hH9GWrqWhF69Q\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"8d666fda-73c3-4677-8b04-5d223632c24f\": \"ok\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument    | Required | Description         |\n| ----------- | -------- | ------------------- |\n| id _String_ | Yes      | The ID of the note. |\n\n## File Attachments\n\nA file attachment is represented as a JSON object. The file attachment may point\nto a document previously uploaded by the `uploads/add` API call, or by any\nexternal resource.\n\n#### Base file properties\n\n| Attribute              | Description                                                                                                                                                                                                                                                                                                                          |\n| ---------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| file_name _String_    | The name of the file.                                                                                                                                                                                                                                                                                                                |\n| file_size _Integer_   | The size of the file in bytes.                                                                                                                                                                                                                                                                                                       |\n| file_type _String_    | MIME type (for example `text/plain` or `image/png`).                                                                                                                                                                                                                                                                                 |\n| file_url _String_     | The URL where the file is located. Note that we don't cache the remote content on our servers and stream or expose files directly from third party resources. In particular this means that you should avoid providing links to non-encrypted (plain HTTP) resources, as exposing this files in Todoist may issue a browser warning. |\n| upload_state _String_ | Upload completion state (for example `pending` or `completed`).                                                                                                                                                                                                                                                                      |\n\n#### Image file properties\n\nIf you upload an image, you may provide thumbnail paths to ensure Todoist\nhandles them appropriately. Valid thumbnail information is a JSON array with\nURL, width in pixels, height in pixels. Ex.:\n[\"https://example.com/img.jpg\",400,300]. \"Canonical\" thumbnails (ones we create\nby `uploads/add` API call) have the following sizes: `96x96`, `288x288`,\n`528x528`.\n\n| Attribute    | Description                                                                                 |\n| ------------ | ------------------------------------------------------------------------------------------- |\n| tn_l _List_ | Large thumbnail (a list that contains the URL, the width and the height of the thumbnail).  |\n| tn_m _List_ | Medium thumbnail (a list that contains the URL, the width and the height of the thumbnail). |\n| tn_s _List_ | Small thumbnail (a list that contains the URL, the width and the height of the thumbnail).  |\n\n#### Audio file properties\n\nIf you upload an audio file, you may provide an extra attribute `file_duration`\n(duration of the audio file in seconds, which takes an integer value). In the\nweb interface the file is rendered with a `<audio>` tag, so you should make sure\nit's supported in current web browsers. See\n[supported media formats](https://developer.mozilla.org/en-US/docs/Web/Media/Formats) for\nthe reference.\n\n# Live notifications\n\n> Examples of live notifications:\n\n```\n{\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"id\": \"1\",\n    \"invitation_id\": \"456\",\n    \"invitation_secret\": \"abcdefghijklmno\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"share_invitation_sent\",\n    \"seq_no\": 12345567890,\n    \"state\": \"accepted\"\n}\n\n{\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"id\": \"2\",\n    \"invitation_id\": \"456\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"share_invitation_accepted\",\n    \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"seq_no\": 1234567890\n}\n\n{\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"id\": \"3\",\n    \"invitation_id\": \"456\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"share_invitation_rejected\",\n    \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"reject_email\": \"me@example.com\",\n    \"seq_no\": 1234567890\n}\n\n{\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"id\": \"4\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"user_left_project\",\n    \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"seq_no\": 1234567890\n}\n\n{\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"id\": \"5\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"user_removed_from_project\",\n    \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"removed_name\": \"Example User\",\n    \"removed_uid\": \"2671366\",\n    \"seq_no\": 1234567890\n}\n\n{\n    \"assigned_by_uid\": \"2671362\",\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"id\": \"6\",\n    \"item_content\": \"NewTask\",\n    \"item_id\": \"6X7gfV9G7rWm5hW8\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"item_assigned\",\n    \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"responsible_uid\": \"2671355\",\n    \"seq_no\": 1234567890\n}\n\n{\n    \"assigned_by_uid\": \"2671362\",\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"id\": \"7\",\n    \"item_content\": \"NewTask\",\n    \"item_id\": \"6X7gfV9G7rWm5hW8\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"item_completed\",\n    \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"responsible_uid\": \"2671355\",\n    \"seq_no\": 1234567890\n}\n\n{\n    \"assigned_by_uid\": \"2671362\",\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"id\": \"8\",\n    \"item_id\": \"6X7gfV9G7rWm5hW8\",\n    \"item_content\": \"NewTask\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"item_uncompleted\",\n    \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"responsible_uid\": \"321\",\n    \"seq_no\": 1234567890\n}\n\n{\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"id\": \"9\",\n    \"item_id\": \"6X7gfV9G7rWm5hW8\",\n    \"note_content\": \"NewTask\",\n    \"note_id\": \"6X7jp7j8x7JhWFC3\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"note_added\",\n    \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"seq_no\": 1234567890\n}\n\n{\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"count\": 5,\n    \"goal\": 5,\n    \"id\": \"18\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"daily_goal_reached\",\n    \"seq_no\": 1234567890\n}\n\n{\n    \"created_at\": \"2021-05-10T09:59:36.000000Z\",\n    \"is_unread\": false,\n    \"from_uid\": \"2671362\",\n    \"count\": 50,\n    \"goal\": 50,\n    \"id\": \"19\",\n    \"notification_key\": \"notification_123\",\n    \"notification_type\": \"weekly_goal_reached\",\n    \"seq_no\": 1234567890\n}\n```\n\n#### Types\n\nThis is the list of notifications which can be issued by the system:\n\n| Type                             | Description                                                                                                                                                                                                                                                                                |\n| -------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| share_invitation_sent            | Sent to the sharing invitation receiver.                                                                                                                                                                                                                                                   |\n| share_invitation_accepted        | Sent to the sharing invitation sender, when the receiver accepts the invitation.                                                                                                                                                                                                           |\n| share_invitation_rejected        | Sent to the sharing invitation sender, when the receiver rejects the invitation.                                                                                                                                                                                                           |\n| user_left_project                | Sent to everyone when somebody leaves the project.                                                                                                                                                                                                                                         |\n| user_removed_from_project        | Sent to everyone, when a person removes somebody from the project.                                                                                                                                                                                                                         |\n| item_assigned                    | Sent to user who is responsible for the task. Optionally it's also sent to the user who created the task initially, if the assigner and the task creator is not the same person.                                                                                                           |\n| item_completed                   | Sent to the user who assigned the task when the task is completed. Optionally it's also sent to the user who is responsible for this task, if the responsible user and the user who completed the task is not the same person.                                                             |\n| item_uncompleted                 | Sent to the user who assigned the task when the task is uncompleted. Optionally it's also sent to the user who is responsible for this task, if the responsible user and the user who completed the task is not the same person.                                                           |\n| note_added                       | Sent to all members of the shared project, whenever someone adds a note to the task.                                                                                                                                                                                                       |\n| workspace_invitation_created     | Sent to the invitee (if existing user) when invited to a workspace.                                                                                                                                                                                                                        |\n| workspace_invitation_accepted    | Sent to the inviter, and admins of paid workspaces, when the workspace invitation is accepted.                                                                                                                                                                                             |\n| workspace_invitation_rejected    | Sent to the inviter when the workspace invitation is declined.                                                                                                                                                                                                                             |\n| project_archived                 | Sent to project collaborators when the project is archived. _Only for workspace projects at the moment._                                                                                                                                                                                   |\n| removed_from_workspace           | Sent to removed user when removed from a workspace.                                                                                                                                                                                                                                        |\n| workspace_deleted                | Sent to every workspace admin, member and guest.                                                                                                                                                                                                                                           |\n| teams_workspace_upgraded         | Sent to workspace admins and members when workspace is upgraded to paid plan (access to paid features).                                                                                                                                                                                    |\n| teams_workspace_canceled         | Sent to workspace admins and members when workspace is back on Starter plan (no access to paid features).                                                                                                                                                                                  |\n| teams_workspace_payment_failed   | Sent to the workspace billing admin on the web when a payment failed since it requires their action.                                                                                                                                                                                       |\n| karma_level   | Sent when a new karma level is reached |\n| share_invitation_blocked_by_project_limit   | Sent when the invitation is blocked because the user reached the project limits |\n| workspace_user_joined_by_domain   | Sent when a user join a new workspace by domain |\n\n#### Common properties\n\nSome properties are common for all types of notifications, whereas some others\ndepend on the notification type.\n\nEvery live notification has the following properties:\n\n| Property                    | Description                                                                                                |\n| --------------------------- | ---------------------------------------------------------------------------------------------------------- |\n| id _String_                 | The ID of the live notification.                                                                           |\n| created_at _String_        | Live notification creation date.                                                                           |\n| from_uid _String_          | The ID of the user who initiated this live notification.                                                   |\n| notification_key _String_  | Unique notification key.                                                                                   |\n| notification_type _String_ | Type of notification. Different notification type define different extra fields which are described below. |\n| seq_no _Integer_           | Notification sequence number.                                                                              |\n| is_unread _Boolean_        | Whether the notification is marked as unread (a `true` or `false` value).                                  |\n\n#### Specific properties\n\nHere are the extra properties for the `*_invitation_*` types of live\nnotifications:\n\n| Property                    | Description                                                                                              |\n| --------------------------- | -------------------------------------------------------------------------------------------------------- |\n| from_user _Object_         | User data, useful on `share_invitation_sent`.                                                            |\n| project_name _String_      | The project name, useful for `share_invitation_*` where you may not have the project in the local model. |\n| invitation_id _String_     | The invitation ID. Useful for accepting/rejecting invitations.                                           |\n| invitation_secret _String_ | The invitation secret key. Useful for accepting/rejecting invitations.                                   |\n\nHere are the extra properties for the `share_invitation_sent` type of live notifications:\n\n| Property       | Description                                                                              |\n| -------------- | ---------------------------------------------------------------------------------------- |\n| state _String_ | Invitation state. Initially `invited`, can change the state to `accepted` or `rejected`. |\n\nHere are the extra properties for the `user_removed_from_project` type of live notifications:\n\n| Property               | Description                   |\n| ---------------------- | ----------------------------- |\n| removed_name _String_ | The name of the user removed. |\n| removed_uid _String_  | The uid of the user removed.  |\n\nHere are the extra properties for the `workspace_invitation_created` types of live\nnotifications:\n\n| Property                    | Description                                                                              |\n| --------------------------- | ---------------------------------------------------------------------------------------- |\n| from_user _Object_         | User data, same as in `share_invitation_sent`.                                           |\n| workspace_id _Integer_     | The ID of the workspace.                                                                 |\n| workspace_name _String_    | Name of the workspace.                                                                   |\n| invitation_id _String_     | The invitation ID. Useful for accepting/rejecting invitations.                           |\n| invitation_secret _String_ | Invitation secret. Should be used to accept or reject invitation.                        |\n| state _String_              | Invitation state. Initially `invited`, can change the state to `accepted` or `rejected`. |\n\nHere are the extra properties for the `workspace_invitation_accepted` and `workspace_invitation_rejected` types of live\nnotifications:\n\n| Property                 | Description                                                    |\n| ------------------------ | -------------------------------------------------------------- |\n| from_user _Object_      | User data, same as in `share_invitation_sent`.                 |\n| workspace_id _Integer_  | The ID of the workspace.                                       |\n| workspace_name _String_ | Name of the workspace.                                         |\n| invitation_id _String_  | The invitation ID. Useful for accepting/rejecting invitations. |\n\nHere are the extra properties for the `removed_from_workspace` and `workspace_deleted` types of live\nnotifications:\n\n| Property                 | Description                                    |\n| ------------------------ | ---------------------------------------------- |\n| from_user _Object_      | User data, same as in `share_invitation_sent`. |\n| workspace_id _Integer_  | The ID of the workspace.                       |\n| workspace_name _String_ | Name of the workspace.                         |\n\nHere are the extra properties for the `teams_workspace_upgraded`, `teams_workspace_canceled` and `teams_workspace_payment_failed` types of live notifications:\n\n| Property                 | Description                                                                    |\n| ------------------------ | ------------------------------------------------------------------------------ |\n| workspace_id _Integer_  | The ID of the workspace.                                                       |\n| workspace_name _String_ | Name of the workspace.                                                         |\n| plan_type _String_      | Tariff plan name for the workspace. Valid values are `STARTER` and `BUSINESS`. |\n\nHere are the extra properties for the `project_archived` types of live\nnotifications:\n\n| Property                 | Description                                    |\n| ------------------------ | ---------------------------------------------- |\n| from_user _Object_      | User data, same as in `share_invitation_sent`. |\n| project_id _Integer_    | The ID of the project.                         |\n| project_name _String_   | Name of the project.                           |\n\n## Set last known\n\n> Example set last known notification request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"live_notifications_set_last_read\",\n        \"uuid\": \"588b9ccf-29c0-4837-8bbc-fc858c0c6df8\",\n        \"args\": {\"id\": \"1234\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"588b9ccf-29c0-4837-8bbc-fc858c0c6df8\": \"ok\"},\n  ...\n}\n```\n\nSet the last known notification.\n\n#### Command arguments\n\n| Argument    | Required | Description                                                                         |\n| ----------- | -------- | ----------------------------------------------------------------------------------- |\n| id _String_ | Yes      | The ID of the last known notification (a number or `0` or `null` to mark all read). |\n\n## Mark as read\n\n> Example mark notification read request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"live_notifications_mark_read\",\n        \"uuid\": \"588b9ccf-29c0-4837-8bbc-fc858c0c6df8\",\n        \"args\": {\"ids\": [\"1234\"]}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"588b9ccf-29c0-4837-8bbc-fc858c0c6df8\": \"ok\"},\n  ...\n}\n```\n\nMark the notifications as read.\n\n#### Command arguments\n\n| Argument              | Required | Description                   |\n| --------------------- | -------- | ----------------------------- |\n| ids _Array of String_ | Yes      | The IDs of the notifications. |\n\n## Mark all as read\n\n> Example mark all notifications read request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"live_notifications_mark_read_all\",\n        \"uuid\": \"588b9ccf-29c0-4837-8bbc-fc858c0c6df8\"\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"588b9ccf-29c0-4837-8bbc-fc858c0c6df8\": \"ok\"},\n  ...\n}\n```\n\nMark all notifications as read.\n\n## Mark as unread\n\n> Example mark notification unread request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"live_notifications_mark_unread\",\n        \"uuid\": \"588b9ccf-29c0-4837-8bbc-fc858c0c6df8\",\n        \"args\": {\"ids\": [\"1234\"]}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"588b9ccf-29c0-4837-8bbc-fc858c0c6df8\": \"ok\"},\n  ...\n}\n```\n\nMark the notifications as unread.\n\n#### Command arguments\n\n| Argument              | Required | Description                   |\n| --------------------- | -------- | ----------------------------- |\n| ids _Array of String_ | Yes      | The IDs of the notifications. |\n\n# Labels\n\n> An example personal label object:\n\n```\n{\n    \"id\": \"2156154810\",\n    \"name\": \"Food\",\n    \"color\": \"lime_green\",\n    \"item_order\": 0,\n    \"is_deleted\": false,\n    \"is_favorite\": false\n}\n```\n\nThere are two types of labels that can be added to Todoist tasks.\nWe refer to these as `personal` and `shared` labels.\n\n#### Personal labels\n\nLabels created by the current user will show up in their personal label list.\nThese labels can be customized and will stay in their account unless deleted.\n\nA personal label can be converted to a shared label by the user if they no longer\nrequire them to be stored against their account, but they still appear on\nshared tasks.\n\n#### Shared labels\n\nA label created by a collaborator that doesn't share a name with an existing personal label\nwill appear in our clients as a shared label. These labels are gray by default and will\nonly stay in the shared labels list if there are any active tasks with this label.\n\nA user can convert a shared label to a personal label at any time. The label will then become\ncustomizable and will remain in the account even if not assigned to any active tasks.\n\nShared labels do not appear in the sync response for a user's account. They only appear\nwithin the `labels` list of the [tasks](#tag/Sync/Tasks) that they are assigned to.\n\nYou can find more information on the differences between personal and shared labels in our [Help Center](https://www.todoist.com/help/articles/introduction-to-labels-dSo2eE#shared).\n\n#### Properties (only applicable to personal labels)\n\n| Property               | Description                                                                                                   |\n| ---------------------- | ------------------------------------------------------------------------------------------------------------- |\n| id _String_            | The ID of the label.                                                                                          |\n| name _String_          | The name of the label.                                                                                        |\n| color _String_         | The color of the label icon. Refer to the `name` column in the [Colors](#tag/Colors) guide for more info. |\n| item_order _Integer_  | Label’s order in the label list (a number, where the smallest value should place the label at the top).       |\n| is_deleted _Boolean_  | Whether the label is marked as deleted (a `true` or `false` value).                                           |\n| is_favorite _Boolean_ | Whether the label is a favorite (a `true` or `false` value).                                                  |\n\n## Add a personal label\n\n> Example add label request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"label_add\",\n        \"temp_id\": \"f2f182ed-89fa-4bbb-8a42-ec6f7aa47fd0\",\n        \"uuid\": \"ba204343-03a4-41ff-b964-95a102d12b35\",\n        \"args\": {\"name\": \"Food\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"ba204343-03a4-41ff-b964-95a102d12b35\": \"ok\"},\n  \"temp_id_mapping\": {\"f2f182ed-89fa-4bbb-8a42-ec6f7aa47fd0\": \"2156154810\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument               | Required | Description                                                                                                   |\n| ---------------------- | -------- | ------------------------------------------------------------------------------------------------------------- |\n| name _String_          | Yes      | The name of the label                                                                                         |\n| color _String_         | No       | The color of the label icon. Refer to the `name` column in the [Colors](#tag/Colors) guide for more info. |\n| item_order _Integer_  | No       | Label’s order in the label list (a number, where the smallest value should place the label at the top).       |\n| is_favorite _Boolean_ | No       | Whether the label is a favorite (a `true` or `false` value).                                                  |\n\n## Update a personal label\n\n> Example update label request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"label_update\",\n        \"uuid\": \"9c9a6e34-2382-4f43-a217-9ab017a83523\",\n        \"args\": {\"id\": \"2156154810\", \"color\": \"berry_red\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"9c9a6e34-2382-4f43-a217-9ab017a83523\": \"ok\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument               | Required | Description                                                                                                   |\n| ---------------------- | -------- | ------------------------------------------------------------------------------------------------------------- |\n| id _String_            | Yes      | The ID of the label.                                                                                          |\n| name _String_          | No       | The name of the label.                                                                                        |\n| color _String_         | No       | The color of the label icon. Refer to the `name` column in the [Colors](#tag/Colors) guide for more info. |\n| item_order _Integer_  | No       | Label’s order in the label list.                                                                              |\n| is_favorite _Boolean_ | No       | Whether the label is a favorite (a `true` or `false` value).                                                  |\n\n## Delete a personal label\n\n> Example delete label request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"label_delete\",\n        \"uuid\": \"aabaa5e0-b91b-439c-aa83-d1b35a5e9fb3\",\n        \"args\": {\n            \"id\": \"2156154810\",\n            \"cascade\": \"all\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"aabaa5e0-b91b-439c-aa83-d1b35a5e9fb3\": \"ok\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument         | Required | Description                                                                                                                                                                                                                                                                                                                                                          |\n| ---------------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_      | Yes      | The ID of the label.                                                                                                                                                                                                                                                                                                                                                 |\n| cascade _String_ | No       | A string value, either `all` (default) or `none`. If no value or `all` is passed, the personal label will be removed and any instances of the label will also be removed from tasks (including tasks in shared projects). If `none` is passed, the personal label will be removed from the user's account but it will continue to appear on tasks as a shared label. |\n\n## Rename a shared label\n\n> Example rename shared label request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"label_rename\",\n        \"uuid\": \"b863b0e5-2541-4a5a-a462-ce265ae2ff2d\",\n        \"args\": {\n            \"name_old\": \"Food\",\n            \"name_new\": \"Drink\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"b863b0e5-2541-4a5a-a462-ce265ae2ff2d\": \"ok\"},\n  ...\n}\n```\n\nThis command enables renaming of shared labels. Any tasks containing a label matching the\nvalue of `name_old` will be updated with the new label name.\n\n#### Command arguments\n\n| Argument           | Required | Description                              |\n| ------------------ | -------- | ---------------------------------------- |\n| name_old _String_ | Yes      | The current name of the label to modify. |\n| name_new _String_ | Yes      | The new name for the label.              |\n\n## Delete shared label occurrences\n\n> Example delete shared label request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"label_delete_occurrences\",\n        \"uuid\": \"6174264a-2842-410c-a8ff-603ec4d4736b\",\n        \"args\": {\n            \"name\": \"Shopping\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"6174264a-2842-410c-a8ff-603ec4d4736b\": \"ok\"},\n  ...\n}\n```\n\nDeletes all occurrences of a shared label from any active tasks.\n\n#### Command arguments\n\n| Argument      | Required | Description                      |\n| ------------- | -------- | -------------------------------- |\n| name _String_ | Yes      | The name of the label to remove. |\n\n## Update multiple label orders\n\n> Example update label orders request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"label_update_orders\",\n        \"uuid\": \"1402a911-5b7a-4beb-bb1f-fb9e1ed798fb\",\n        \"args\": {\n            \"id_order_mapping\": {\"2156154810\":  1, \"2156154820\": 2}\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\n    \"517560cc-f165-4ff6-947b-3adda8aef744\": \"ok\"},\n    ...\n  },\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument                   | Required | Description                                                              |\n| -------------------------- | -------- | ------------------------------------------------------------------------ |\n| id_order_mapping _Object_ | Yes      | A dictionary, where a label `id` is the key, and the `item_order` value. |\n\n# Tasks\n\n> An example task object:\n\n```\n{\n    \"id\": \"6X7rM8997g3RQmvh\",\n    \"user_id\": \"2671355\",\n    \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n    \"content\": \"Buy Milk\",\n    \"description\": \"\",\n    \"priority\": 1,\n    \"due\": null,\n    \"deadline\": null,\n    \"parent_id\": null,\n    \"child_order\": 1,\n    \"section_id\": \"3Ty8VQXxpwv28PK3\",\n    \"day_order\": -1,\n    \"is_collapsed\": false,\n    \"labels\": [\"Food\", \"Shopping\"],\n    \"added_by_uid\": \"2671355\",\n    \"assigned_by_uid\": \"2671355\",\n    \"responsible_uid\": null,\n    \"checked\": false,\n    \"is_deleted\": false,\n    \"added_at\": \"2025-01-21T21:28:43.841504Z\",\n    \"updated_at\": \"2025-01-21T21:28:43Z\",\n    \"completed_at\": null,\n    \"deadline\": null,\n    \"duration\": {\n        \"amount\": 15,\n        \"unit\": \"minute\"\n    }\n```\n\n#### Properties\n\n| Property                 | Description                                                                                                                                                                                                                                                                                                                            |\n|--------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| id _String_              | The ID of the task.                                                                                                                                                                                                                                                                                                                    |\n| user_id _String_         | The owner of the task.                                                                                                                                                                                                                                                                                                                 |\n| project_id _String_      | The ID of the parent project.                                                                                                                                                                                                                                                                                                          |\n| content _String_         | The text of the task. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center.                                                                         |\n| description _String_     | A description for the task. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center.                                                                   |\n| due _Object_             | The due date of the task. See the [Due dates](#tag/Due-dates) section for more details.                                                                                                                                                                                                                                                |\n| deadline _Object_        | The deadline of the task. See the [Deadlines](#tag/Deadlines) section for more details.                                                                                                                                                                                                                                                |\n| priority _Integer_       | The priority of the task (a number between `1` and `4`, `4` for very urgent and `1` for natural). <br>**Note**: Keep in mind that `very urgent` is the priority 1 on clients. So, `p1` will return `4` in the API.                                                                                                                     |\n| parent_id _String_       | The ID of the parent task. Set to `null` for root tasks.                                                                                                                                                                                                                                                                               |\n| child_order _Integer_    | The order of the task. Defines the position of the task among all the tasks with the same parent.                                                                                                                                                                                                                                      |\n| section_id _String_      | The ID of the parent section. Set to `null` for tasks not belonging to a section.                                                                                                                                                                                                                                                      |\n| day_order _Integer_      | The order of the task inside the `Today` or `Next 7 days` view (a number, where the smallest value would place the task at the top).                                                                                                                                                                                                   |\n| is_collapsed _Boolean_   | Whether the task's sub-tasks are collapsed (a `true` or `false` value).                                                                                                                                                                                                                                                                |\n| labels _Array of String_ | The task's labels (a list of names that may represent either personal or shared labels).                                                                                                                                                                                                                                               |\n| added_by_uid _String_    | The ID of the user who created the task. This makes sense for shared projects only. For tasks created before 31 Oct 2019 the value is set to null. Cannot be set explicitly or changed via API.                                                                                                                                        |\n| assigned_by_uid _String_ | The ID of the user who assigned the task. This makes sense for shared projects only. Accepts any user ID from the list of project collaborators. If this value is unset or invalid, it will automatically be set up to your uid.                                                                                                       |\n| responsible_uid _String_ | The ID of user who is responsible for accomplishing the current task. This makes sense for shared projects only. Accepts any user ID from the list of project collaborators or `null` or an empty string to unset.                                                                                                                     |\n| checked _Boolean_        | Whether the task is marked as completed (a `true` or `false` value).                                                                                                                                                                                                                                                                   |\n| is_deleted _Boolean_     | Whether the task is marked as deleted (a `true` or `false` value).                                                                                                                                                                                                                                                                     |\n| completed_at _String_    | The date when the task was completed (or `null` if not completed).                                                                                                                                                                                                                                                                     |\n| added_at _String_        | The datetime when the task was created.                                                                                                                                                                                                                                                                                                |\n| updated_at _String_      | The datetime when the task was updated.                                                                                                                                                                                                                                                                                                |\n| completed_at _String_    | The datetime when the task was completed.                                                                                                                                                                                                                                                                                              |\n| duration _Object_        | Object representing a task's duration. Includes a positive integer (greater than zero) for the `amount` of time the task will take, and the `unit` of time that the amount represents which must be either `minute` or `day`. Both the `amount` and `unit` **must** be defined. The object will be `null` if the task has no duration. |\n\n## Add a task\n\n> Example add task request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"item_add\",\n        \"temp_id\": \"43f7ed23-a038-46b5-b2c9-4abda9097ffa\",\n        \"uuid\": \"997d4b43-55f1-48a9-9e66-de5785dfd69b\",\n        \"args\": {\n            \"content\": \"Buy Milk\",\n            \"project_id\": \"6Jf8VQXxpwv56VQ7\",\n            \"labels\": [\"Food\", \"Shopping\"]\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"997d4b43-55f1-48a9-9e66-de5785dfd69b\": \"ok\"},\n  \"temp_id_mapping\": {\"43f7ed23-a038-46b5-b2c9-4abda9097ffa\": \"6X7rM8997g3RQmvh\"},\n  ...\n}\n```\n\nAdd a new task to a project.\n\n#### Command arguments\n\n| Argument                    | Required | Description                                                                                                                                                                                                                                                          |\n|-----------------------------|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| content _String_            | Yes      | The text of the task. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center.       |\n| description _String_        | No       | A description for the task. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center. |\n| project_id _String_         | No       | The ID of the project to add the task to (a number or a temp id). By default the task is added to the user’s `Inbox` project.                                                                                                                                        |\n| due _Object_                | No       | The due date of the task. See the [Due dates](#tag/Due-dates) section for more details.                                                                                                                                                                              |\n| deadline _Object_           | No       | The deadline of the task. See the [Deadlines](#tag/Deadlines) section for more details.                                                                                                                                                                              |\n| priority _Integer_          | No       | The priority of the task (a number between `1` and `4`, `4` for very urgent and `1` for natural). <br>**Note**: Keep in mind that `very urgent` is the priority 1 on clients. So, `p1` will return `4` in the API.                                                   |\n| parent_id _String_          | No       | The ID of the parent task. Set to `null` for root tasks.                                                                                                                                                                                                             |\n| child_order _Integer_       | No       | The order of task. Defines the position of the task among all the tasks with the same parent.                                                                                                                                                                        |\n| section_id _String_         | No       | The ID of the section. Set to `null` for tasks not belonging to a section.                                                                                                                                                                                           |\n| day_order _Integer_         | No       | The order of the task inside the `Today` or `Next 7 days` view (a number, where the smallest value would place the task at the top).                                                                                                                                 |\n| is_collapsed _Boolean_      | No       | Whether the task's sub-tasks are collapsed (a `true` or `false` value).                                                                                                                                                                                              |\n| labels _Array of String_    | No       | The task's labels (a list of names that may represent either personal or shared labels).                                                                                                                                                                             |\n| assigned_by_uid _String_    | No       | The ID of user who assigns the current task. This makes sense for shared projects only. Accepts `0` or any user ID from the list of project collaborators. If this value is unset or invalid, it will be automatically setup to your uid.                            |\n| responsible_uid _String_    | No       | The ID of user who is responsible for accomplishing the current task. This makes sense for shared projects only. Accepts any user ID from the list of project collaborators or `null` or an empty string to unset.                                                   |\n| auto_reminder _Boolean_     | No       | When this option is enabled, the default reminder will be added to the new item if it has a due date with time set. See also the [auto_reminder user option](#tag/Sync/User) for more info about the default reminder.                                               |\n| auto_parse_labels _Boolean_ | No       | When this option is enabled, the labels will be parsed from the task content and added to the task. In case the label doesn't exist, a new one will be created.                                                                                                      |\n| duration _Object_           | No       | The task's duration. Includes a positive integer (greater than zero) for the `amount` of time the task will take, and the `unit` of time that the amount represents which must be either `minute` or `day`. Both the `amount` and `unit` **must** be defined.        |\n\n## Update a task\n\n> Example update task request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"item_update\",\n        \"uuid\": \"318d16a7-0c88-46e0-9eb5-cde6c72477c8\",\n        \"args\": {\n            \"id\": \"6X7rM8997g3RQmvh\",\n            \"priority\": 2\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"318d16a7-0c88-46e0-9eb5-cde6c72477c8\": \"ok\"},\n  ...\n}\n```\n\nUpdates task attributes. Please note that updating the parent, moving,\ncompleting or uncompleting tasks is not supported by `item_update`, more\nspecific commands have to be used instead.\n\n#### Command arguments\n\n| Argument                 | Required | Description                                                                                                                                                                                                                                                                                                                 |\n|--------------------------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| id _String_              | Yes      | The ID of the task.                                                                                                                                                                                                                                                                                                         |\n| content _String_         | No       | The text of the task. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center.                                                              |\n| description _String_     | No       | A description for the task. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the [Text Formatting article](https://www.todoist.com/help/articles/format-text-in-a-todoist-task-e5dHw9) in the Help Center.                                                        |\n| due _Object_             | No       | The due date of the task. See the [Due dates](#tag/Due-dates) section for more details.                                                                                                                                                                                                                                     |\n| deadline _Object_        | No       | The deadline of the task. See the [Deadlines](#tag/Deadlines) section for more details.                                                                                                                                                                                                                                     |\n| priority _Integer_       | No       | The priority of the task (a number between `1` and `4`, `4` for very urgent and `1` for natural). <br>**Note**: Keep in mind that `very urgent` is the priority 1 on clients. So, `p1` will return `4` in the API.                                                                                                          |\n| is_collapsed _Boolean_   | No       | Whether the task's sub-tasks are collapsed (a `true` or `false` value).                                                                                                                                                                                                                                                     |\n| labels _Array of String_ | No       | The task's labels (a list of names that may represent either personal or shared labels).                                                                                                                                                                                                                                    |\n| assigned_by_uid _String_ | No       | The ID of the user who assigned the task. This makes sense for shared projects only. Accepts `0` or any user ID from the list of project collaborators. If this value is unset or invalid, it will be automatically setup to your uid.                                                                                      |\n| responsible_uid _String_ | No       | The ID of the user who is responsible for accomplishing the task. This makes sense for shared projects only. Accepts any user ID from the list of project collaborators or `null` or an empty string to unset.                                                                                                              |\n| day_order _Integer_      | No       | The order of the task inside the `Today` or `Next 7 days` view (a number, where the smallest value would place the task at the top).                                                                                                                                                                                        |\n| duration _Object_        | No       | The task's duration. Must a positive integer (greater than zero) for the `amount` of time the task will take, and the `unit` of time that the amount represents which must be either `minute` or `day`. Both the `amount` and `unit` **must** be defined. The object should be set to `null` to remove the task's duration. |\n\n## Move a task\n\n> Example move task request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"item_move\",\n        \"uuid\": \"318d16a7-0c88-46e0-9eb5-cde6c72477c8\",\n        \"args\": {\n            \"id\": \"6X7rM8997g3RQmvh\",\n            \"parent_id\": \"6X7rf9x6pv2FGghW\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"318d16a7-0c88-46e0-9eb5-cde6c72477c8\": \"ok\"},\n  ...\n}\n```\n\nMove task to a different location. Only one of `parent_id`, `section_id` or\n`project_id` must be set.\n\n#### Command arguments\n\n| Argument             | Required | Description                                                                                 |\n| -------------------- | -------- | ------------------------------------------------------------------------------------------- |\n| id _String_          | Yes      | The ID of the task.                                                                         |\n| parent_id _String_  | No       | ID of the destination parent task. The task becomes the last child task of the parent task. |\n| section_id _String_ | No       | ID of the destination section. The task becomes the last root task of the section.          |\n| project_id _String_ | No       | ID of the destination project. The task becomes the last root task of the project.          |\n\n## Reorder tasks\n\n> Example reorder tasks request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"item_reorder\",\n        \"uuid\": \"bf0855a3-0138-4b76-b895-88cad8db9edc\",\n        \"args\": {\n            \"items\": [\n                {\"id\": \"6X7rM8997g3RQmvh\", \"child_order\": 1},\n                {\"id\": \"6X7rfFVPjhvv84XG\", \"child_order\": 2}\n            ]\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"bf0855a3-0138-4b76-b895-88cad8db9edc\": \"ok\"},\n  ...\n}\n```\n\nThe command updates `child_order` properties of items in bulk.\n\n#### Command arguments\n\n| Argument                 | Required | Description                                                                                                                      |\n| ------------------------ | -------- | -------------------------------------------------------------------------------------------------------------------------------- |\n| items _Array of Objects_ | Yes      | An array of objects to update. Each object contains two attributes: `id` of the item to update and `child_order`, the new order. |\n\n## Delete tasks\n\n> Example delete task request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"item_delete\",\n        \"uuid\": \"f8539c77-7fd7-4846-afad-3b201f0be8a5\",\n        \"args\": {\"id\": \"6X7rfFVPjhvv84XG\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"f8539c77-7fd7-4846-afad-3b201f0be8a5\": \"ok\"},\n  ...\n}\n```\n\nDelete a task and all its sub-tasks.\n\n#### Command arguments\n\n| Argument    | Required | Description               |\n| ----------- | -------- | ------------------------- |\n| id _String_ | Yes      | ID of the task to delete. |\n\n## Complete task\n\n> Example complete task request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"item_complete\",\n        \"uuid\": \"a74bfb5c-5f1d-4d14-baea-b7415446a871\",\n        \"args\": {\n            \"id\": \"6X7rfFVPjhvv84XG\",\n            \"date_completed\": \"2017-01-02T01:00:00.000000Z\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"a74bfb5c-5f1d-4d14-baea-b7415446a871\": \"ok\"},\n  ...\n}\n```\n\nCompletes a task and its sub-tasks and moves them to the archive. See also `item_close` for a\nsimplified version of the command.\n\n#### Command arguments\n\n| Argument               | Required | Description                                                                                                                    |\n| ---------------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| id _String_            | Yes      | Task ID to complete.                                                                                                           |\n| date_completed _Date_ | No       | RFC3339-formatted date of completion of the task (in UTC). If not set, the server will set the value to the current timestamp. |\n\n## Uncomplete item\n\n> Example uncomplete task request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"item_uncomplete\",\n        \"uuid\": \"710a60e1-174a-4313-bb9f-4df01e0349fd\",\n        \"args\": {\"id\": \"2995104339\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"710a60e1-174a-4313-bb9f-4df01e0349fd\": \"ok\"},\n  ...\n}\n```\n\nThis command is used to uncomplete and restore an completed task.\n\nAny ancestor items or sections will also be reinstated. Items will have the `checked` value reset.\n\nThe reinstated items and sections will appear at the end of the list within their parent, after any previously\nactive tasks.\n\n#### Command arguments\n\n| Argument    | Required | Description           |\n| ----------- | -------- | --------------------- |\n| id _String_ | Yes      | Task ID to uncomplete |\n\n## Complete a recurring task\n\n> Example complete recurring task request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"item_update_date_complete\",\n        \"uuid\": \"c5888360-96b1-46be-aaac-b49b1135feab\",\n        \"args\": {\n            \"id\": \"2995104339\",\n            \"due\": {\"date\": \"2014-10-30\", \"string\": \"every day\"},\n            \"is_forward\": 1,\n            \"reset_subtasks\": 0\n        }\n    }]\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"c5888360-96b1-46be-aaac-b49b1135feab\": \"ok\"},\n  ...\n}\n```\n\nComplete a recurring task. The reason why this is a special case is because\nwe need to mark a recurring completion (and using `item_update` won't do\nthis). See also `item_close` for a simplified version of the command.\n\n#### Command arguments\n\n| Argument                  | Required | Description                                                                                                                                                                                        |\n| ------------------------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_               | Yes      | The ID of the item to update (a number or a temp id).                                                                                                                                              |\n| due _Object_              | No       | The due date of the task. See the [Due dates](#tag/Due-dates) section for more details.                                                                                                                |\n| is_forward _Boolean_     | No       | Set this argument to 1 for completion, or 0 for uncompletion (e.g., via undo). By default, this argument is set to 1 (completion).                                                                 |\n| reset_subtasks _Boolean_ | No       | Set this property to 1 to reset subtasks when a recurring task is completed. By default, this property is not set (0), and subtasks will retain their existing status when the parent task recurs. |\n\n## Close task\n\n> Example close task request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"item_close\",\n        \"uuid\": \"c5888360-96b1-46be-aaac-b49b1135feab\",\n        \"args\": {\"id\": \"2995104339\"}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"c5888360-96b1-46be-aaac-b49b1135feab\": \"ok\"},\n  ...\n}\n```\n\nA simplified version of `item_complete` / `item_update_date_complete`. The command\ndoes exactly what official clients do when you close a task: regular tasks are\ncompleted and moved to the archive, recurring tasks are scheduled to their next occurrence.\n\n#### Command arguments\n\n| Argument    | Required | Description                                          |\n| ----------- | -------- | ---------------------------------------------------- |\n| id _String_ | Yes      | The ID of the item to close (a number or a temp id). |\n\n## Update day orders\n\n> Example update day orders request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"item_update_day_orders\",\n        \"uuid\": \"dbeb40fc-905f-4d8a-8bae-547d3bbd6e91\",\n        \"args\": {\"ids_to_orders\": {\"2995104339\": 1}}\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"dbeb40fc-905f-4d8a-8bae-547d3bbd6e91\": \"ok\"},\n  ...\n}\n```\n\nUpdate the day orders of multiple tasks at once.\n\n#### Command arguments\n\n| Argument                | Required | Description                                                                                   |\n| ----------------------- | -------- | --------------------------------------------------------------------------------------------- |\n| ids_to_orders _Object_ | Yes      | A dictionary, where a task `id` is the key, and the `day_order` value: `item_id: day_order`. |\n\n# Filters\n\n_Availability of filters functionality and the maximum number of saved filters are dependent\non the current user plan. These values are indicated by the `filters` and `max_filters`\nproperties of the [user plan limits](#tag/Sync/User/User-plan-limits) object._\n\n> An example filter:\n\n```\n{\n    \"id\": \"4638878\",\n    \"name\": \"Important\",\n    \"query\": \"priority 1\",\n    \"color\": \"lime_green\",\n    \"item_order\": 3,\n    \"is_deleted\": false,\n    \"is_favorite\": false\n    \"is_frozen\": false\n}\n```\n\n#### Properties\n\n| Property               | Description                                                                                                                                              |\n| ---------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_            | The ID of the filter.                                                                                                                                    |\n| name _String_          | The name of the filter.                                                                                                                                  |\n| query _String_         | The query to search for. [Examples of searches](https://www.todoist.com/help/articles/introduction-to-filters-V98wIH) can be found in the Todoist help page. |\n| color _String_         | The color of the filter icon. Refer to the `name` column in the [Colors](#tag/Colors) guide for more info.                                           |\n| item_order _Integer_  | Filter’s order in the filter list (where the smallest value should place the filter at the top).                                                         |\n| is_deleted _Boolean_  | Whether the filter is marked as deleted (a `true` or `false` value).                                                                                     |\n| is_favorite _Boolean_ | Whether the filter is a favorite (a `true` or `false` value).                                             |\n| is_frozen _Boolean_              | Filters from a cancelled subscription cannot be changed. This is a read-only attribute (a `true` or `false` value).       |\n\n## Add a filter\n\n> Example add filter request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"filter_add\",\n        \"temp_id\": \"9204ca9f-e91c-436b-b408-ea02b3972686\",\n        \"uuid\": \"0b8690b8-59e6-4d5b-9c08-6b4f1e8e0eb8\",\n        \"args\": {\n            \"name\": \"Important\",\n            \"query\": \"priority 1\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"0b8690b8-59e6-4d5b-9c08-6b4f1e8e0eb8\": \"ok\"},\n  \"temp_id_mapping\": {\"9204ca9f-e91c-436b-b408-ea02b3972686\": \"4638878\"},\n  ...\n}\n\n```\n\n#### Command arguments\n\n| Argument               | Required | Description                                                                                                                                              |\n| ---------------------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| name _String_          | Yes      | The name of the filter.                                                                                                                                  |\n| query _String_         | Yes      | The query to search for. [Examples of searches](https://www.todoist.com/help/articles/introduction-to-filters-V98wIH) can be found in the Todoist help page. |\n| color _String_         | No       | The color of the filter icon. Refer to the `name` column in the [Colors](#tag/Colors) guide for more info.                                           |\n| item_order _Integer_  | No       | Filter’s order in the filter list (the smallest value should place the filter at the top).                                                               |\n| is_favorite _Boolean_ | No       | Whether the filter is a favorite (a `true` or `false` value).                                                                                            |\n\n## Update a filter\n\n> Example update filter request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[\n    {\n        \"type\": \"filter_update\",\n        \"uuid\": \"a68b588a-44f7-434c-b3c5-a699949f755c\",\n        \"args\": {\n            \"id\": \"4638879\",\n            \"name\": \"Not Important\"\n            \"query\": \"priority 4\"\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"a68b588a-44f7-434c-b3c5-a699949f755c\": \"ok\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument               | Required | Description                                                                                                                                              |\n| ---------------------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _String_            | Yes      | The ID of the filter.                                                                                                                                    |\n| name _String_          | No       | The name of the filter                                                                                                                                   |\n| query _String_         | No       | The query to search for. [Examples of searches](https://www.todoist.com/help/articles/introduction-to-filters-V98wIH) can be found in the Todoist help page. |\n| color _String_         | No       | The color of the filter icon. Refer to the `name` column in the [Colors](#tag/Colors) guide for more info.                                           |\n| item_order _Integer_  | No       | Filter’s order in the filter list (where the smallest value should place the filter at the top).                                                         |\n| is_favorite _Boolean_ | No       | Whether the filter is a favorite (a `true` or `false` value).                                                                                            |\n\n## Delete a filter\n\n> Example delete filter request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands='[{\"type\": \"filter_delete\", \"uuid\": \"b8186025-66d5-4eae-b0dd-befa541abbed\", \"args\": {\"id\": \"9\"}}]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"b8186025-66d5-4eae-b0dd-befa541abbed\": \"ok\"},\n  ...\n}\n```\n\n#### Command arguments\n\n| Argument    | Required | Description           |\n| ----------- | -------- | --------------------- |\n| id _String_ | Yes      | The ID of the filter. |\n\n## Update multiple filter orders\n\n> Example reorder filters request:\n\n```shell\n$ curl https://api.todoist.com/api/v1/sync \\\n    -H \"Authorization: Bearer 0123456789abcdef0123456789abcdef01234567\" \\\n    -d commands=[\n    {\n        \"type\": \"filter_update_orders\",\n        \"uuid\": \"517560cc-f165-4ff6-947b-3adda8aef744\",\n        \"args\": {\n            \"id_order_mapping\": {\"4638878\":  1, \"4638879\": 2}\n        }\n    }]'\n```\n\n> Example response:\n\n```shell\n{\n  ...\n  \"sync_status\": {\"517560cc-f165-4ff6-947b-3adda8aef744\": \"ok\"},\n  ...\n}\n```\n\nUpdate the orders of multiple filters at once.\n\n#### Command arguments\n\n| Argument                   | Required | Description                                                                              |\n| -------------------------- | -------- | ---------------------------------------------------------------------------------------- |\n| id_order_mapping _Object_ | Yes      | A dictionary, where a filter ID is the key, and the order its value: `filter_id: order`. |\n"
    },
    {
      "name": "Ids",
      "description": "Endpoints related to ID mappings between v1 and v2"
    },
    {
      "name": "Workspace",
      "description": ""
    },
    {
      "name": "Projects",
      "description": ""
    },
    {
      "name": "Colors",
      "description": "Some objects (like projects, labels, and filters) returned by our APIs may have\ncolors defined by an id or name. The table below shows all information you may\nneed for any of these colors.\n\n| ID  | Name        | Hexadecimal                                                                   |     | ID  | Name       | Hexadecimal                                                                   |\n| --- | ----------- | ----------------------------------------------------------------------------- | --- | --- | ---------- | ----------------------------------------------------------------------------- |\n| 30  | berry_red   | <span class=\"color-block\" style=\"background-color: #B8255F\"></span> `#B8255F` |     | 40  | light_blue | <span class=\"color-block\" style=\"background-color: #6988A4\"></span> `#6988A4` |\n| 31  | red         | <span class=\"color-block\" style=\"background-color: #DC4C3E\"></span> `#DC4C3E` |     | 41  | blue       | <span class=\"color-block\" style=\"background-color: #4180FF\"></span> `#4180FF` |\n| 32  | orange      | <span class=\"color-block\" style=\"background-color: #C77100\"></span> `#C77100` |     | 42  | grape      | <span class=\"color-block\" style=\"background-color: #692EC2\"></span> `#692EC2` |\n| 33  | yellow      | <span class=\"color-block\" style=\"background-color: #B29104\"></span> `#B29104` |     | 43  | violet     | <span class=\"color-block\" style=\"background-color: #CA3FEE\"></span> `#CA3FEE` |\n| 34  | olive_green | <span class=\"color-block\" style=\"background-color: #949C31\"></span> `#949C31` |     | 44  | lavender   | <span class=\"color-block\" style=\"background-color: #A4698C\"></span> `#A4698C` |\n| 35  | lime_green  | <span class=\"color-block\" style=\"background-color: #65A33A\"></span> `#65A33A` |     | 45  | magenta    | <span class=\"color-block\" style=\"background-color: #E05095\"></span> `#E05095` |\n| 36  | green       | <span class=\"color-block\" style=\"background-color: #369307\"></span> `#369307` |     | 46  | salmon     | <span class=\"color-block\" style=\"background-color: #C9766F\"></span> `#C9766F` |\n| 37  | mint_green  | <span class=\"color-block\" style=\"background-color: #42A393\"></span> `#42A393` |     | 47  | charcoal   | <span class=\"color-block\" style=\"background-color: #808080\"></span> `#808080` |\n| 38  | teal        | <span class=\"color-block\" style=\"background-color: #148FAD\"></span> `#148FAD` |     | 48  | grey       | <span class=\"color-block\" style=\"background-color: #999999\"></span> `#999999` |\n| 39  | sky_blue    | <span class=\"color-block\" style=\"background-color: #319DC0\"></span> `#319DC0` |     | 49  | taupe      | <span class=\"color-block\" style=\"background-color: #8F7A69\"></span> `#8F7A69` |\n"
    },
    {
      "name": "Comments",
      "description": ""
    },
    {
      "name": "Templates",
      "description": "Templates allow exporting of a project's tasks to a file or URL, and then\nimporting of the task list to a new or existing project.\n\nAvailability of project templates functionality is dependent on the current\nuser plan. This values is indicated by the `templates` property of the [user\nplan limits](#tag/Sync/User/User-plan-limits) object.\n"
    },
    {
      "name": "Sections",
      "description": ""
    },
    {
      "name": "Tasks",
      "description": ""
    },
    {
      "name": "Labels",
      "description": ""
    },
    {
      "name": "Uploads",
      "description": "Availability of uploads functionality and the maximum size for a file\nattachment are dependent on the current user plan. These values are indicated\nby the `uploads` and `upload_limit_mb` properties of the user plan limits object.\n\nFiles can be uploaded to our servers and used as [File\nAttachments](#tag/Sync/Comments/File-Attachments) in [comments](#tag/Comments).\n"
    },
    {
      "name": "Filters",
      "description": "Everything managed via `/sync` endpoint"
    },
    {
      "name": "Reminders",
      "description": "Everything managed via `/sync` endpoint"
    },
    {
      "name": "Due dates",
      "description": "Due dates for tasks and reminders is one of the core concepts of Todoist. It's\nvery powerful and quite complex, because it has to embrace different use-cases\nof Todoist users.\n\nTodoist supports three types of due dates.\n\n- Full-day dates (like \"1 January 2018\" or \"tomorrow\")\n- Floating due dates with time (like \"1 January 2018 at 12:00\" or \"tomorrow\n    at 10am\")\n- Due dates with time and fixed timezone (like \"1 January 2018 at 12:00\n    America/Chicago\" or \"tomorrow at 10am Asia/Jakarta\")\n\nUnless specified explicitly, dates with time are created as floating.\n\nIn addition, any of these due dates can be set to recurring or not, depending\non the date string, provided by the client.\n\nOur Help Center contains an in-depth article about the difference between\n[floating due dates and dates with fixed zones](https://www.todoist.com/help/articles/set-a-fixed-time-or-floating-time-for-a-task-YUYVp27q).\n\nYou can also find more information about\n[recurring due dates](https://www.todoist.com/help/articles/introduction-to-recurring-due-dates-YUYVJJAV) in our Help Center.\n\n## Full-day dates\n\n> Example full-day date:\n\n```json\n{\n    \"date\": \"2016-12-01\",\n    \"timezone\": null,\n    \"string\": \"every day\",\n    \"lang\": \"en\",\n    \"is_recurring\": true\n}\n```\n\n#### Properties\n\n| Property                | Description                                                                                                                                                                                                                                                                                                                                 |\n| ----------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| date _string_           | Due date in the format of `YYYY-MM-DD` ([RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339)). For recurring dates, the date of the current iteration.                                                                                                                                                                                 |\n| timezone _string_       | Always set to `null`.                                                                                                                                                                                                                                                                                                                       |\n| string _string_         | Human-readable representation of due date. String always represents the due object in user's timezone. Look at our reference to see [which formats are supported](https://www.todoist.com/help/articles/introduction-to-due-dates-and-due-times-q7VobO).                                                                                        |\n| lang _string_           | Lang which has to be used to parse the content of the string attribute. Used by clients and on the server side to properly process due dates when date object is not set, and when dealing with recurring tasks. Valid languages are: `en`, `da`, `pl`, `zh`, `ko`, `de`, `pt`, `ja`, `it`, `fr`, `sv`, `ru`, `es`, `nl`, `fi`, `nb`, `tw`. |\n| is*recurring \\_boolean* | Boolean flag which is set to `true` if the due object represents a recurring due date.                                                                                                                                                                                                                                                      |\n\n## Floating due dates with time\n\n> Example floating due date with time:\n\n```json\n{\n    \"date\": \"2016-12-0T12:00:00.000000\",\n    \"timezone\": null,\n    \"string\": \"every day at 12\",\n    \"lang\": \"en\",\n    \"is_recurring\": true\n}\n```\n\n| Property                | Description                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| ----------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| date _string_           | Due date in the format of `YYYY-MM-DDTHH:MM:SS`. For recurring dates, the date of the current iteration. Due date always represent an event in current user's timezone. Note that it's not quite compatible with [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339), because the concept of timezone is not applicable to this object. Also note that unlike fixed due dates, the date representation doesn't end with \"Z\". |\n| timezone _string_       | Always set to `null`.                                                                                                                                                                                                                                                                                                                                                                                                              |\n| string _string_         | Human-readable representation of due date. String always represents the due object in user's timezone. Look at our reference to see [which formats are supported](https://www.todoist.com/help/articles/introduction-to-due-dates-and-due-times-q7VobO).                                                                                                                                                                               |\n| lang _string_           | Lang which has to be used to parse the content of the string attribute. Used by clients and on the server side to properly process due dates when date object is not set, and when dealing with recurring tasks. Valid languages are: `en`, `da`, `pl`, `zh`, `ko`, `de`, `pt`, `ja`, `it`, `fr`, `sv`, `ru`, `es`, `nl`, `fi`, `nb`, `tw`.                                                                                        |\n| is*recurring \\_boolean* | Boolean flag which is set to `true` if the due object represents a recurring due date.                                                                                                                                                                                                                                                                                                                                             |\n\n## Due dates with time and fixed timezone\n\n> Example due date with time and fixed timezone:\n\n```json\n{\n    \"date\": \"2016-12-06T13:00:00.000000Z\",\n    \"timezone\": \"Europe/Madrid\",\n    \"string\": \"ev day at 2pm\",\n    \"lang\": \"en\",\n    \"is_recurring\": true\n}\n```\n\n#### Properties\n\n| Property                | Description                                                                                                                                                                                                                                                                                                                                 |\n| ----------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| date _string_           | Due date in the format of `YYYY-MM-DDTHH:MM:SSZ` ([RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339)). For recurring dates, the date of the current iteration. Due date is stored in UTC.                                                                                                                                            |\n| timezone _string_       | Timezone of the due instance. Used to recalculate properly the next iteration for a recurring due date.                                                                                                                                                                                                                                     |\n| string _string_         | Human-readable representation of due date. String always represents the due object in user's timezone. Look at our reference to see [which formats are supported](https://www.todoist.com/help/articles/introduction-to-due-dates-and-due-times-q7VobO).                                                                                        |\n| lang _string_           | Lang which has to be used to parse the content of the string attribute. Used by clients and on the server side to properly process due dates when date object is not set, and when dealing with recurring tasks. Valid languages are: `en`, `da`, `pl`, `zh`, `ko`, `de`, `pt`, `ja`, `it`, `fr`, `sv`, `ru`, `es`, `nl`, `fi`, `nb`, `tw`. |\n| is*recurring \\_boolean* | Boolean flag which is set to `true` is due object represents a recurring due date                                                                                                                                                                                                                                                           |\n\n## Create or update due dates\n\nUsually you create due dates when you create a new task or a reminder, or\nyou want to update a due date for an object. In both cases due date is provided\nas a `due` attribute of an object. You may provide all fields of an object in\nthe constructor, but it's more convenient to provide only a subset of the\nfields and let the server fill the gaps.\n\n#### Create or update due date from user-provided string\n\n> Input example\n\n```json\n\"due\": {\"string\":  \"tomorrow\"}\n```\n\n> Output example. Full-date instance is created.\n\n```json\n\"due\": {\n    \"date\": \"2018-11-15\",\n    \"timezone\": null,\n    \"is_recurring\": false,\n    \"string\": \"tomorrow\",\n    \"lang\": \"en\"\n}\n```\n\n> Input example\n\n```json\n\"due\": {\"string\":  \"tomorrow at 12\"}\n```\n\n> Output example. Floating due date created\n\n```json\n\"due\": {\n    \"date\": \"2018-11-15T12:00:00.000000\",\n    \"timezone\": null,\n    \"is_recurring\": false,\n    \"string\": \"tomorrow at 12\",\n    \"lang\": \"en\"\n}\n```\n\n> Input example. Timezone is set explicitly\n\n```json\n\"due\": {\"string\": \"tomorrow at 12\", \"timezone\": \"Asia/Jakarta\"}\n```\n\n> Output example. Due date with fixed timezone created\n\n```json\n\"due\": {\n    \"date\": \"2018-11-16T05:00:00.000000Z\",\n    \"timezone\": \"Asia/Jakarta\",\n    \"is_recurring\": false,\n    \"string\": \"tomorrow at 12\",\n    \"lang\": \"en\"\n}\n```\n\nYou can ask the user to provide a due string and to create a new object from that.\nYou need to provide a timezone if you want to create a fixed due date instead\nof a floating one. If you want to create a task without a due date, you\ncan set the due attribute to `null`.\n\nSee the code section to the right for more examples. In all cases you can set\nthe `lang` attribute of the date to set the language of the input. If the language\nis not set, the language from user settings will be used.\n\n#### Create or update due date from a date object\n\n> Input example for a full-day event\n\n```json\n\"due\": {\"date\": \"2018-10-14\"}\n```\n\nFor a full-day event the format of the date attribute is `YYYY-MM-DD`.\n\n> Output example\n\n```json\n\"due\": {\n    \"date\": \"2018-10-14\",\n    \"timezone\": null,\n    \"is_recurring\": false,\n    \"string\": \"2018-10-14\",\n    \"lang\": \"en\"\n}\n```\n\n> Input example for a floating due date\n\n```json\n\"due\": {\"date\": \"2018-10-14T10:00:00.000000\"}\n```\n\n> Output example\n\n```json\n\"due\": {\n    \"date\": \"2018-10-14T10:00:00.000000\",\n    \"timezone\": null,\n    \"is_recurring\": false,\n    \"string\": \"2018-10-14 10:00\",\n    \"lang\": \"en\"\n}\n```\n\nIn some cases you have a date object and want to create a due date from it.\nUsually all you need to do is choose the format of the due date (floating\nor fixed) and format the time object properly with strftime or alternative for\nyour programming language. The formatted string goes to a \"date\" attribute of\nthe constructor.\n\nNote that this approach does not allow you to create recurring due dates.\n\nFor a floating due date event the format of the date attribute is\n`YYYY-MM-DDTHH:MM:SS` and the date has to be provided in user's local\ntimezone.\n\n> Input example for a due date with a fixed timezone\n\n```json\n\"due\": {\"date\": \"2018-10-14T05:00:00.000000Z\"}\n```\n\n> Output example\n\n```json\n\"due\": {\n    \"date\": \"2018-10-14T05:00:00.000000Z\",\n    \"timezone\": \"Asia/Jakarta\",\n    \"is_recurring\": false,\n    \"string\": \"2018-10-14 12:00\",\n    \"lang\": \"en\"\n}\n```\n\nFor a fixed due date event the format of the date attribute is\n`YYYY-MM-DDTHH:MM:SSZ` (note the \"Z\" ending) and the date has to be provided\nin UTC. Optionally you can provide a timezone name to overwrite the default\ntimezone of the user.\n"
    },
    {
      "name": "Deadlines",
      "description": "Similar to due dates, deadlines can be set on tasks, and can be used to differentiate\nbetween when a task should be started, and when it must be done by.\n\nUnlike due dates, deadlines only support non-recurring dates with no time component.\n\nYou can find our more information about\n[deadlines](https://www.todoist.com/help/articles/introduction-to-deadlines-uMqbSLM6U) in\nour Help Center.\n\n## Example deadline object\n\n```json\n{\n    \"date\": \"2016-12-01\",\n    \"lang\": \"en\"\n}\n```\n\n#### Properties\n\n| Property       | Description|\n|----------------| -----------|\n| date *string*  | Deadline in the format of `YYYY-MM-DD` ([RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339)).|\n|  lang *string* | Lang which has to be used to parse the content of the string attribute. Used by clients and on the server side to properly process deadlines. Valid languages are: `en`, `da`, `pl`, `zh`, `ko`, `de`, `pt`, `ja`, `it`, `fr`, `sv`, `ru`, `es`, `nl`, `fi`, `nb`, `tw`.|\n\n## Create or update deadlines\n\nUsually you create deadlines when you create a new task, or  you want to update a\ndeadline for an object. In both cases due date is provided as a `deadline` attribute of\nan object.\n\n#### Create or update deadline\n\n> Input example\n\n```json\n\"deadline\": {\"date\":  \"2024-01-25\", \"lang\": \"en\"}\n```\n\n> Output example\n\n```json\n\"deadline\": {\n    \"date\": \"2024-01-25\",\n    \"lang\": \"en\"\n}\n```\n\n"
    },
    {
      "name": "User",
      "description": ""
    },
    {
      "name": "Activity",
      "description": "_Availability of the activity log and the duration of event storage are\ndependent on the current user plan. These values are indicated by the\n`activity_log` and `activity_log_limit` properties of the [user plan\nlimits](#tag/Sync/User/User-plan-limits) object._\n\nThe activity log makes it easy to see everything that is happening across projects, items and notes.\n\n### Logged events\n\nCurrently the official Todoist clients present only the most important events\nthat most users may be interested in.\nThere are further types of events related to projects, items and notes that are\nstored in our database, and can be accessed through the API.\n\nThe following events are logged for items:\n\n- Items added\n- Items updated (only changes to `content`, `description`, `due_date` and `responsible_uid`)\n- Items deleted\n- Items completed\n- Items uncompleted\n\nThe following events are logged for notes:\n\n- Notes added\n- Notes updated (only changes to `content` or `file_name` if the former is empty)\n- Notes deleted\n\nThe following events are logged for projects:\n\n- Projects added\n- Projects updated (only changes to `name`)\n- Projects deleted\n- Projects archived\n- Projects unarchived\n- Projects shared\n- Projects left\n\n### Pagination details\n\nThere are 3 parameters that control which events are returned from the activity\nlog. These parameters should be used in combination to get all the events one\nis interested in.\n\n#### The `page` parameter\n\nThe events in the activity log are organized by week. Each week starts at\nSunday `12:00:00` (PM or noon), and ends the next Sunday at `11:59:59`, This\nmeans that one can target a specific week, and get events from that week. The\n`page` parameter specifies from which week to fetch events, and it does so in a\nway that is relative to the current time.\n\nThis will be more easy to understand with the following example. Assuming it's\nnow `Wednesday, February 23`, then:\n\n- `page=0`: Denotes events from the current week, that is from `Sunday, February 20`, to just now\n- `page=1`: Denotes events from last week, from `February 13`, to `February 20`\n- `page=2`: Denotes events from 2 weeks ago, from `February 6`, to `February 13`\n- `page=3`: Denotes events from 3 weeks ago, from `January 30`, to `February 6`\n\nAnd so on.\n\nIf the `page` parameter is not specified, then events from the current and last\nweek are returned. This is equivalent to getting events for `page=0` and\n`page=1` together. So omitting the `page` parameter, and depending on which day\nof the week the call is made, this should return events from `7` to `14` days\nago. This is useful in order to always fetch at least a week's events, even on\nMondays.\n\nIn the above example, this would return events from `Sunday, February 13` to\n`Wednesday, February 23`, so around `10` days.\n\n#### The `limit` and `offset` parameters\n\nEach week can have a lot of events. This is where the `limit` and `offset`\nparameters come into play. Because it's not resource friendly to get hundreds\nof events in one call, the events returned are limited by the default value of\nthe `limit` parameter, as defined above in the [Properties](#tag/Activity)\nsection. This limit can be increased, but up to a maximum value, again defined\nin the [Properties](#tag/Activity) section.\n\nSince not all of the events of a specific week, can be returned in a single\ncall, a subsequent call should use the `offset` parameter, in order to skip the\nevents already received.\n\nAs an example, assuming that the current week (ie. `page=0`) has `78` events,\nand that a `limit=50` is used in order to get up to `50` events in each call,\none would need to do 2 calls:\n\n1. A request with parameters `page=0`, `limit=50`, and `offset=0`, will return `50` events and also the `count=78` value\n2. Since the return value `count=78` is larger than `limit=50`, an additional call is needed with the parameters `page=0`, `limit=50`, and `offset=50`, which will return the rest of the `28` events\n\nIf last week had `234` events, and assuming a `limit=100` was used:\n\n1. A request with `page=1`, `limit=100` and `offset=0`, will return `100` events, and `count=234`\n2. A second request with `page=1`, `limit=100` and `offset=100`, will return additional `100` events\n3. A third request with `page=1`, `limit=100` and `offset=200`, will return the remaining `34` events\n"
    },
    {
      "name": "Backups",
      "description": "_Availability of backups functionality is dependent on the current user plan. This value is indicated by the automatic_backups property of the user plan limits object._"
    },
    {
      "name": "Emails",
      "description": ""
    },
    {
      "name": "Webhooks",
      "description": "The Todoist Webhooks API allows applications to receive real-time notification\n(in the form of HTTP POST payload) on the subscribed user events. Notice that\nonce you have a webhook setup, you will start receiving webhook events from\n**all your app users** immediately.\n\n#### Important Considerations\n\nDue to the nature of network requests, your application should assume webhook\nrequests could arrive out of order or could even fail to arrive; webhooks should\nbe used only as notifications and not as a primary Todoist data source (make\nsure your application could still work when webhook is not available).\n\n#### Webhook Activation & Personal Use\n\nThe webhook for a specific user is activated when that user completes the [OAuth flow](#tag/Authorization/OAuth) of the app that declares the webhook.\n\n**Todoist webhooks don't fire by default for the user that has created the Todoist app, which is frequently the desired state for the personal use of webhooks.**\n\nTo activate webhooks for personal use, you need to complete the OAuth process with your account. You can do this without code by manually executing the OAuth flow in two steps.\n\n1. Performing the [authorization request](#tag/Authorization/OAuth) in the browser and capturing the `code` via the browser's developer tools.\n2. Performing the [token exchange request](#tag/Authorization/OAuth) through a tool like [Postman](https://www.postman.com/) and reading the `access_token` from the response. _Note that you can't make this request via the browser as it needs to be a POST request._\n\n## Configuration\n\nBefore you can start receiving webhook event notifications, you must first have\nyour webhook configured at the App Management Console.\n\n#### Events\n\nHere is a list of events that you could subscribe to, and they are configured at\nthe [App Management Console](https://developer.todoist.com/appconsole.html).\n\n| Event Name         | Description              | Event Data                             |\n| ------------------ | ------------------------ | -------------------------------------- |\n| item:added         | A task was added        | The new [Task](#tag/Sync/Tasks).                |\n| item:updated       | A task was updated      | The updated [Task](#tag/Sync/Tasks).            |\n| item:deleted       | A task was deleted      | The deleted [Task](#tag/Sync/Tasks).            |\n| item:completed     | A task was completed    | The completed [Task](#tag/Sync/Tasks).          |\n| item:uncompleted   | A task was uncompleted  | The uncompleted [Task](#tag/Sync/Tasks).        |\n| note:added         | A comment was added         | The new [Comment](#tag/Sync/Comments).                |\n| note:updated       | A comment was updated       | The updated [Comment](#tag/Sync/Comments).            |\n| note:deleted       | A comment was deleted       | The deleted [Comment](#tag/Sync/Comments).            |\n| project:added      | A project was added      | The new [Project](#tag/Sync/Projects).          |\n| project:updated    | A project was updated    | The updated [Project](#tag/Sync/Projects).      |\n| project:deleted    | A project was deleted    | The deleted [Project](#tag/Sync/Projects).      |\n| project:archived   | A project was archived   | The archived [Project](#tag/Sync/Projects).     |\n| project:unarchived | A project was unarchived | The unarchived [Project](#tag/Sync/Projects).   |\n| section:added      | A section was added      | The new [Section](#tag/Sync/Sections).          |\n| section:updated    | A section was updated    | The updated [Section](#tag/Sync/Sections).      |\n| section:deleted    | A section was deleted    | The deleted [Section](#tag/Sync/Sections).      |\n| section:archived   | A section was archived   | The archived [Section](#tag/Sync/Sections).     |\n| section:unarchived | A section was unarchived | The unarchived [Section](#tag/Sync/Sections).   |\n| label:added        | A label was added        | The new [Label](#tag/Sync/Labels).              |\n| label:deleted      | A label was deleted      | The deleted [Label](#tag/Sync/Labels).          |\n| label:updated      | A label was updated      | The updated [Label](#tag/Sync/Labels).          |\n| filter:added       | A filter was added       | The new [Filter](#tag/Sync/Filters).            |\n| filter:deleted     | A filter was deleted     | The deleted [Filter](#tag/Sync/Filters).        |\n| filter:updated     | A filter was updated     | The updated [Filter](#tag/Sync/Filters).        |\n| reminder:fired     | A reminder has fired     | The [Reminder](#/tag/Sync/Reminders) that fired. |\n\n#### Events Extra\n\nSome events can include extra meta information in the `event_data_extra` field. These can be useful, for example, if you need to distinguish between item updates that are postponed and initiated by the user and item updates that are task completions (initiated by completing a recurring task)\n\n| Event Name   | Description                                                                         | Event Data                                                                                                             |\n| ------------ | ----------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| item:updated | For events issued by the user directly these include `old_item` and `update_intent` | `old_item` will be an [Task](#tag/Sync/Tasks), and `update_intent` can be `item_updated`, `item_completed`, `item_uncompleted`. |\n\n## Request Format\n\n#### Event JSON Object\n\n> Example Webhook Request\n\n```text\nPOST /payload HTTP/1.1\n\nHost: your_callback_url_host\nContent-Type: application/json\nX-Todoist-Hmac-SHA256: UEEq9si3Vf9yRSrLthbpazbb69kP9+CZQ7fXmVyjhPs=\n```\n\n```json\n{\n    \"event_name\": \"item:added\",\n    \"user_id\": \"2671355\",\n    \"event_data\": {\n        \"added_by_uid\": \"2671355\",\n        \"assigned_by_uid\": null,\n        \"checked\": false,\n        \"child_order\": 3,\n        \"collapsed\": false,\n        \"content\": \"Buy Milk\",\n        \"description\": \"\",\n        \"added_at\": \"2025-02-10T10:33:38.000000Z\",\n        \"completed_at\": null,\n        \"due\": null,\n        \"deadline\": null,\n        \"id\": \"6XR4GqQQCW6Gv9h4\",\n        \"is_deleted\": false,\n        \"labels\": [],\n        \"parent_id\": null,\n        \"priority\": 1,\n        \"project_id\": \"6XR4H993xv8H5qCR\",\n        \"responsible_uid\": null,\n        \"section_id\": null,\n        \"url\": \"https://app.todoist.com/app/task/6XR4GqQQCW6Gv9h4\",\n        \"user_id\": \"2671355\"\n    },\n    \"initiator\": {\n        \"email\": \"alice@example.com\",\n        \"full_name\": \"Alice\",\n        \"id\": \"2671355\",\n        \"image_id\": \"ad38375bdb094286af59f1eab36d8f20\",\n        \"is_premium\": true\n    },\n    \"triggered_at\": \"2025-02-10T10:39:38.000000Z\",\n    \"version\": \"10\"\n}\n```\n\nEach webhook event notification request contains a JSON object. The event JSON\ncontains the following properties:\n\n| Property                   | Description                                                                                                                                                                       |\n| -------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| event_name _String_       | The event name for the webhook, see the table in the [Configuration](#tag/Webhooks/Configuration) section for the list of supported events.                                                    |\n| user_id _String_          | The ID of the user that is the destination for the event.                                                                                                                         |\n| event_data _Object_       | An object representing the modified entity that triggered the event, see the table in the [Configuration](#tag/Webhooks/Configuration) section for details of the `event_data` for each event. |\n| version _String_           | The version number of the webhook configured in the [App Management Console](https://developer.todoist.com/appconsole.html).                                                                                   |\n| initiator _Object_         | A [Collaborator](#collaborators) object representing the user that triggered the event. This may be the same user indicated in `user_id` or a collaborator from a shared project. |\n| triggered_at _String_     | The date and time when the event was triggered.                                                                                                                                   |\n| event_data_extra _Object_ | Optional object that can include meta information, see the table in the [Configuration](#tag/Webhooks/Configuration) section for details of the `event_data_extra` for each event.             |\n\n#### Request Header\n\n| Header Name           | Description                                                                                                                                                                                                                                                                                                    |\n| --------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| User-Agent            | Will be set to \"Todoist-Webhooks\"                                                                                                                                                                                                                                                                              |\n| X-Todoist-Hmac-SHA256 | To verify each webhook request was indeed sent by Todoist, an `X-Todoist-Hmac-SHA256` header is included; it is a SHA256 Hmac generated using your `client_secret` as the encryption key and the whole request payload as the message to be encrypted. The resulting Hmac would be encoded in a base64 string. |\n| X-Todoist-Delivery-ID | Each webhook event notification has a unique `X-Todoist-Delivery-ID`. When a notification request failed to be delivered to your endpoint, the request would be re-delivered with the same `X-Todoist-Delivery-ID`.                                                                                            |\n\n#### Failed Delivery\n\nWhen an event notification fails to be delivered to your webhook callback URL\n(i.e. due to server / network error, incorrect response, etc),\nit will be reattempted after 15 minutes. Each notification will be\nreattempted for at most three times.\n\n**Your callback endpoint must respond with an HTTP 200 when receiving an event\nnotification request.**\n\nA response other than HTTP 200 will be considered as a failed delivery, and the\nnotification will be attempted again.\n"
    },
    {
      "name": "Request limits",
      "description": "### Payload Size\n\nThere is a 1MiB HTTP request body limit on POST requests.\n\nThe maximum payload size for an [attachment upload](#uploads) is dependent on the current user plan.\nThis value is indicated by the `upload_limit_mb` property of the [user plan limits](#user-plan-limits) object.\n\n### Header Size\n\nTotal size of HTTP headers cannot exceed 65 KiB.\n\n### Processing Timeouts\n\nThere are processing timeouts associated with each endpoint, and these vary\ndepending on the type of action being performed.\n\n| Type             | Limit      |\n| ---------------- | ---------- |\n| Uploads          | 5 minutes  |\n| Standard Request | 15 seconds |\n\n### Rate Limiting\n\nLimits are applied differently for full and partial syncs. You should ideally only make a full sync on your initial request and then subsequently perform incremental syncs as this is faster and more efficient.\n\nSee the sync section for further information on [incremental sync](#read-resources).\n\nFor each user, you can make a maximum of 1000 partial sync requests within a 15 minute period.\n\nFor each user, you can make a maximum of 100 full sync requests within a 15 minute period.\n\nYou can reduce the number of requests you make by batching up to 100 commands in each request and it will still count as one.\nSee the [Batching Commands](#batching-commands) section for further information.\n\n### Maximum Sync Commands\n\nThe maximum number of commands is 100 per request. This restriction is applied to prevent\ntimeouts and other problems when dealing with large requests.\n"
    },
    {
      "name": "Url schemes",
      "description": "## Mobile app URL schemes\n\nOur applications for [Android](https://play.google.com/store/apps/details?id=com.todoist) and [iOS](https://apps.apple.com/us/app/todoist-to-do-list-calendar/id572688855) support custom URL schemes for launching to specific views and initiating some common actions.\n\n## Views\n\nThe following schemes are available to open a specific view:\n\n| Scheme                  | Description                                                                                                                                |\n| ----------------------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| todoist://              | Opens Todoist to the user's default view.                                                                                                  |\n| todoist://today         | Opens the today view.                                                                                                                      |\n| todoist://upcoming      | Opens the Upcoming view.                                                                                                                   |\n| todoist://profile       | Opens the profile view.                                                                                                                    |\n| todoist://inbox         | Opens the inbox view.                                                                                                                      |\n| todoist://teaminbox     | Opens the team inbox view. If the user doesn't have a business account it will show an alert and redirect automatically to the inbox view. |\n| todoist://notifications | Opens notifications view.                                                                                                                  |\n\n### Tasks\n\n> Example of adding a task:\n\n```text\ntodoist://addtask?content=mytask&date=tomorrow&priority=4\n```\n\n> Here's an example of a content value:\n\n```text\nCreate document about URL Schemes!\n```\n\n> And how it should be supplied using Percent-encoding:\n\n```text\nCreate&20document%20about%20URL%20Schemes%21\n```\n\n> Here's an example of a date value:\n\n```text\nTomorrow @ 14:00\n```\n\n> And how it should be supplied using Percent-encoding:\n\n```text\nTomorrow%20@%2014:00\n```\n\nThe following schemes are available for tasks:\n\n| Scheme                 | Description                                           |\n| ---------------------- | ----------------------------------------------------- |\n| todoist://task?id={id} | Opens a task by ID.                                   |\n| todoist://addtask      | Opens the add task view to add a new task to Todoist. |\n\nThe `todoist://addtask` scheme accepts the following optional values:\n\n| Value                  | Description                                                                                                                                                                                                                                                  |\n| ---------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| content _URL encoding_ | The content of the task, which should be a string that is in `Percent-encoding` (also known as URL encoding).                                                                                                                                                |\n| date _URL encoding_    | The due date of the task, which should be a string that is in `Percent-encoding` (also known as URL encoding). Look at our reference to see [which formats are supported](https://www.todoist.com/help/articles/introduction-to-due-dates-and-due-times-q7VobO). |\n| priority _Integer_     | The priority of the task (a number between `1` and `4`, `4` for very urgent and `1` for natural). <br>**Note**: Keep in mind that `very urgent` is the priority 1 on clients. So, `p1` will return `4` in the API.                                           |\n\nThis URL scheme will not automatically submit the task to Todoist, it will just open and pre-fill the add task view. If no values are passed, the add task view will just be opened.\n\n## Projects\n\nThe following schemes are available for tasks:\n\n| Scheme                    | Description                                   |\n| ------------------------- | --------------------------------------------- |\n| todoist://projects        | Opens the projects view (shows all projects). |\n| todoist://project?id={id} | Opens a specific project by ID.               |\n\n> Example of opening a specific project:\n\n```text\ntodoist://project?id=128501470\n```\n\nThe `todoist://project` scheme accepts the following required value:\n\n| Value        | Description                                                                                                                                                                                        |\n| ------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _Integer_ | The ID of the project to view. If the ID doesn't exist, you don't have access to the project, or the value is empty, an alert will be showed and the user will be redirected to the projects view. |\n\n### Labels\n\nThe following schemes are available for labels:\n\n| Scheme                      | Description                              |\n| --------------------------- | ---------------------------------------- |\n| todoist://labels            | Opens the labels view (shows all labels) |\n| todoist://label?name={name} | Opens a specific label by name.          |\n\n> Example of opening a specific label:\n\n```text\ntodoist://label?name=Urgent\n```\n\nThe `todoist://label` scheme accepts the following required value:\n\n| Value         | Description                                                                                                                                   |\n| ------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| name _String_ | The name of the label to view. If the label doesn't exist, you don't have access to the label, or the value is empty, an alert will be shown. |\n\n### Filters\n\nThe following schemes are available for filters:\n\n| Scheme                   | Description                                |\n| ------------------------ | ------------------------------------------ |\n| todoist://filters        | Opens the filters view (shows all filters) |\n| todoist://filter?id={id} | Opens a specific filter by ID.             |\n\n> Example of opening a specific filter:\n\n```text\ntodoist://filter?id=9\n```\n\nThe `todoist://filter` scheme accepts the following required value:\n\n| Value        | Description                                                                                                                                                                                     |\n| ------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _Integer_ | The ID of the filter to view. If the ID doesn't exist, you don’t have access to the filter, or the value is empty, an alert will be showed and the user will be redirected to the filters view. |\n\n### Search\n\nThe following scheme is available for searching (Android only):\n\n| Scheme                         | Description                                |\n| ------------------------------ | ------------------------------------------ |\n| todoist://search?query={query} | Used to search in the Todoist application. |\n\n> Example of searching for \"Test & Today\":\n\n```text\ntodoist://search?query=Test%20%26%20Today\n```\n\nThe `todoist://search` scheme accepts the following required value:\n\n| Value                | Description                                                                                                                          |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------------------------ |\n| query _URL encoding_ | The query to search in the Todoist application, which should be a string that is in `Percent-encoding` (also known as URL encoding). |\n\n## Desktop app URL schemes\n\nOur [Desktop](https://todoist.com/downloads) applications support custom URL schemes for launching to specific views and initiating some common actions. This can be useful for integrating Todoist with other applications or services, as browsers and other applications can open these URLs to interact with Todoist.\nAs an example, you could create a link in your application that opens a specific project in Todoist, or a link that adds a task to Todoist.\n\n### Views\n\nThe following schemes are available to open a specific view:\n\n| Scheme                                                             | Description                                           | minimum version requirement |\n| ------------------------------------------------------------------ | ----------------------------------------------------- | --------------------------- |\n| todoist://                                                         | Opens Todoist.                                        | 9.2.0                       |\n| todoist://inbox                                                    | Opens the inbox view.                                 | 9.2.0                       |\n| todoist://today                                                    | Opens the today view.                                 | 9.2.0                       |\n| todoist://upcoming                                                 | Opens the Upcoming view.                              | 9.2.0                       |\n| todoist://project?id={id}                                          | Opens the project detail view for a given project ID. | 9.2.0                       |\n| todoist://task?id={id}                                             | Opens the task detail view for a given task ID.       | 9.2.0                       |\n| todoist://openquickadd?content={content}&description={description} | Opens the global quick add, optionally refilled.      | 9.2.0                       |\n| todoist://notifications                                            | Opens the notifications view.                         | 9.10.0                      |\n| todoist://filters-labels                                           | Opens the filters & labels view.                      | 9.10.0                      |\n| todoist://filter?id={id}                                           | Opens the filter view for a given filter ID.          | 9.10.0                      |\n| todoist://label?id={id}                                            | Opens the label view for a given label ID.            | 9.10.0                      |\n| todoist://search?query={query}                                     | Opens the search view for the specified query.        | 9.10.0                      |\n| todoist://projects                                                 | Opens my projects view.                               | 9.10.0                      |\n| todoist://projects?workspaceId={id}                                | Opens the projects view for the given workspace ID.   | 9.10.0                      |\n| todoist://templates                                                | Opens the templates view.                             | 9.10.0                      |\n| todoist://templates?id={id}                                        | Opens the template view for the given template ID.    | 9.10.0                      |\n\n\n### Tasks\n\n> Example of adding a task:\n\n_Note that this will not add the task but open the Global Quick Add refilled with given values._\n\n```text\ntodoist://openquickadd?content=mytask&description=%20is%20a%20description\n```\n\nThe following schemes are available for tasks:\n\n| Scheme                 | Description                                              |\n| ---------------------- | -------------------------------------------------------- |\n| todoist://task?id={id} | Opens a task by ID.                                      |\n| todoist://openquickadd | Opens the global quick add to add a new task to Todoist. |\n\nThe `todoist://openquickadd` scheme accepts the following optional values:\n\n| Value                      | Description                                                                                                   |\n| -------------------------- | ------------------------------------------------------------------------------------------------------------- |\n| content _URL encoding_     | The content of the task, which should be a string that is in `Percent-encoding` (also known as URL encoding). |\n| description _URL encoding_ | The content of the task, which should be a string that is in `Percent-encoding` (also known as URL encoding). |\n\nThis URL scheme will not automatically submit the task to Todoist, it will just open and pre-fill the global quick add panel. If no values are passed, the global quick add will just be open.\n\n### Projects\n\nThe following schemes are available for projects:\n\n| Scheme                    | Description                     |\n| ------------------------- | ------------------------------- |\n| todoist://project?id={id} | Opens a specific project by ID. |\n\n> Example of opening a specific project:\n\n```text\ntodoist://project?id=128501470\n```\n\nThe `todoist://project` scheme accepts the following required value:\n\n| Value        | Description                                                                                                                                                                                           |\n| ------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id _Integer_ | The ID of the project to view. If the ID doesn't exist it will just open Todoist. If you don't have access to the project, or the project does not exist, an error message will be shown to the user. |\n"
    },
    {
      "name": "Migrating from v9",
      "description": "The Todoist API v1 is a new API that unifies the Sync API v9 and the REST API\nv2. This section shows what was changed in the new version in one single\nplace to ease the migration for current apps and integrations.\n\nThe documentation for the [Sync API v9](https://developer.todoist.com/sync/v9)\nand [REST API v2](https://developer.todoist.com/rest/v2) are still available\nfor reference.\n\n# General changes\n\n## IDs\n\nSince 2023, our objects returned `v2_*_id` attributes. That \"v2 id\" has now become the main `id`.\n\nIDs have been opaque strings almost everywhere since the release of Sync API v9,\nbut were still mostly numbers in that version. This version officially makes\nthem non-number opaque strings, changing the old IDs.\n\nThe `v2_*_id` attribute is still available on Sync API v9, but was removed on the new version.\nWe suggest relying on them for migrating stored or cached data before bumping the major version.\n\nYou can also rely on the following endpoint to translate between both ID versions:\n[`/api/v1/ids_mapping/<object>/<id>[,<id>]`](#tag/Ids/operation/id_mappings_api_v1_id_mappings__obj_name___obj_ids__get).\nIt supports up to 100 IDs (of the same object) at a time.\n\nOld IDs will NOT be accepted in this new API version for the following objects:\n\n- notes / comments\n- items / tasks\n- projects\n- sections\n- notifications / reminders\n- notifications_locations / location_reminder\n\nTrying to use old IDs will result in an error.\n\n## Lowercase endpoints\n\nUp until now, Todoist's endpoints were case-insensitive. The Todoist API v1\nwill make endpoints default to lowercase (mostly snake_case) and reject mixed casing.\n\nAs an example:\n\n<https://api.todoist.com/API/v9/Sync>\n\nwould before be accepted in the same way as:\n\n<https://api.todoist.com/api/v9/sync>\n\nbut now, the former will return 404.\n\nPlease confirm you're only issuing requests to lowercase endpoints.\n\n## Pagination\n\nThis version adds pagination to many endpoints.\n\nThe following endpoints are now paginated:\n\n- `/api/v1/tasks`\n- `/api/v1/labels`\n- `/api/v1/labels/shared`\n- `/api/v1/comments`\n- `/api/v1/sections`\n- `/api/v1/projects`\n- `/api/v1/projects/archived`\n- `/api/v1/projects/<project_id>/collaborators`\n- `/api/v1/activities`\n\nThey all use [cursor-based pagination](#section/Developing-with-Todoist/Pagination).\n\n# Previous REST API endpoints error responses\n\nAll endpoints related to `/tasks`, `/comments`, `/sections`, `/projects`, and\n`/labels` were returning `plain/text` error responses before the Todoist API v1.\nWith the unification of the APIs, we now unified the error response to return\n`application/json` on these endpoints.\n\nInstead of:\n\n```\nContent-type: plain/text\nTask not found\n```\n\nIt will return:\n\n```json\nContent-type: application/json\n{\n  'error': 'Task not found',\n  'error_code': 478,\n  'error_extra': {'event_id': '<hash>', 'retry_after': 3},\n  'error_tag': 'NOT_FOUND',\n  'http_code': 404\n}\n```\n\nThis is the same format used in the previous Sync API, which is now the default for the whole Todoist API.\n\n# Object renames\n\nThe API kept the old names of objects for a long time to avoid breaking\ncompatibility, but the unification of APIs was the perfect time to unformize.\n\nThe Todoist API v1 renames objects to match what users currently see in the app:\n\n| Sync v9 / REST v2       | Todoist API v1           |\n|-------------------------|--------------------------|\n| items                   | tasks                    |\n| notes                   | comments                 |\n| notifications           | reminders                |\n| notifications_locations | location_reminders       |\n\nAnywhere you see the concepts on the left, they should be renamed to the\nconcepts on the right, unless it's a documented exception.\n\nThe only exceptions for the renames are the `/sync` and `/activities` endpoints. They are currently scheduled for bigger architectural refactoring in the near future, so we kept the old naming for now, and will rename in the next version.\n\n# URL renames\n\nWith the unification of both API, we took the chance to unify concepts and improve some old time URLs to new standards. These are the endpoint signature changes:\n| Sync v9 / REST v2                            | Todoist API v1                                              |\n|----------------------------------------------|-------------------------------------------------------------|\n| `/api/v9/update_notification_setting`          | PUT `/api/v1/notification_setting`                            |\n| `/api/v9/uploads/add`                          | POST `/api/v1/uploads`                                        |\n| `/api/v9/uploads/get`                          | GET `/api/v1/uploads`                                         |\n| `/api/v9/uploads/delete`                       | DELETE `/api/v1/uploads`                                      |\n| `/api/v9/backups/get`                          | GET `/api/v1/backups`                                         |\n| `/api/v9/access_tokens/revoke`                 | DELETE `/api/v1/access_tokens`                                |\n| `/api/access_tokens/revoke`                    | DELETE `/api/v1/access_tokens`                                |\n| `/api/access_tokens/migrate_personal_token`    | POST `/api/v1/access_tokens/migrate_personal_token`           |\n| `/api/v9/access_tokens/migrate_personal_token` | POST `/api/v1/access_tokens/migrate_personal_token`           |\n| `/api/v9/archive/sections`                     | GET `/api/v1/sections/archived`                               |\n| `/api/v9/quick/add`                            | POST `/api/v1/tasks/quick`                                    |\n| `/api/v9/emails/get_or_create`                 | PUT `/api/v1/emails`                                          |\n| `/api/v9/emails/disable`                       | DELETE `/api/v1/emails`                                       |\n| `/api/v9/get_productivity_stats`               | GET `/api/v1/tasks/completed/stats`                           |\n| `/api/v9/completed/get_stats`                  | GET `/api/v1/tasks/completed/stats`                           |\n| `/api/v9/completed/get_all`                    | GET `/api/v1/tasks/completed`                                 |\n| `/api/v9/projects/get_archived`                | GET `/api/v1/projects/archived`                               |\n| `/api/v9/projects/join`                        | POST `/api/v1/projects/<project_id>/join`                     |\n| `/api/v9/workspaces/projects/active`           | GET `/api/v1/workspaces/<workspace_id>/projects/active`       |\n| `/api/v9/workspaces/projects/archived`         | GET `/api/v1/workspaces/<workspace_id>/projects/archived`     |\n| `/api/v9/workspaces/update_logo`               | POST `/api/v1/workspaces/logo`                                |\n| `/api/v9/workspaces/invitations/accept`        | PUT `/api/v1/workspaces/invitations/<invitation_code>/accept` |\n| `/api/v9/workspaces/invitations/reject`        | PUT `/api/v1/workspaces/invitations/<invitation_code>/reject` |\n| `/api/v9/workspaces/joinable_workspaces`       | GET `/api/v1/workspaces/joinable`                             |\n| `/api/v9/projects/get_data`                    | GET `/api/v1/projects/<project_id>/full`                      |\n| `/api/v9/templates/import_into_project`        | POST `/api/v1/templates/import_into_project_from_file`        |\n| `/api/v9/templates/export_as_file`             | GET `/api/v1/templates/file`                                  |\n| `/api/v9/templates/export_as_url`              | GET `/api/v1/templates/url`                                   |\n| `/api/v9/activity/get`                         | GET `/api/v1/activities`                                      |\n| `/api/v9/tasks/archived/by_due_date`           | GET `/api/v1/tasks/completed/by_due_date`                     |\n| `/api/v9/tasks/completed/by_completion_date`   | GET `/api/v1/tasks/completed/by_completion_date`              |\n\n# Deprecated endpoints\n\nThere are some endpoints that were previously available in the Sync or REST\nAPIs, but were removed from the Todoist API v1. Below is a list of them and\npossible candidates for replacement:\n\n| Sync v9 / REST v2             | New endpoint taking its place                                               |\n|-------------------------------|-----------------------------------------------------------------------------|\n| `/sync/v9/archive/items_many` | `/api/v1/tasks/completed/by_completion_date`                                |\n| `/sync/v9/archive/items`      | `/api/v1/tasks/completed/by_completion_date`                                |\n| `/sync/v9/completed/get_all`  | `/api/v1/tasks/completed/by_completion_date`                                |\n| `/sync/v9/projects/get`       | `/api/v1/projects`, `/api/v1/comment`                                       |\n| `/sync/v9/items/get`          | `/api/v1/tasks`, `/api/v1/comments`, `/api/v1/projects`, `/api/v1/sections` |\n| `/sync/v9/projects/get_data`  | `/api/v1/tasks`, `/api/v1/comments`, `/api/v1/projects`, `/api/v1/sections` |\n\n# /sync endpoint changes\n\n- This endpoint is one of the exceptions for [object renames](#tag/Migrating-from-v9/Object-renames),\nwith legacy naming still in use\n- `day_orders_timestamp` attribute was removed from the response on the `/sync` endpoint\n\n## Sections\n\n- `collapsed` attribute is renamed to `is_collapsed`\n\n## User\n\n- `is_biz_admin` attribute was removed\n\n# Other endpoints\n\n## Workspace projects\n\n- Removes `uncompleted_tasks_count` and `total_tasks_count` from [Workspace Projects](#tag/Workspace/operation/active_projects_api_v1_workspaces__workspace_id__projects_active_get)\n\n## /tasks\n\n- The `comment_count` attribute was removed from the response: this applies to all `/tasks*` endpoints.\n-  The `filter` and `lang` parameters were removed: A new dedicated endpoint has been created specifically for filtering tasks: `/api/v1/tasks/filter`. This new endpoint allows for the same filtering capabilities but with a more specialized API surface.\n\n## /projects\n\n- The `comment_count` attribute was removed from the response: this applies to all `/projects*` endpoints.\n\n## /sections\n\nSections used a slightly different response formats in the Sync and REST APIs.\nThe Todoist API v1 uses the format previously used by the Sync API everywhere.\n\n## /comments\n\nComments a used slightly different response formats in the Sync and REST APIs.\nThe Todoist API v1 uses the format previously used by the Sync API everywhere.\n\n# Webhooks\n\nThere are no changes to specific to webhooks, but they will inherit all the other changes to formatting and renames mentioned above. Developers are expected [to change the version of the webhook for their integration](https://developer.todoist.com/appconsole.html) and start accepting the new formatting once the integration is ready to handle it.\n"
    }
  ],
  "servers": [
    {
      "url": "https://api.todoist.com/"
    }
  ]
}